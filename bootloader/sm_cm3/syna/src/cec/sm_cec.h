/* SPDX-License-Identifier: GPL-2.0+ */
/*
 * Copyright (C) 2013~2023 Synaptics Incorporated. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 or
 * later as published by the Free Software Foundation.
 *
 * INFORMATION CONTAINED IN THIS DOCUMENT IS PROVIDED "AS-IS," AND
 * SYNAPTICS EXPRESSLY DISCLAIMS ALL EXPRESS AND IMPLIED WARRANTIES,
 * INCLUDING ANY IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE, AND ANY WARRANTIES OF NON-INFRINGEMENT OF ANY
 * INTELLECTUAL PROPERTY RIGHTS. IN NO EVENT SHALL SYNAPTICS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, PUNITIVE, OR
 * CONSEQUENTIAL DAMAGES ARISING OUT OF OR IN CONNECTION WITH THE USE
 * OF THE INFORMATION CONTAINED IN THIS DOCUMENT, HOWEVER CAUSED AND
 * BASED ON ANY THEORY OF LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, AND EVEN IF SYNAPTICS WAS
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IF A TRIBUNAL OF
 * COMPETENT JURISDICTION DOES NOT PERMIT THE DISCLAIMER OF DIRECT
 * DAMAGES OR ANY OTHER DAMAGES, SYNAPTICS' TOTAL CUMULATIVE LIABILITY
 * TO ANY PARTY SHALL NOT EXCEED ONE HUNDRED U.S. DOLLARS.
 */
#ifdef CECENABLE
#ifndef __SM_CEC_H__
#define __SM_CEC_H__

#define ICTL1_IRQ_INTEN_OFFSET		0x000
#define ICTL1_IRQ_INTEN_OFFSET_L	0x000
#define ICTL1_IRQ_INTEN_OFFSET_H	0x004
#define ICTL1_IRQ_INTMASK_OFFSET	0x008
#define ICTL1_IRQ_INTMASK_OFFSET_L	0x008
#define ICTL1_IRQ_INTMASK_OFFSET_H	0x00c
#define ICTL1_IRQ_INTFORCE_OFFSET	0x010
#define ICTL1_IRQ_INTFORCE_OFFSET_L	0x010
#define ICTL1_IRQ_INTFORCE_OFFSET_H	0x014
#define ICTL1_IRQ_RAWSTATUS_OFFSET	0x018
#define ICTL1_IRQ_RAWSTATUS_OFFSET_L	0x018
#define ICTL1_IRQ_RAWSTATUS_OFFSET_H	0x01c
#define ICTL1_IRQ_STATUS_OFFSET		0x020
#define ICTL1_IRQ_STATUS_OFFSET_L	0x020
#define ICTL1_IRQ_STATUS_OFFSET_H	0x024
#define ICTL1_IRQ_MASKSTATUS_OFFSET	0x028
#define ICTL1_IRQ_MASKSTATUS_OFFSET_L	0x028
#define ICTL1_IRQ_MASKSTATUS_OFFSET_H	0x02c
#define ICTL1_IRQ_FINALSTATUS_OFFSET	0x030
#define ICTL1_IRQ_FINALSTATUS_OFFSET_L	0x030
#define ICTL1_IRQ_FINALSTATUS_OFFSET_H	0x034
#define APB_ICTL1_IRQ_INTEN          (APB_ICTL1_BASE + ICTL1_IRQ_INTEN_OFFSET)
#define APB_ICTL1_IRQ_INTEN_L        (APB_ICTL1_BASE + ICTL1_IRQ_INTEN_OFFSET_L)
#define APB_ICTL1_IRQ_INTEN_H        (APB_ICTL1_BASE + ICTL1_IRQ_INTEN_OFFSET_H)
#define APB_ICTL1_IRQ_INTMASK        (APB_ICTL1_BASE + ICTL1_IRQ_INTMASK_OFFSET)
#define APB_ICTL1_IRQ_INTMASK_L      (APB_ICTL1_BASE + ICTL1_IRQ_INTMASK_OFFSET_L)
#define APB_ICTL1_IRQ_INTMASK_H      (APB_ICTL1_BASE + ICTL1_IRQ_INTMASK_OFFSET_H)
#define APB_ICTL1_IRQ_INTFORCE       (APB_ICTL1_BASE + ICTL1_IRQ_INTFORCE_OFFSET)
#define APB_ICTL1_IRQ_INTFORCE_L     (APB_ICTL1_BASE + ICTL1_IRQ_INTFORCE_OFFSET_L)
#define APB_ICTL1_IRQ_INTFORCE_H     (APB_ICTL1_BASE + ICTL1_IRQ_INTFORCE_OFFSET_H)
#define APB_ICTL1_IRQ_RAWSTATUS      (APB_ICTL1_BASE + ICTL1_IRQ_RAWSTATUS_OFFSET)
#define APB_ICTL1_IRQ_RAWSTATUS_L    (APB_ICTL1_BASE + ICTL1_IRQ_RAWSTATUS_OFFSET_L)
#define APB_ICTL1_IRQ_RAWSTATUS_H    (APB_ICTL1_BASE + ICTL1_IRQ_RAWSTATUS_OFFSET_H)
#define APB_ICTL1_IRQ_STATUS         (APB_ICTL1_BASE + ICTL1_IRQ_STATUS_OFFSET)
#define APB_ICTL1_IRQ_STATUS_L       (APB_ICTL1_BASE + ICTL1_IRQ_STATUS_OFFSET_L)
#define APB_ICTL1_IRQ_STATUS_H       (APB_ICTL1_BASE + ICTL1_IRQ_STATUS_OFFSET_H)
#define APB_ICTL1_IRQ_MASKSTATUS     (APB_ICTL1_BASE + ICTL1_IRQ_MASKSTATUS_OFFSET)
#define APB_ICTL1_IRQ_MASKSTATUS_L   (APB_ICTL1_BASE + ICTL1_IRQ_MASKSTATUS_OFFSET_L)
#define APB_ICTL1_IRQ_MASKSTATUS_H   (APB_ICTL1_BASE + ICTL1_IRQ_MASKSTATUS_OFFSET_H)
#define APB_ICTL1_IRQ_FINALSTATUS    (APB_ICTL1_BASE + ICTL1_IRQ_FINALSTATUS_OFFSET)
#define APB_ICTL1_IRQ_FINALSTATUS_L  (APB_ICTL1_BASE + ICTL1_IRQ_FINALSTATUS_OFFSET_L)
#define APB_ICTL1_IRQ_FINALSTATUS_H  (APB_ICTL1_BASE + ICTL1_IRQ_FINALSTATUS_OFFSET_H)

//#define SM_CEC_DEBUG_MODE
#ifdef SM_CEC_DEBUG_MODE
#undef PRT_DEBUG1
#define PRT_DEBUG1(msg...) do {if (get_dbg_level() & DBG_INFO)\
	{sm_printf("[%8d]CEC(SM): ", mv_sm_timer_gettimems()); sm_printf(msg);}} while(0)
#define PRT_DIRECT(msg...) do { \
	{sm_printf(msg);}} while (0)
#else
#define PRT_DIRECT(msg...)
#endif

#endif
#endif
