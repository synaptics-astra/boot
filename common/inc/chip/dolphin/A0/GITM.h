//////
/// don't edit! auto-generated by docc: GITM.h
////////////////////////////////////////////////////////////
#ifndef GITM_h
#define GITM_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE GITM                                     (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL0                (P)
///               %unsigned 8  pqLutSize                 0x7C
///                                    ###
///                                    * The size of PQ_LUT. Its valid value is [1, 0x80].
///                                    ###
///               %unsigned 7  satValue                  0x40
///                                    ###
///                                    * Gives the saturation to apply on the final stage. 0x40 = 1.0 saturation, 0x7F = 1.984375
///                                    ###
///               %unsigned 12 RtoY                      0x367
///                                    ###
///                                    * Y is computed according to Rec.709 description. The coefficients are 12-bit wide
///                                    * mRGB709toYUV709fr[3] = { 871, 2929, 296 }
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x00004 CTRL1                (P)
///               %unsigned 12 GtoY                      0xB71
///                                    ###
///                                    * Y is computed according to Rec.709 description. The coefficients are 12-bit wide
///                                    * mRGB709toYUV709fr[3] = { 871, 2929, 296 }
///                                    ###
///               %unsigned 12 BtoY                      0x128
///                                    ###
///                                    * Y is computed according to Rec.709 description. The coefficients are 12-bit wide
///                                    * mRGB709toYUV709fr[3] = { 871, 2929, 296 }
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00008 CTRL2                (P)
///               %unsigned 12 YOffset                   0x0
///                                    ###
///                                    * Y is computed according to Rec.709 description. The coefficients are 12-bit wide
///                                    * y_offset_fr = 0
///                                    ###
///               %unsigned 16 CoeffR2R                  0xA09D
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///               %%        4          # Stuffing bits...
///     @ 0x0000C CTRL3                (P)
///               %unsigned 16 CoeffG2R                  0x544D
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///               %unsigned 16 CoeffB2R                  0xB16
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///     @ 0x00010 CTRL4                (P)
///               %unsigned 16 CoeffR2G                  0x11AA
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///               %unsigned 16 CoeffG2G                  0xEB6B
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///     @ 0x00014 CTRL5                (P)
///               %unsigned 16 CoeffB2G                  0x2EB
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///               %unsigned 16 CoeffR2B                  0x433
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///     @ 0x00018 CTRL6                (P)
///               %unsigned 16 CoeffG2B                  0x1687
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 conversion.
///                                    ###
///               %unsigned 16 CoeffB2B                  0xE546
///                                    ###
///                                    * The coefficient of CSC matrix for RGB709 to RGB 2020 version.
///                                    ###
///     @ 0x0001C PQTHR0               (P)
///               %unsigned 20 pqThreshold0              0x0
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00020 PQTHR1               (P)
///               %unsigned 20 pqThreshold1              0x8
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00024 PQTHR2               (P)
///               %unsigned 20 pqThreshold2              0x48
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00028 PQTHR3               (P)
///               %unsigned 20 pqThreshold3              0x448
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x0002C PQTHR4               (P)
///               %unsigned 20 pqThreshold4              0x1448
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00030 PQTHR5               (P)
///               %unsigned 20 pqThreshold5              0x3448
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00034 PQTHR6               (P)
///               %unsigned 20 pqThreshold6              0xB448
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00038 PQTHR7               (P)
///               %unsigned 20 pqThreshold7              0x2B448
///                                    ###
///                                    * The threshold for PQ_LUT Calculation.
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x0003C PQOFFSET0            (P)
///               %unsigned 7  pqOffset0                 0x0
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %unsigned 7  pqOffset1                 0x8
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %unsigned 7  pqOffset2                 0x10
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %unsigned 7  pqOffset3                 0x20
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %%        4          # Stuffing bits...
///     @ 0x00040 PQOFFSET1            (P)
///               %unsigned 7  pqOffset4                 0x30
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %unsigned 7  pqOffset5                 0x40
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %unsigned 7  pqOffset6                 0x50
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %unsigned 7  pqOffset7                 0x60
///                                    ###
///                                    * The offset for PQ_LUT Calculation.
///                                    ###
///               %%        4          # Stuffing bits...
///     @ 0x00044 PQSHIFT              (P)
///               %unsigned 4  pqShift0                  0x0
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///               %unsigned 4  pqShift1                  0x3
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///               %unsigned 4  pqShift2                  0x6
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///               %unsigned 4  pqShift3                  0x8
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///               %unsigned 4  pqShift4                  0x9
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///               %unsigned 4  pqShift5                  0xB
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///               %unsigned 4  pqShift6                  0xD
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///               %unsigned 4  pqShift7                  0xF
///                                    ###
///                                    * The shift for PQ_LUT Calculation.
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      72B, bits:     455b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_GITM
#define h_GITM (){}

    #define     RA_GITM_CTRL0                                  0x0000

    #define     BA_GITM_CTRL0_pqLutSize                        0x0000
    #define     B16GITM_CTRL0_pqLutSize                        0x0000
    #define   LSb32GITM_CTRL0_pqLutSize                           0
    #define   LSb16GITM_CTRL0_pqLutSize                           0
    #define       bGITM_CTRL0_pqLutSize                        8
    #define   MSK32GITM_CTRL0_pqLutSize                           0x000000FF

    #define     BA_GITM_CTRL0_satValue                         0x0001
    #define     B16GITM_CTRL0_satValue                         0x0000
    #define   LSb32GITM_CTRL0_satValue                            8
    #define   LSb16GITM_CTRL0_satValue                            8
    #define       bGITM_CTRL0_satValue                         7
    #define   MSK32GITM_CTRL0_satValue                            0x00007F00

    #define     BA_GITM_CTRL0_RtoY                             0x0001
    #define     B16GITM_CTRL0_RtoY                             0x0000
    #define   LSb32GITM_CTRL0_RtoY                                15
    #define   LSb16GITM_CTRL0_RtoY                                15
    #define       bGITM_CTRL0_RtoY                             12
    #define   MSK32GITM_CTRL0_RtoY                                0x07FF8000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_CTRL1                                  0x0004

    #define     BA_GITM_CTRL1_GtoY                             0x0004
    #define     B16GITM_CTRL1_GtoY                             0x0004
    #define   LSb32GITM_CTRL1_GtoY                                0
    #define   LSb16GITM_CTRL1_GtoY                                0
    #define       bGITM_CTRL1_GtoY                             12
    #define   MSK32GITM_CTRL1_GtoY                                0x00000FFF

    #define     BA_GITM_CTRL1_BtoY                             0x0005
    #define     B16GITM_CTRL1_BtoY                             0x0004
    #define   LSb32GITM_CTRL1_BtoY                                12
    #define   LSb16GITM_CTRL1_BtoY                                12
    #define       bGITM_CTRL1_BtoY                             12
    #define   MSK32GITM_CTRL1_BtoY                                0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_CTRL2                                  0x0008

    #define     BA_GITM_CTRL2_YOffset                          0x0008
    #define     B16GITM_CTRL2_YOffset                          0x0008
    #define   LSb32GITM_CTRL2_YOffset                             0
    #define   LSb16GITM_CTRL2_YOffset                             0
    #define       bGITM_CTRL2_YOffset                          12
    #define   MSK32GITM_CTRL2_YOffset                             0x00000FFF

    #define     BA_GITM_CTRL2_CoeffR2R                         0x0009
    #define     B16GITM_CTRL2_CoeffR2R                         0x0008
    #define   LSb32GITM_CTRL2_CoeffR2R                            12
    #define   LSb16GITM_CTRL2_CoeffR2R                            12
    #define       bGITM_CTRL2_CoeffR2R                         16
    #define   MSK32GITM_CTRL2_CoeffR2R                            0x0FFFF000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_CTRL3                                  0x000C

    #define     BA_GITM_CTRL3_CoeffG2R                         0x000C
    #define     B16GITM_CTRL3_CoeffG2R                         0x000C
    #define   LSb32GITM_CTRL3_CoeffG2R                            0
    #define   LSb16GITM_CTRL3_CoeffG2R                            0
    #define       bGITM_CTRL3_CoeffG2R                         16
    #define   MSK32GITM_CTRL3_CoeffG2R                            0x0000FFFF

    #define     BA_GITM_CTRL3_CoeffB2R                         0x000E
    #define     B16GITM_CTRL3_CoeffB2R                         0x000E
    #define   LSb32GITM_CTRL3_CoeffB2R                            16
    #define   LSb16GITM_CTRL3_CoeffB2R                            0
    #define       bGITM_CTRL3_CoeffB2R                         16
    #define   MSK32GITM_CTRL3_CoeffB2R                            0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_CTRL4                                  0x0010

    #define     BA_GITM_CTRL4_CoeffR2G                         0x0010
    #define     B16GITM_CTRL4_CoeffR2G                         0x0010
    #define   LSb32GITM_CTRL4_CoeffR2G                            0
    #define   LSb16GITM_CTRL4_CoeffR2G                            0
    #define       bGITM_CTRL4_CoeffR2G                         16
    #define   MSK32GITM_CTRL4_CoeffR2G                            0x0000FFFF

    #define     BA_GITM_CTRL4_CoeffG2G                         0x0012
    #define     B16GITM_CTRL4_CoeffG2G                         0x0012
    #define   LSb32GITM_CTRL4_CoeffG2G                            16
    #define   LSb16GITM_CTRL4_CoeffG2G                            0
    #define       bGITM_CTRL4_CoeffG2G                         16
    #define   MSK32GITM_CTRL4_CoeffG2G                            0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_CTRL5                                  0x0014

    #define     BA_GITM_CTRL5_CoeffB2G                         0x0014
    #define     B16GITM_CTRL5_CoeffB2G                         0x0014
    #define   LSb32GITM_CTRL5_CoeffB2G                            0
    #define   LSb16GITM_CTRL5_CoeffB2G                            0
    #define       bGITM_CTRL5_CoeffB2G                         16
    #define   MSK32GITM_CTRL5_CoeffB2G                            0x0000FFFF

    #define     BA_GITM_CTRL5_CoeffR2B                         0x0016
    #define     B16GITM_CTRL5_CoeffR2B                         0x0016
    #define   LSb32GITM_CTRL5_CoeffR2B                            16
    #define   LSb16GITM_CTRL5_CoeffR2B                            0
    #define       bGITM_CTRL5_CoeffR2B                         16
    #define   MSK32GITM_CTRL5_CoeffR2B                            0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_CTRL6                                  0x0018

    #define     BA_GITM_CTRL6_CoeffG2B                         0x0018
    #define     B16GITM_CTRL6_CoeffG2B                         0x0018
    #define   LSb32GITM_CTRL6_CoeffG2B                            0
    #define   LSb16GITM_CTRL6_CoeffG2B                            0
    #define       bGITM_CTRL6_CoeffG2B                         16
    #define   MSK32GITM_CTRL6_CoeffG2B                            0x0000FFFF

    #define     BA_GITM_CTRL6_CoeffB2B                         0x001A
    #define     B16GITM_CTRL6_CoeffB2B                         0x001A
    #define   LSb32GITM_CTRL6_CoeffB2B                            16
    #define   LSb16GITM_CTRL6_CoeffB2B                            0
    #define       bGITM_CTRL6_CoeffB2B                         16
    #define   MSK32GITM_CTRL6_CoeffB2B                            0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR0                                 0x001C

    #define     BA_GITM_PQTHR0_pqThreshold0                    0x001C
    #define     B16GITM_PQTHR0_pqThreshold0                    0x001C
    #define   LSb32GITM_PQTHR0_pqThreshold0                       0
    #define   LSb16GITM_PQTHR0_pqThreshold0                       0
    #define       bGITM_PQTHR0_pqThreshold0                    20
    #define   MSK32GITM_PQTHR0_pqThreshold0                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR1                                 0x0020

    #define     BA_GITM_PQTHR1_pqThreshold1                    0x0020
    #define     B16GITM_PQTHR1_pqThreshold1                    0x0020
    #define   LSb32GITM_PQTHR1_pqThreshold1                       0
    #define   LSb16GITM_PQTHR1_pqThreshold1                       0
    #define       bGITM_PQTHR1_pqThreshold1                    20
    #define   MSK32GITM_PQTHR1_pqThreshold1                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR2                                 0x0024

    #define     BA_GITM_PQTHR2_pqThreshold2                    0x0024
    #define     B16GITM_PQTHR2_pqThreshold2                    0x0024
    #define   LSb32GITM_PQTHR2_pqThreshold2                       0
    #define   LSb16GITM_PQTHR2_pqThreshold2                       0
    #define       bGITM_PQTHR2_pqThreshold2                    20
    #define   MSK32GITM_PQTHR2_pqThreshold2                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR3                                 0x0028

    #define     BA_GITM_PQTHR3_pqThreshold3                    0x0028
    #define     B16GITM_PQTHR3_pqThreshold3                    0x0028
    #define   LSb32GITM_PQTHR3_pqThreshold3                       0
    #define   LSb16GITM_PQTHR3_pqThreshold3                       0
    #define       bGITM_PQTHR3_pqThreshold3                    20
    #define   MSK32GITM_PQTHR3_pqThreshold3                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR4                                 0x002C

    #define     BA_GITM_PQTHR4_pqThreshold4                    0x002C
    #define     B16GITM_PQTHR4_pqThreshold4                    0x002C
    #define   LSb32GITM_PQTHR4_pqThreshold4                       0
    #define   LSb16GITM_PQTHR4_pqThreshold4                       0
    #define       bGITM_PQTHR4_pqThreshold4                    20
    #define   MSK32GITM_PQTHR4_pqThreshold4                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR5                                 0x0030

    #define     BA_GITM_PQTHR5_pqThreshold5                    0x0030
    #define     B16GITM_PQTHR5_pqThreshold5                    0x0030
    #define   LSb32GITM_PQTHR5_pqThreshold5                       0
    #define   LSb16GITM_PQTHR5_pqThreshold5                       0
    #define       bGITM_PQTHR5_pqThreshold5                    20
    #define   MSK32GITM_PQTHR5_pqThreshold5                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR6                                 0x0034

    #define     BA_GITM_PQTHR6_pqThreshold6                    0x0034
    #define     B16GITM_PQTHR6_pqThreshold6                    0x0034
    #define   LSb32GITM_PQTHR6_pqThreshold6                       0
    #define   LSb16GITM_PQTHR6_pqThreshold6                       0
    #define       bGITM_PQTHR6_pqThreshold6                    20
    #define   MSK32GITM_PQTHR6_pqThreshold6                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQTHR7                                 0x0038

    #define     BA_GITM_PQTHR7_pqThreshold7                    0x0038
    #define     B16GITM_PQTHR7_pqThreshold7                    0x0038
    #define   LSb32GITM_PQTHR7_pqThreshold7                       0
    #define   LSb16GITM_PQTHR7_pqThreshold7                       0
    #define       bGITM_PQTHR7_pqThreshold7                    20
    #define   MSK32GITM_PQTHR7_pqThreshold7                       0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQOFFSET0                              0x003C

    #define     BA_GITM_PQOFFSET0_pqOffset0                    0x003C
    #define     B16GITM_PQOFFSET0_pqOffset0                    0x003C
    #define   LSb32GITM_PQOFFSET0_pqOffset0                       0
    #define   LSb16GITM_PQOFFSET0_pqOffset0                       0
    #define       bGITM_PQOFFSET0_pqOffset0                    7
    #define   MSK32GITM_PQOFFSET0_pqOffset0                       0x0000007F

    #define     BA_GITM_PQOFFSET0_pqOffset1                    0x003C
    #define     B16GITM_PQOFFSET0_pqOffset1                    0x003C
    #define   LSb32GITM_PQOFFSET0_pqOffset1                       7
    #define   LSb16GITM_PQOFFSET0_pqOffset1                       7
    #define       bGITM_PQOFFSET0_pqOffset1                    7
    #define   MSK32GITM_PQOFFSET0_pqOffset1                       0x00003F80

    #define     BA_GITM_PQOFFSET0_pqOffset2                    0x003D
    #define     B16GITM_PQOFFSET0_pqOffset2                    0x003C
    #define   LSb32GITM_PQOFFSET0_pqOffset2                       14
    #define   LSb16GITM_PQOFFSET0_pqOffset2                       14
    #define       bGITM_PQOFFSET0_pqOffset2                    7
    #define   MSK32GITM_PQOFFSET0_pqOffset2                       0x001FC000

    #define     BA_GITM_PQOFFSET0_pqOffset3                    0x003E
    #define     B16GITM_PQOFFSET0_pqOffset3                    0x003E
    #define   LSb32GITM_PQOFFSET0_pqOffset3                       21
    #define   LSb16GITM_PQOFFSET0_pqOffset3                       5
    #define       bGITM_PQOFFSET0_pqOffset3                    7
    #define   MSK32GITM_PQOFFSET0_pqOffset3                       0x0FE00000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQOFFSET1                              0x0040

    #define     BA_GITM_PQOFFSET1_pqOffset4                    0x0040
    #define     B16GITM_PQOFFSET1_pqOffset4                    0x0040
    #define   LSb32GITM_PQOFFSET1_pqOffset4                       0
    #define   LSb16GITM_PQOFFSET1_pqOffset4                       0
    #define       bGITM_PQOFFSET1_pqOffset4                    7
    #define   MSK32GITM_PQOFFSET1_pqOffset4                       0x0000007F

    #define     BA_GITM_PQOFFSET1_pqOffset5                    0x0040
    #define     B16GITM_PQOFFSET1_pqOffset5                    0x0040
    #define   LSb32GITM_PQOFFSET1_pqOffset5                       7
    #define   LSb16GITM_PQOFFSET1_pqOffset5                       7
    #define       bGITM_PQOFFSET1_pqOffset5                    7
    #define   MSK32GITM_PQOFFSET1_pqOffset5                       0x00003F80

    #define     BA_GITM_PQOFFSET1_pqOffset6                    0x0041
    #define     B16GITM_PQOFFSET1_pqOffset6                    0x0040
    #define   LSb32GITM_PQOFFSET1_pqOffset6                       14
    #define   LSb16GITM_PQOFFSET1_pqOffset6                       14
    #define       bGITM_PQOFFSET1_pqOffset6                    7
    #define   MSK32GITM_PQOFFSET1_pqOffset6                       0x001FC000

    #define     BA_GITM_PQOFFSET1_pqOffset7                    0x0042
    #define     B16GITM_PQOFFSET1_pqOffset7                    0x0042
    #define   LSb32GITM_PQOFFSET1_pqOffset7                       21
    #define   LSb16GITM_PQOFFSET1_pqOffset7                       5
    #define       bGITM_PQOFFSET1_pqOffset7                    7
    #define   MSK32GITM_PQOFFSET1_pqOffset7                       0x0FE00000
    ///////////////////////////////////////////////////////////
    #define     RA_GITM_PQSHIFT                                0x0044

    #define     BA_GITM_PQSHIFT_pqShift0                       0x0044
    #define     B16GITM_PQSHIFT_pqShift0                       0x0044
    #define   LSb32GITM_PQSHIFT_pqShift0                          0
    #define   LSb16GITM_PQSHIFT_pqShift0                          0
    #define       bGITM_PQSHIFT_pqShift0                       4
    #define   MSK32GITM_PQSHIFT_pqShift0                          0x0000000F

    #define     BA_GITM_PQSHIFT_pqShift1                       0x0044
    #define     B16GITM_PQSHIFT_pqShift1                       0x0044
    #define   LSb32GITM_PQSHIFT_pqShift1                          4
    #define   LSb16GITM_PQSHIFT_pqShift1                          4
    #define       bGITM_PQSHIFT_pqShift1                       4
    #define   MSK32GITM_PQSHIFT_pqShift1                          0x000000F0

    #define     BA_GITM_PQSHIFT_pqShift2                       0x0045
    #define     B16GITM_PQSHIFT_pqShift2                       0x0044
    #define   LSb32GITM_PQSHIFT_pqShift2                          8
    #define   LSb16GITM_PQSHIFT_pqShift2                          8
    #define       bGITM_PQSHIFT_pqShift2                       4
    #define   MSK32GITM_PQSHIFT_pqShift2                          0x00000F00

    #define     BA_GITM_PQSHIFT_pqShift3                       0x0045
    #define     B16GITM_PQSHIFT_pqShift3                       0x0044
    #define   LSb32GITM_PQSHIFT_pqShift3                          12
    #define   LSb16GITM_PQSHIFT_pqShift3                          12
    #define       bGITM_PQSHIFT_pqShift3                       4
    #define   MSK32GITM_PQSHIFT_pqShift3                          0x0000F000

    #define     BA_GITM_PQSHIFT_pqShift4                       0x0046
    #define     B16GITM_PQSHIFT_pqShift4                       0x0046
    #define   LSb32GITM_PQSHIFT_pqShift4                          16
    #define   LSb16GITM_PQSHIFT_pqShift4                          0
    #define       bGITM_PQSHIFT_pqShift4                       4
    #define   MSK32GITM_PQSHIFT_pqShift4                          0x000F0000

    #define     BA_GITM_PQSHIFT_pqShift5                       0x0046
    #define     B16GITM_PQSHIFT_pqShift5                       0x0046
    #define   LSb32GITM_PQSHIFT_pqShift5                          20
    #define   LSb16GITM_PQSHIFT_pqShift5                          4
    #define       bGITM_PQSHIFT_pqShift5                       4
    #define   MSK32GITM_PQSHIFT_pqShift5                          0x00F00000

    #define     BA_GITM_PQSHIFT_pqShift6                       0x0047
    #define     B16GITM_PQSHIFT_pqShift6                       0x0046
    #define   LSb32GITM_PQSHIFT_pqShift6                          24
    #define   LSb16GITM_PQSHIFT_pqShift6                          8
    #define       bGITM_PQSHIFT_pqShift6                       4
    #define   MSK32GITM_PQSHIFT_pqShift6                          0x0F000000

    #define     BA_GITM_PQSHIFT_pqShift7                       0x0047
    #define     B16GITM_PQSHIFT_pqShift7                       0x0046
    #define   LSb32GITM_PQSHIFT_pqShift7                          28
    #define   LSb16GITM_PQSHIFT_pqShift7                          12
    #define       bGITM_PQSHIFT_pqShift7                       4
    #define   MSK32GITM_PQSHIFT_pqShift7                          0xF0000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_GITM {
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_CTRL0_pqLutSize(r32)                   _BFGET_(r32, 7, 0)
    #define   SET32GITM_CTRL0_pqLutSize(r32,v)                 _BFSET_(r32, 7, 0,v)
    #define   GET16GITM_CTRL0_pqLutSize(r16)                   _BFGET_(r16, 7, 0)
    #define   SET16GITM_CTRL0_pqLutSize(r16,v)                 _BFSET_(r16, 7, 0,v)

    #define   GET32GITM_CTRL0_satValue(r32)                    _BFGET_(r32,14, 8)
    #define   SET32GITM_CTRL0_satValue(r32,v)                  _BFSET_(r32,14, 8,v)
    #define   GET16GITM_CTRL0_satValue(r16)                    _BFGET_(r16,14, 8)
    #define   SET16GITM_CTRL0_satValue(r16,v)                  _BFSET_(r16,14, 8,v)

    #define   GET32GITM_CTRL0_RtoY(r32)                        _BFGET_(r32,26,15)
    #define   SET32GITM_CTRL0_RtoY(r32,v)                      _BFSET_(r32,26,15,v)

    #define     w32GITM_CTRL0                                  {\
            UNSG32 uCTRL0_pqLutSize                            :  8;\
            UNSG32 uCTRL0_satValue                             :  7;\
            UNSG32 uCTRL0_RtoY                                 : 12;\
            UNSG32 RSVDx0_b27                                  :  5;\
          }
    union { UNSG32 u32GITM_CTRL0;
            struct w32GITM_CTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_CTRL1_GtoY(r32)                        _BFGET_(r32,11, 0)
    #define   SET32GITM_CTRL1_GtoY(r32,v)                      _BFSET_(r32,11, 0,v)
    #define   GET16GITM_CTRL1_GtoY(r16)                        _BFGET_(r16,11, 0)
    #define   SET16GITM_CTRL1_GtoY(r16,v)                      _BFSET_(r16,11, 0,v)

    #define   GET32GITM_CTRL1_BtoY(r32)                        _BFGET_(r32,23,12)
    #define   SET32GITM_CTRL1_BtoY(r32,v)                      _BFSET_(r32,23,12,v)

    #define     w32GITM_CTRL1                                  {\
            UNSG32 uCTRL1_GtoY                                 : 12;\
            UNSG32 uCTRL1_BtoY                                 : 12;\
            UNSG32 RSVDx4_b24                                  :  8;\
          }
    union { UNSG32 u32GITM_CTRL1;
            struct w32GITM_CTRL1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_CTRL2_YOffset(r32)                     _BFGET_(r32,11, 0)
    #define   SET32GITM_CTRL2_YOffset(r32,v)                   _BFSET_(r32,11, 0,v)
    #define   GET16GITM_CTRL2_YOffset(r16)                     _BFGET_(r16,11, 0)
    #define   SET16GITM_CTRL2_YOffset(r16,v)                   _BFSET_(r16,11, 0,v)

    #define   GET32GITM_CTRL2_CoeffR2R(r32)                    _BFGET_(r32,27,12)
    #define   SET32GITM_CTRL2_CoeffR2R(r32,v)                  _BFSET_(r32,27,12,v)

    #define     w32GITM_CTRL2                                  {\
            UNSG32 uCTRL2_YOffset                              : 12;\
            UNSG32 uCTRL2_CoeffR2R                             : 16;\
            UNSG32 RSVDx8_b28                                  :  4;\
          }
    union { UNSG32 u32GITM_CTRL2;
            struct w32GITM_CTRL2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_CTRL3_CoeffG2R(r32)                    _BFGET_(r32,15, 0)
    #define   SET32GITM_CTRL3_CoeffG2R(r32,v)                  _BFSET_(r32,15, 0,v)
    #define   GET16GITM_CTRL3_CoeffG2R(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL3_CoeffG2R(r16,v)                  _BFSET_(r16,15, 0,v)

    #define   GET32GITM_CTRL3_CoeffB2R(r32)                    _BFGET_(r32,31,16)
    #define   SET32GITM_CTRL3_CoeffB2R(r32,v)                  _BFSET_(r32,31,16,v)
    #define   GET16GITM_CTRL3_CoeffB2R(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL3_CoeffB2R(r16,v)                  _BFSET_(r16,15, 0,v)

    #define     w32GITM_CTRL3                                  {\
            UNSG32 uCTRL3_CoeffG2R                             : 16;\
            UNSG32 uCTRL3_CoeffB2R                             : 16;\
          }
    union { UNSG32 u32GITM_CTRL3;
            struct w32GITM_CTRL3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_CTRL4_CoeffR2G(r32)                    _BFGET_(r32,15, 0)
    #define   SET32GITM_CTRL4_CoeffR2G(r32,v)                  _BFSET_(r32,15, 0,v)
    #define   GET16GITM_CTRL4_CoeffR2G(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL4_CoeffR2G(r16,v)                  _BFSET_(r16,15, 0,v)

    #define   GET32GITM_CTRL4_CoeffG2G(r32)                    _BFGET_(r32,31,16)
    #define   SET32GITM_CTRL4_CoeffG2G(r32,v)                  _BFSET_(r32,31,16,v)
    #define   GET16GITM_CTRL4_CoeffG2G(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL4_CoeffG2G(r16,v)                  _BFSET_(r16,15, 0,v)

    #define     w32GITM_CTRL4                                  {\
            UNSG32 uCTRL4_CoeffR2G                             : 16;\
            UNSG32 uCTRL4_CoeffG2G                             : 16;\
          }
    union { UNSG32 u32GITM_CTRL4;
            struct w32GITM_CTRL4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_CTRL5_CoeffB2G(r32)                    _BFGET_(r32,15, 0)
    #define   SET32GITM_CTRL5_CoeffB2G(r32,v)                  _BFSET_(r32,15, 0,v)
    #define   GET16GITM_CTRL5_CoeffB2G(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL5_CoeffB2G(r16,v)                  _BFSET_(r16,15, 0,v)

    #define   GET32GITM_CTRL5_CoeffR2B(r32)                    _BFGET_(r32,31,16)
    #define   SET32GITM_CTRL5_CoeffR2B(r32,v)                  _BFSET_(r32,31,16,v)
    #define   GET16GITM_CTRL5_CoeffR2B(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL5_CoeffR2B(r16,v)                  _BFSET_(r16,15, 0,v)

    #define     w32GITM_CTRL5                                  {\
            UNSG32 uCTRL5_CoeffB2G                             : 16;\
            UNSG32 uCTRL5_CoeffR2B                             : 16;\
          }
    union { UNSG32 u32GITM_CTRL5;
            struct w32GITM_CTRL5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_CTRL6_CoeffG2B(r32)                    _BFGET_(r32,15, 0)
    #define   SET32GITM_CTRL6_CoeffG2B(r32,v)                  _BFSET_(r32,15, 0,v)
    #define   GET16GITM_CTRL6_CoeffG2B(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL6_CoeffG2B(r16,v)                  _BFSET_(r16,15, 0,v)

    #define   GET32GITM_CTRL6_CoeffB2B(r32)                    _BFGET_(r32,31,16)
    #define   SET32GITM_CTRL6_CoeffB2B(r32,v)                  _BFSET_(r32,31,16,v)
    #define   GET16GITM_CTRL6_CoeffB2B(r16)                    _BFGET_(r16,15, 0)
    #define   SET16GITM_CTRL6_CoeffB2B(r16,v)                  _BFSET_(r16,15, 0,v)

    #define     w32GITM_CTRL6                                  {\
            UNSG32 uCTRL6_CoeffG2B                             : 16;\
            UNSG32 uCTRL6_CoeffB2B                             : 16;\
          }
    union { UNSG32 u32GITM_CTRL6;
            struct w32GITM_CTRL6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR0_pqThreshold0(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR0_pqThreshold0(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR0                                 {\
            UNSG32 uPQTHR0_pqThreshold0                        : 20;\
            UNSG32 RSVDx1C_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR0;
            struct w32GITM_PQTHR0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR1_pqThreshold1(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR1_pqThreshold1(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR1                                 {\
            UNSG32 uPQTHR1_pqThreshold1                        : 20;\
            UNSG32 RSVDx20_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR1;
            struct w32GITM_PQTHR1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR2_pqThreshold2(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR2_pqThreshold2(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR2                                 {\
            UNSG32 uPQTHR2_pqThreshold2                        : 20;\
            UNSG32 RSVDx24_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR2;
            struct w32GITM_PQTHR2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR3_pqThreshold3(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR3_pqThreshold3(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR3                                 {\
            UNSG32 uPQTHR3_pqThreshold3                        : 20;\
            UNSG32 RSVDx28_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR3;
            struct w32GITM_PQTHR3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR4_pqThreshold4(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR4_pqThreshold4(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR4                                 {\
            UNSG32 uPQTHR4_pqThreshold4                        : 20;\
            UNSG32 RSVDx2C_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR4;
            struct w32GITM_PQTHR4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR5_pqThreshold5(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR5_pqThreshold5(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR5                                 {\
            UNSG32 uPQTHR5_pqThreshold5                        : 20;\
            UNSG32 RSVDx30_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR5;
            struct w32GITM_PQTHR5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR6_pqThreshold6(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR6_pqThreshold6(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR6                                 {\
            UNSG32 uPQTHR6_pqThreshold6                        : 20;\
            UNSG32 RSVDx34_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR6;
            struct w32GITM_PQTHR6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQTHR7_pqThreshold7(r32)               _BFGET_(r32,19, 0)
    #define   SET32GITM_PQTHR7_pqThreshold7(r32,v)             _BFSET_(r32,19, 0,v)

    #define     w32GITM_PQTHR7                                 {\
            UNSG32 uPQTHR7_pqThreshold7                        : 20;\
            UNSG32 RSVDx38_b20                                 : 12;\
          }
    union { UNSG32 u32GITM_PQTHR7;
            struct w32GITM_PQTHR7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQOFFSET0_pqOffset0(r32)               _BFGET_(r32, 6, 0)
    #define   SET32GITM_PQOFFSET0_pqOffset0(r32,v)             _BFSET_(r32, 6, 0,v)
    #define   GET16GITM_PQOFFSET0_pqOffset0(r16)               _BFGET_(r16, 6, 0)
    #define   SET16GITM_PQOFFSET0_pqOffset0(r16,v)             _BFSET_(r16, 6, 0,v)

    #define   GET32GITM_PQOFFSET0_pqOffset1(r32)               _BFGET_(r32,13, 7)
    #define   SET32GITM_PQOFFSET0_pqOffset1(r32,v)             _BFSET_(r32,13, 7,v)
    #define   GET16GITM_PQOFFSET0_pqOffset1(r16)               _BFGET_(r16,13, 7)
    #define   SET16GITM_PQOFFSET0_pqOffset1(r16,v)             _BFSET_(r16,13, 7,v)

    #define   GET32GITM_PQOFFSET0_pqOffset2(r32)               _BFGET_(r32,20,14)
    #define   SET32GITM_PQOFFSET0_pqOffset2(r32,v)             _BFSET_(r32,20,14,v)

    #define   GET32GITM_PQOFFSET0_pqOffset3(r32)               _BFGET_(r32,27,21)
    #define   SET32GITM_PQOFFSET0_pqOffset3(r32,v)             _BFSET_(r32,27,21,v)
    #define   GET16GITM_PQOFFSET0_pqOffset3(r16)               _BFGET_(r16,11, 5)
    #define   SET16GITM_PQOFFSET0_pqOffset3(r16,v)             _BFSET_(r16,11, 5,v)

    #define     w32GITM_PQOFFSET0                              {\
            UNSG32 uPQOFFSET0_pqOffset0                        :  7;\
            UNSG32 uPQOFFSET0_pqOffset1                        :  7;\
            UNSG32 uPQOFFSET0_pqOffset2                        :  7;\
            UNSG32 uPQOFFSET0_pqOffset3                        :  7;\
            UNSG32 RSVDx3C_b28                                 :  4;\
          }
    union { UNSG32 u32GITM_PQOFFSET0;
            struct w32GITM_PQOFFSET0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQOFFSET1_pqOffset4(r32)               _BFGET_(r32, 6, 0)
    #define   SET32GITM_PQOFFSET1_pqOffset4(r32,v)             _BFSET_(r32, 6, 0,v)
    #define   GET16GITM_PQOFFSET1_pqOffset4(r16)               _BFGET_(r16, 6, 0)
    #define   SET16GITM_PQOFFSET1_pqOffset4(r16,v)             _BFSET_(r16, 6, 0,v)

    #define   GET32GITM_PQOFFSET1_pqOffset5(r32)               _BFGET_(r32,13, 7)
    #define   SET32GITM_PQOFFSET1_pqOffset5(r32,v)             _BFSET_(r32,13, 7,v)
    #define   GET16GITM_PQOFFSET1_pqOffset5(r16)               _BFGET_(r16,13, 7)
    #define   SET16GITM_PQOFFSET1_pqOffset5(r16,v)             _BFSET_(r16,13, 7,v)

    #define   GET32GITM_PQOFFSET1_pqOffset6(r32)               _BFGET_(r32,20,14)
    #define   SET32GITM_PQOFFSET1_pqOffset6(r32,v)             _BFSET_(r32,20,14,v)

    #define   GET32GITM_PQOFFSET1_pqOffset7(r32)               _BFGET_(r32,27,21)
    #define   SET32GITM_PQOFFSET1_pqOffset7(r32,v)             _BFSET_(r32,27,21,v)
    #define   GET16GITM_PQOFFSET1_pqOffset7(r16)               _BFGET_(r16,11, 5)
    #define   SET16GITM_PQOFFSET1_pqOffset7(r16,v)             _BFSET_(r16,11, 5,v)

    #define     w32GITM_PQOFFSET1                              {\
            UNSG32 uPQOFFSET1_pqOffset4                        :  7;\
            UNSG32 uPQOFFSET1_pqOffset5                        :  7;\
            UNSG32 uPQOFFSET1_pqOffset6                        :  7;\
            UNSG32 uPQOFFSET1_pqOffset7                        :  7;\
            UNSG32 RSVDx40_b28                                 :  4;\
          }
    union { UNSG32 u32GITM_PQOFFSET1;
            struct w32GITM_PQOFFSET1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32GITM_PQSHIFT_pqShift0(r32)                  _BFGET_(r32, 3, 0)
    #define   SET32GITM_PQSHIFT_pqShift0(r32,v)                _BFSET_(r32, 3, 0,v)
    #define   GET16GITM_PQSHIFT_pqShift0(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16GITM_PQSHIFT_pqShift0(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32GITM_PQSHIFT_pqShift1(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32GITM_PQSHIFT_pqShift1(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16GITM_PQSHIFT_pqShift1(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16GITM_PQSHIFT_pqShift1(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32GITM_PQSHIFT_pqShift2(r32)                  _BFGET_(r32,11, 8)
    #define   SET32GITM_PQSHIFT_pqShift2(r32,v)                _BFSET_(r32,11, 8,v)
    #define   GET16GITM_PQSHIFT_pqShift2(r16)                  _BFGET_(r16,11, 8)
    #define   SET16GITM_PQSHIFT_pqShift2(r16,v)                _BFSET_(r16,11, 8,v)

    #define   GET32GITM_PQSHIFT_pqShift3(r32)                  _BFGET_(r32,15,12)
    #define   SET32GITM_PQSHIFT_pqShift3(r32,v)                _BFSET_(r32,15,12,v)
    #define   GET16GITM_PQSHIFT_pqShift3(r16)                  _BFGET_(r16,15,12)
    #define   SET16GITM_PQSHIFT_pqShift3(r16,v)                _BFSET_(r16,15,12,v)

    #define   GET32GITM_PQSHIFT_pqShift4(r32)                  _BFGET_(r32,19,16)
    #define   SET32GITM_PQSHIFT_pqShift4(r32,v)                _BFSET_(r32,19,16,v)
    #define   GET16GITM_PQSHIFT_pqShift4(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16GITM_PQSHIFT_pqShift4(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32GITM_PQSHIFT_pqShift5(r32)                  _BFGET_(r32,23,20)
    #define   SET32GITM_PQSHIFT_pqShift5(r32,v)                _BFSET_(r32,23,20,v)
    #define   GET16GITM_PQSHIFT_pqShift5(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16GITM_PQSHIFT_pqShift5(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32GITM_PQSHIFT_pqShift6(r32)                  _BFGET_(r32,27,24)
    #define   SET32GITM_PQSHIFT_pqShift6(r32,v)                _BFSET_(r32,27,24,v)
    #define   GET16GITM_PQSHIFT_pqShift6(r16)                  _BFGET_(r16,11, 8)
    #define   SET16GITM_PQSHIFT_pqShift6(r16,v)                _BFSET_(r16,11, 8,v)

    #define   GET32GITM_PQSHIFT_pqShift7(r32)                  _BFGET_(r32,31,28)
    #define   SET32GITM_PQSHIFT_pqShift7(r32,v)                _BFSET_(r32,31,28,v)
    #define   GET16GITM_PQSHIFT_pqShift7(r16)                  _BFGET_(r16,15,12)
    #define   SET16GITM_PQSHIFT_pqShift7(r16,v)                _BFSET_(r16,15,12,v)

    #define     w32GITM_PQSHIFT                                {\
            UNSG32 uPQSHIFT_pqShift0                           :  4;\
            UNSG32 uPQSHIFT_pqShift1                           :  4;\
            UNSG32 uPQSHIFT_pqShift2                           :  4;\
            UNSG32 uPQSHIFT_pqShift3                           :  4;\
            UNSG32 uPQSHIFT_pqShift4                           :  4;\
            UNSG32 uPQSHIFT_pqShift5                           :  4;\
            UNSG32 uPQSHIFT_pqShift6                           :  4;\
            UNSG32 uPQSHIFT_pqShift7                           :  4;\
          }
    union { UNSG32 u32GITM_PQSHIFT;
            struct w32GITM_PQSHIFT;
          };
    ///////////////////////////////////////////////////////////
    } SIE_GITM;

    typedef union  T32GITM_CTRL0
          { UNSG32 u32;
            struct w32GITM_CTRL0;
                 } T32GITM_CTRL0;
    typedef union  T32GITM_CTRL1
          { UNSG32 u32;
            struct w32GITM_CTRL1;
                 } T32GITM_CTRL1;
    typedef union  T32GITM_CTRL2
          { UNSG32 u32;
            struct w32GITM_CTRL2;
                 } T32GITM_CTRL2;
    typedef union  T32GITM_CTRL3
          { UNSG32 u32;
            struct w32GITM_CTRL3;
                 } T32GITM_CTRL3;
    typedef union  T32GITM_CTRL4
          { UNSG32 u32;
            struct w32GITM_CTRL4;
                 } T32GITM_CTRL4;
    typedef union  T32GITM_CTRL5
          { UNSG32 u32;
            struct w32GITM_CTRL5;
                 } T32GITM_CTRL5;
    typedef union  T32GITM_CTRL6
          { UNSG32 u32;
            struct w32GITM_CTRL6;
                 } T32GITM_CTRL6;
    typedef union  T32GITM_PQTHR0
          { UNSG32 u32;
            struct w32GITM_PQTHR0;
                 } T32GITM_PQTHR0;
    typedef union  T32GITM_PQTHR1
          { UNSG32 u32;
            struct w32GITM_PQTHR1;
                 } T32GITM_PQTHR1;
    typedef union  T32GITM_PQTHR2
          { UNSG32 u32;
            struct w32GITM_PQTHR2;
                 } T32GITM_PQTHR2;
    typedef union  T32GITM_PQTHR3
          { UNSG32 u32;
            struct w32GITM_PQTHR3;
                 } T32GITM_PQTHR3;
    typedef union  T32GITM_PQTHR4
          { UNSG32 u32;
            struct w32GITM_PQTHR4;
                 } T32GITM_PQTHR4;
    typedef union  T32GITM_PQTHR5
          { UNSG32 u32;
            struct w32GITM_PQTHR5;
                 } T32GITM_PQTHR5;
    typedef union  T32GITM_PQTHR6
          { UNSG32 u32;
            struct w32GITM_PQTHR6;
                 } T32GITM_PQTHR6;
    typedef union  T32GITM_PQTHR7
          { UNSG32 u32;
            struct w32GITM_PQTHR7;
                 } T32GITM_PQTHR7;
    typedef union  T32GITM_PQOFFSET0
          { UNSG32 u32;
            struct w32GITM_PQOFFSET0;
                 } T32GITM_PQOFFSET0;
    typedef union  T32GITM_PQOFFSET1
          { UNSG32 u32;
            struct w32GITM_PQOFFSET1;
                 } T32GITM_PQOFFSET1;
    typedef union  T32GITM_PQSHIFT
          { UNSG32 u32;
            struct w32GITM_PQSHIFT;
                 } T32GITM_PQSHIFT;
    ///////////////////////////////////////////////////////////

    typedef union  TGITM_CTRL0
          { UNSG32 u32[1];
            struct {
            struct w32GITM_CTRL0;
                   };
                 } TGITM_CTRL0;
    typedef union  TGITM_CTRL1
          { UNSG32 u32[1];
            struct {
            struct w32GITM_CTRL1;
                   };
                 } TGITM_CTRL1;
    typedef union  TGITM_CTRL2
          { UNSG32 u32[1];
            struct {
            struct w32GITM_CTRL2;
                   };
                 } TGITM_CTRL2;
    typedef union  TGITM_CTRL3
          { UNSG32 u32[1];
            struct {
            struct w32GITM_CTRL3;
                   };
                 } TGITM_CTRL3;
    typedef union  TGITM_CTRL4
          { UNSG32 u32[1];
            struct {
            struct w32GITM_CTRL4;
                   };
                 } TGITM_CTRL4;
    typedef union  TGITM_CTRL5
          { UNSG32 u32[1];
            struct {
            struct w32GITM_CTRL5;
                   };
                 } TGITM_CTRL5;
    typedef union  TGITM_CTRL6
          { UNSG32 u32[1];
            struct {
            struct w32GITM_CTRL6;
                   };
                 } TGITM_CTRL6;
    typedef union  TGITM_PQTHR0
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR0;
                   };
                 } TGITM_PQTHR0;
    typedef union  TGITM_PQTHR1
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR1;
                   };
                 } TGITM_PQTHR1;
    typedef union  TGITM_PQTHR2
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR2;
                   };
                 } TGITM_PQTHR2;
    typedef union  TGITM_PQTHR3
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR3;
                   };
                 } TGITM_PQTHR3;
    typedef union  TGITM_PQTHR4
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR4;
                   };
                 } TGITM_PQTHR4;
    typedef union  TGITM_PQTHR5
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR5;
                   };
                 } TGITM_PQTHR5;
    typedef union  TGITM_PQTHR6
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR6;
                   };
                 } TGITM_PQTHR6;
    typedef union  TGITM_PQTHR7
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQTHR7;
                   };
                 } TGITM_PQTHR7;
    typedef union  TGITM_PQOFFSET0
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQOFFSET0;
                   };
                 } TGITM_PQOFFSET0;
    typedef union  TGITM_PQOFFSET1
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQOFFSET1;
                   };
                 } TGITM_PQOFFSET1;
    typedef union  TGITM_PQSHIFT
          { UNSG32 u32[1];
            struct {
            struct w32GITM_PQSHIFT;
                   };
                 } TGITM_PQSHIFT;

    ///////////////////////////////////////////////////////////
     SIGN32 GITM_drvrd(SIE_GITM *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 GITM_drvwr(SIE_GITM *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void GITM_reset(SIE_GITM *p);
     SIGN32 GITM_cmp  (SIE_GITM *p, SIE_GITM *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define GITM_check(p,pie,pfx,hLOG) GITM_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define GITM_print(p,    pfx,hLOG) GITM_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: GITM
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE VPP_GITM                biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 REG                  
///               $GITM                REG               REG          
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      72B, bits:     455b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_VPP_GITM
#define h_VPP_GITM (){}

    #define     RA_VPP_GITM_REG                                0x0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_VPP_GITM {
    ///////////////////////////////////////////////////////////
              SIE_GITM                                         ie_REG;
    ///////////////////////////////////////////////////////////
    } SIE_VPP_GITM;

    ///////////////////////////////////////////////////////////
     SIGN32 VPP_GITM_drvrd(SIE_VPP_GITM *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 VPP_GITM_drvwr(SIE_VPP_GITM *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void VPP_GITM_reset(SIE_VPP_GITM *p);
     SIGN32 VPP_GITM_cmp  (SIE_VPP_GITM *p, SIE_VPP_GITM *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define VPP_GITM_check(p,pie,pfx,hLOG) VPP_GITM_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define VPP_GITM_print(p,    pfx,hLOG) VPP_GITM_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: VPP_GITM
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: GITM.h
////////////////////////////////////////////////////////////

