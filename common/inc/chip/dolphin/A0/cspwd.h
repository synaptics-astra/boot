//////
/// don't edit! auto-generated by docc: cspwd.h
////////////////////////////////////////////////////////////
#ifndef cspwd_h
#define cspwd_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE OneReg_WO                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 OneReg_WO            (W-)
///               %unsigned 8  Byte0                     0x0
///               %unsigned 8  Byte1                     0x0
///               %unsigned 8  Byte2                     0x0
///               %unsigned 8  Byte3                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_OneReg_WO
#define h_OneReg_WO (){}

    #define     RA_OneReg_WO_OneReg_WO                         0x0000

    #define     BA_OneReg_WO_OneReg_WO_Byte0                   0x0000
    #define     B16OneReg_WO_OneReg_WO_Byte0                   0x0000
    #define   LSb32OneReg_WO_OneReg_WO_Byte0                      0
    #define   LSb16OneReg_WO_OneReg_WO_Byte0                      0
    #define       bOneReg_WO_OneReg_WO_Byte0                   8
    #define   MSK32OneReg_WO_OneReg_WO_Byte0                      0x000000FF

    #define     BA_OneReg_WO_OneReg_WO_Byte1                   0x0001
    #define     B16OneReg_WO_OneReg_WO_Byte1                   0x0000
    #define   LSb32OneReg_WO_OneReg_WO_Byte1                      8
    #define   LSb16OneReg_WO_OneReg_WO_Byte1                      8
    #define       bOneReg_WO_OneReg_WO_Byte1                   8
    #define   MSK32OneReg_WO_OneReg_WO_Byte1                      0x0000FF00

    #define     BA_OneReg_WO_OneReg_WO_Byte2                   0x0002
    #define     B16OneReg_WO_OneReg_WO_Byte2                   0x0002
    #define   LSb32OneReg_WO_OneReg_WO_Byte2                      16
    #define   LSb16OneReg_WO_OneReg_WO_Byte2                      0
    #define       bOneReg_WO_OneReg_WO_Byte2                   8
    #define   MSK32OneReg_WO_OneReg_WO_Byte2                      0x00FF0000

    #define     BA_OneReg_WO_OneReg_WO_Byte3                   0x0003
    #define     B16OneReg_WO_OneReg_WO_Byte3                   0x0002
    #define   LSb32OneReg_WO_OneReg_WO_Byte3                      24
    #define   LSb16OneReg_WO_OneReg_WO_Byte3                      8
    #define       bOneReg_WO_OneReg_WO_Byte3                   8
    #define   MSK32OneReg_WO_OneReg_WO_Byte3                      0xFF000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_OneReg_WO {
    ///////////////////////////////////////////////////////////
    #define   GET32OneReg_WO_OneReg_WO_Byte0(r32)              _BFGET_(r32, 7, 0)
    #define   SET32OneReg_WO_OneReg_WO_Byte0(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16OneReg_WO_OneReg_WO_Byte0(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_WO_OneReg_WO_Byte0(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_WO_OneReg_WO_Byte1(r32)              _BFGET_(r32,15, 8)
    #define   SET32OneReg_WO_OneReg_WO_Byte1(r32,v)            _BFSET_(r32,15, 8,v)
    #define   GET16OneReg_WO_OneReg_WO_Byte1(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_WO_OneReg_WO_Byte1(r16,v)            _BFSET_(r16,15, 8,v)

    #define   GET32OneReg_WO_OneReg_WO_Byte2(r32)              _BFGET_(r32,23,16)
    #define   SET32OneReg_WO_OneReg_WO_Byte2(r32,v)            _BFSET_(r32,23,16,v)
    #define   GET16OneReg_WO_OneReg_WO_Byte2(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_WO_OneReg_WO_Byte2(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_WO_OneReg_WO_Byte3(r32)              _BFGET_(r32,31,24)
    #define   SET32OneReg_WO_OneReg_WO_Byte3(r32,v)            _BFSET_(r32,31,24,v)
    #define   GET16OneReg_WO_OneReg_WO_Byte3(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_WO_OneReg_WO_Byte3(r16,v)            _BFSET_(r16,15, 8,v)

    #define     w32OneReg_WO_OneReg_WO                         {\
            UNSG32 uOneReg_WO_Byte0                            :  8;\
            UNSG32 uOneReg_WO_Byte1                            :  8;\
            UNSG32 uOneReg_WO_Byte2                            :  8;\
            UNSG32 uOneReg_WO_Byte3                            :  8;\
          }
    union { UNSG32 u32OneReg_WO_OneReg_WO;
            struct w32OneReg_WO_OneReg_WO;
          };
    ///////////////////////////////////////////////////////////
    } SIE_OneReg_WO;

    typedef union  T32OneReg_WO_OneReg_WO
          { UNSG32 u32;
            struct w32OneReg_WO_OneReg_WO;
                 } T32OneReg_WO_OneReg_WO;
    ///////////////////////////////////////////////////////////

    typedef union  TOneReg_WO_OneReg_WO
          { UNSG32 u32[1];
            struct {
            struct w32OneReg_WO_OneReg_WO;
                   };
                 } TOneReg_WO_OneReg_WO;

    ///////////////////////////////////////////////////////////
     SIGN32 OneReg_WO_drvrd(SIE_OneReg_WO *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 OneReg_WO_drvwr(SIE_OneReg_WO *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void OneReg_WO_reset(SIE_OneReg_WO *p);
     SIGN32 OneReg_WO_cmp  (SIE_OneReg_WO *p, SIE_OneReg_WO *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define OneReg_WO_check(p,pie,pfx,hLOG) OneReg_WO_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define OneReg_WO_print(p,    pfx,hLOG) OneReg_WO_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: OneReg_WO
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE OneReg_RO                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 OneReg_RO            (R-)
///               %unsigned 8  Byte0                     0x0
///               %unsigned 8  Byte1                     0x0
///               %unsigned 8  Byte2                     0x0
///               %unsigned 8  Byte3                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_OneReg_RO
#define h_OneReg_RO (){}

    #define     RA_OneReg_RO_OneReg_RO                         0x0000

    #define     BA_OneReg_RO_OneReg_RO_Byte0                   0x0000
    #define     B16OneReg_RO_OneReg_RO_Byte0                   0x0000
    #define   LSb32OneReg_RO_OneReg_RO_Byte0                      0
    #define   LSb16OneReg_RO_OneReg_RO_Byte0                      0
    #define       bOneReg_RO_OneReg_RO_Byte0                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte0                      0x000000FF

    #define     BA_OneReg_RO_OneReg_RO_Byte1                   0x0001
    #define     B16OneReg_RO_OneReg_RO_Byte1                   0x0000
    #define   LSb32OneReg_RO_OneReg_RO_Byte1                      8
    #define   LSb16OneReg_RO_OneReg_RO_Byte1                      8
    #define       bOneReg_RO_OneReg_RO_Byte1                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte1                      0x0000FF00

    #define     BA_OneReg_RO_OneReg_RO_Byte2                   0x0002
    #define     B16OneReg_RO_OneReg_RO_Byte2                   0x0002
    #define   LSb32OneReg_RO_OneReg_RO_Byte2                      16
    #define   LSb16OneReg_RO_OneReg_RO_Byte2                      0
    #define       bOneReg_RO_OneReg_RO_Byte2                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte2                      0x00FF0000

    #define     BA_OneReg_RO_OneReg_RO_Byte3                   0x0003
    #define     B16OneReg_RO_OneReg_RO_Byte3                   0x0002
    #define   LSb32OneReg_RO_OneReg_RO_Byte3                      24
    #define   LSb16OneReg_RO_OneReg_RO_Byte3                      8
    #define       bOneReg_RO_OneReg_RO_Byte3                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte3                      0xFF000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_OneReg_RO {
    ///////////////////////////////////////////////////////////
    #define   GET32OneReg_RO_OneReg_RO_Byte0(r32)              _BFGET_(r32, 7, 0)
    #define   SET32OneReg_RO_OneReg_RO_Byte0(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte0(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_RO_OneReg_RO_Byte0(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte1(r32)              _BFGET_(r32,15, 8)
    #define   SET32OneReg_RO_OneReg_RO_Byte1(r32,v)            _BFSET_(r32,15, 8,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte1(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_RO_OneReg_RO_Byte1(r16,v)            _BFSET_(r16,15, 8,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte2(r32)              _BFGET_(r32,23,16)
    #define   SET32OneReg_RO_OneReg_RO_Byte2(r32,v)            _BFSET_(r32,23,16,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte2(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_RO_OneReg_RO_Byte2(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte3(r32)              _BFGET_(r32,31,24)
    #define   SET32OneReg_RO_OneReg_RO_Byte3(r32,v)            _BFSET_(r32,31,24,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte3(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_RO_OneReg_RO_Byte3(r16,v)            _BFSET_(r16,15, 8,v)

    #define     w32OneReg_RO_OneReg_RO                         {\
            UNSG32 uOneReg_RO_Byte0                            :  8;\
            UNSG32 uOneReg_RO_Byte1                            :  8;\
            UNSG32 uOneReg_RO_Byte2                            :  8;\
            UNSG32 uOneReg_RO_Byte3                            :  8;\
          }
    union { UNSG32 u32OneReg_RO_OneReg_RO;
            struct w32OneReg_RO_OneReg_RO;
          };
    ///////////////////////////////////////////////////////////
    } SIE_OneReg_RO;

    typedef union  T32OneReg_RO_OneReg_RO
          { UNSG32 u32;
            struct w32OneReg_RO_OneReg_RO;
                 } T32OneReg_RO_OneReg_RO;
    ///////////////////////////////////////////////////////////

    typedef union  TOneReg_RO_OneReg_RO
          { UNSG32 u32[1];
            struct {
            struct w32OneReg_RO_OneReg_RO;
                   };
                 } TOneReg_RO_OneReg_RO;

    ///////////////////////////////////////////////////////////
     SIGN32 OneReg_RO_drvrd(SIE_OneReg_RO *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 OneReg_RO_drvwr(SIE_OneReg_RO *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void OneReg_RO_reset(SIE_OneReg_RO *p);
     SIGN32 OneReg_RO_cmp  (SIE_OneReg_RO *p, SIE_OneReg_RO *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define OneReg_RO_check(p,pie,pfx,hLOG) OneReg_RO_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define OneReg_RO_print(p,    pfx,hLOG) OneReg_RO_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: OneReg_RO
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE CSPWD                   biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 password             (W-)
///     # 0x00000 password             
///               $OneReg_WO           password          REG       [4]
///                                    ###
///                                    * JTAG password
///                                    ###
///     @ 0x00010 password_valid       (P)
///               %unsigned 1  password_valid            0x0
///                                    ###
///                                    * JTAG password_valid
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00014 password_sel         (P)
///               %unsigned 1  password_sel              0x0
///                                    ###
///                                    * JTAG password select:
///                                    * 0: sel password 0; 1: sel password 1
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00018 Debug_On             (P)
///               %unsigned 8  Debug_On                  0x0
///               %%        24         # Stuffing bits...
///     @ 0x0001C                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00024 protection           (R-)
///               %unsigned 2  protection                0x3
///                                    ###
///                                    * 00 :open,
///                                    * 01:password
///                                    * 10/11: close
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00028 CA_Vendor            (R-)
///               %unsigned 8  CA_Vendor                 0x0
///                                    ###
///                                    * 7:4 reserved
///                                    * 3: NDS
///                                    * 2: NAGRA
///                                    * 1:IDETO
///                                    * 0:SYNA
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x0002C ChipID               (R-)
///     # 0x0002C ChipID               
///               $OneReg_RO           ChipID            REG       [2]
///                                    ###
///                                    * chipID
///                                    ###
///     @ 0x00034                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00040 TEE_password         (W-)
///     # 0x00040 TEE_password         
///               $OneReg_WO           TEE_password      REG       [4]
///                                    ###
///                                    * TEE password
///                                    ###
///     @ 0x00050 TEE_password_valid   (P)
///               %unsigned 1  TEE_password_valid        0x0
///                                    ###
///                                    * TEE password_valid
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00054 TEE_password_sel     (P)
///               %unsigned 1  TEE_password_sel          0x0
///                                    ###
///                                    * TEE password select:
///                                    * 0: sel password 0; 1: sel password 1
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00058 TEE_protection       (R-)
///               %unsigned 2  TEE_protection            0x3
///                                    ###
///                                    * 00 :open,
///                                    * 01:password
///                                    * 10/11: close
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      92B, bits:     344b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_CSPWD
#define h_CSPWD (){}

    #define     RA_CSPWD_password                              0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_password_valid                        0x0010

    #define     BA_CSPWD_password_valid_password_valid         0x0010
    #define     B16CSPWD_password_valid_password_valid         0x0010
    #define   LSb32CSPWD_password_valid_password_valid            0
    #define   LSb16CSPWD_password_valid_password_valid            0
    #define       bCSPWD_password_valid_password_valid         1
    #define   MSK32CSPWD_password_valid_password_valid            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_password_sel                          0x0014

    #define     BA_CSPWD_password_sel_password_sel             0x0014
    #define     B16CSPWD_password_sel_password_sel             0x0014
    #define   LSb32CSPWD_password_sel_password_sel                0
    #define   LSb16CSPWD_password_sel_password_sel                0
    #define       bCSPWD_password_sel_password_sel             1
    #define   MSK32CSPWD_password_sel_password_sel                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_Debug_On                              0x0018

    #define     BA_CSPWD_Debug_On_Debug_On                     0x0018
    #define     B16CSPWD_Debug_On_Debug_On                     0x0018
    #define   LSb32CSPWD_Debug_On_Debug_On                        0
    #define   LSb16CSPWD_Debug_On_Debug_On                        0
    #define       bCSPWD_Debug_On_Debug_On                     8
    #define   MSK32CSPWD_Debug_On_Debug_On                        0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_protection                            0x0024

    #define     BA_CSPWD_protection_protection                 0x0024
    #define     B16CSPWD_protection_protection                 0x0024
    #define   LSb32CSPWD_protection_protection                    0
    #define   LSb16CSPWD_protection_protection                    0
    #define       bCSPWD_protection_protection                 2
    #define   MSK32CSPWD_protection_protection                    0x00000003
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_CA_Vendor                             0x0028

    #define     BA_CSPWD_CA_Vendor_CA_Vendor                   0x0028
    #define     B16CSPWD_CA_Vendor_CA_Vendor                   0x0028
    #define   LSb32CSPWD_CA_Vendor_CA_Vendor                      0
    #define   LSb16CSPWD_CA_Vendor_CA_Vendor                      0
    #define       bCSPWD_CA_Vendor_CA_Vendor                   8
    #define   MSK32CSPWD_CA_Vendor_CA_Vendor                      0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_ChipID                                0x002C
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_TEE_password                          0x0040
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_TEE_password_valid                    0x0050

    #define     BA_CSPWD_TEE_password_valid_TEE_password_valid 0x0050
    #define     B16CSPWD_TEE_password_valid_TEE_password_valid 0x0050
    #define   LSb32CSPWD_TEE_password_valid_TEE_password_valid    0
    #define   LSb16CSPWD_TEE_password_valid_TEE_password_valid    0
    #define       bCSPWD_TEE_password_valid_TEE_password_valid 1
    #define   MSK32CSPWD_TEE_password_valid_TEE_password_valid    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_TEE_password_sel                      0x0054

    #define     BA_CSPWD_TEE_password_sel_TEE_password_sel     0x0054
    #define     B16CSPWD_TEE_password_sel_TEE_password_sel     0x0054
    #define   LSb32CSPWD_TEE_password_sel_TEE_password_sel        0
    #define   LSb16CSPWD_TEE_password_sel_TEE_password_sel        0
    #define       bCSPWD_TEE_password_sel_TEE_password_sel     1
    #define   MSK32CSPWD_TEE_password_sel_TEE_password_sel        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CSPWD_TEE_protection                        0x0058

    #define     BA_CSPWD_TEE_protection_TEE_protection         0x0058
    #define     B16CSPWD_TEE_protection_TEE_protection         0x0058
    #define   LSb32CSPWD_TEE_protection_TEE_protection            0
    #define   LSb16CSPWD_TEE_protection_TEE_protection            0
    #define       bCSPWD_TEE_protection_TEE_protection         2
    #define   MSK32CSPWD_TEE_protection_TEE_protection            0x00000003
    ///////////////////////////////////////////////////////////

    typedef struct SIE_CSPWD {
    ///////////////////////////////////////////////////////////
              SIE_OneReg_WO                                    ie_password[4];
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_password_valid_password_valid(r32)    _BFGET_(r32, 0, 0)
    #define   SET32CSPWD_password_valid_password_valid(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16CSPWD_password_valid_password_valid(r16)    _BFGET_(r16, 0, 0)
    #define   SET16CSPWD_password_valid_password_valid(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32CSPWD_password_valid                        {\
            UNSG32 upassword_valid_password_valid              :  1;\
            UNSG32 RSVDx10_b1                                  : 31;\
          }
    union { UNSG32 u32CSPWD_password_valid;
            struct w32CSPWD_password_valid;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_password_sel_password_sel(r32)        _BFGET_(r32, 0, 0)
    #define   SET32CSPWD_password_sel_password_sel(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16CSPWD_password_sel_password_sel(r16)        _BFGET_(r16, 0, 0)
    #define   SET16CSPWD_password_sel_password_sel(r16,v)      _BFSET_(r16, 0, 0,v)

    #define     w32CSPWD_password_sel                          {\
            UNSG32 upassword_sel_password_sel                  :  1;\
            UNSG32 RSVDx14_b1                                  : 31;\
          }
    union { UNSG32 u32CSPWD_password_sel;
            struct w32CSPWD_password_sel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_Debug_On_Debug_On(r32)                _BFGET_(r32, 7, 0)
    #define   SET32CSPWD_Debug_On_Debug_On(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16CSPWD_Debug_On_Debug_On(r16)                _BFGET_(r16, 7, 0)
    #define   SET16CSPWD_Debug_On_Debug_On(r16,v)              _BFSET_(r16, 7, 0,v)

    #define     w32CSPWD_Debug_On                              {\
            UNSG32 uDebug_On_Debug_On                          :  8;\
            UNSG32 RSVDx18_b8                                  : 24;\
          }
    union { UNSG32 u32CSPWD_Debug_On;
            struct w32CSPWD_Debug_On;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1C                                     [8];
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_protection_protection(r32)            _BFGET_(r32, 1, 0)
    #define   SET32CSPWD_protection_protection(r32,v)          _BFSET_(r32, 1, 0,v)
    #define   GET16CSPWD_protection_protection(r16)            _BFGET_(r16, 1, 0)
    #define   SET16CSPWD_protection_protection(r16,v)          _BFSET_(r16, 1, 0,v)

    #define     w32CSPWD_protection                            {\
            UNSG32 uprotection_protection                      :  2;\
            UNSG32 RSVDx24_b2                                  : 30;\
          }
    union { UNSG32 u32CSPWD_protection;
            struct w32CSPWD_protection;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_CA_Vendor_CA_Vendor(r32)              _BFGET_(r32, 7, 0)
    #define   SET32CSPWD_CA_Vendor_CA_Vendor(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16CSPWD_CA_Vendor_CA_Vendor(r16)              _BFGET_(r16, 7, 0)
    #define   SET16CSPWD_CA_Vendor_CA_Vendor(r16,v)            _BFSET_(r16, 7, 0,v)

    #define     w32CSPWD_CA_Vendor                             {\
            UNSG32 uCA_Vendor_CA_Vendor                        :  8;\
            UNSG32 RSVDx28_b8                                  : 24;\
          }
    union { UNSG32 u32CSPWD_CA_Vendor;
            struct w32CSPWD_CA_Vendor;
          };
    ///////////////////////////////////////////////////////////
              SIE_OneReg_RO                                    ie_ChipID[2];
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx34                                     [12];
    ///////////////////////////////////////////////////////////
              SIE_OneReg_WO                                    ie_TEE_password[4];
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_TEE_password_valid_TEE_password_valid(r32) _BFGET_(r32, 0, 0)
    #define   SET32CSPWD_TEE_password_valid_TEE_password_valid(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16CSPWD_TEE_password_valid_TEE_password_valid(r16) _BFGET_(r16, 0, 0)
    #define   SET16CSPWD_TEE_password_valid_TEE_password_valid(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32CSPWD_TEE_password_valid                    {\
            UNSG32 uTEE_password_valid_TEE_password_valid      :  1;\
            UNSG32 RSVDx50_b1                                  : 31;\
          }
    union { UNSG32 u32CSPWD_TEE_password_valid;
            struct w32CSPWD_TEE_password_valid;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_TEE_password_sel_TEE_password_sel(r32) _BFGET_(r32, 0, 0)
    #define   SET32CSPWD_TEE_password_sel_TEE_password_sel(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16CSPWD_TEE_password_sel_TEE_password_sel(r16) _BFGET_(r16, 0, 0)
    #define   SET16CSPWD_TEE_password_sel_TEE_password_sel(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32CSPWD_TEE_password_sel                      {\
            UNSG32 uTEE_password_sel_TEE_password_sel          :  1;\
            UNSG32 RSVDx54_b1                                  : 31;\
          }
    union { UNSG32 u32CSPWD_TEE_password_sel;
            struct w32CSPWD_TEE_password_sel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CSPWD_TEE_protection_TEE_protection(r32)    _BFGET_(r32, 1, 0)
    #define   SET32CSPWD_TEE_protection_TEE_protection(r32,v)  _BFSET_(r32, 1, 0,v)
    #define   GET16CSPWD_TEE_protection_TEE_protection(r16)    _BFGET_(r16, 1, 0)
    #define   SET16CSPWD_TEE_protection_TEE_protection(r16,v)  _BFSET_(r16, 1, 0,v)

    #define     w32CSPWD_TEE_protection                        {\
            UNSG32 uTEE_protection_TEE_protection              :  2;\
            UNSG32 RSVDx58_b2                                  : 30;\
          }
    union { UNSG32 u32CSPWD_TEE_protection;
            struct w32CSPWD_TEE_protection;
          };
    ///////////////////////////////////////////////////////////
    } SIE_CSPWD;

    typedef union  T32CSPWD_password_valid
          { UNSG32 u32;
            struct w32CSPWD_password_valid;
                 } T32CSPWD_password_valid;
    typedef union  T32CSPWD_password_sel
          { UNSG32 u32;
            struct w32CSPWD_password_sel;
                 } T32CSPWD_password_sel;
    typedef union  T32CSPWD_Debug_On
          { UNSG32 u32;
            struct w32CSPWD_Debug_On;
                 } T32CSPWD_Debug_On;
    typedef union  T32CSPWD_protection
          { UNSG32 u32;
            struct w32CSPWD_protection;
                 } T32CSPWD_protection;
    typedef union  T32CSPWD_CA_Vendor
          { UNSG32 u32;
            struct w32CSPWD_CA_Vendor;
                 } T32CSPWD_CA_Vendor;
    typedef union  T32CSPWD_TEE_password_valid
          { UNSG32 u32;
            struct w32CSPWD_TEE_password_valid;
                 } T32CSPWD_TEE_password_valid;
    typedef union  T32CSPWD_TEE_password_sel
          { UNSG32 u32;
            struct w32CSPWD_TEE_password_sel;
                 } T32CSPWD_TEE_password_sel;
    typedef union  T32CSPWD_TEE_protection
          { UNSG32 u32;
            struct w32CSPWD_TEE_protection;
                 } T32CSPWD_TEE_protection;
    ///////////////////////////////////////////////////////////

    typedef union  TCSPWD_password_valid
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_password_valid;
                   };
                 } TCSPWD_password_valid;
    typedef union  TCSPWD_password_sel
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_password_sel;
                   };
                 } TCSPWD_password_sel;
    typedef union  TCSPWD_Debug_On
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_Debug_On;
                   };
                 } TCSPWD_Debug_On;
    typedef union  TCSPWD_protection
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_protection;
                   };
                 } TCSPWD_protection;
    typedef union  TCSPWD_CA_Vendor
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_CA_Vendor;
                   };
                 } TCSPWD_CA_Vendor;
    typedef union  TCSPWD_TEE_password_valid
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_TEE_password_valid;
                   };
                 } TCSPWD_TEE_password_valid;
    typedef union  TCSPWD_TEE_password_sel
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_TEE_password_sel;
                   };
                 } TCSPWD_TEE_password_sel;
    typedef union  TCSPWD_TEE_protection
          { UNSG32 u32[1];
            struct {
            struct w32CSPWD_TEE_protection;
                   };
                 } TCSPWD_TEE_protection;

    ///////////////////////////////////////////////////////////
     SIGN32 CSPWD_drvrd(SIE_CSPWD *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 CSPWD_drvwr(SIE_CSPWD *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void CSPWD_reset(SIE_CSPWD *p);
     SIGN32 CSPWD_cmp  (SIE_CSPWD *p, SIE_CSPWD *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define CSPWD_check(p,pie,pfx,hLOG) CSPWD_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define CSPWD_print(p,    pfx,hLOG) CSPWD_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: CSPWD
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: cspwd.h
////////////////////////////////////////////////////////////

