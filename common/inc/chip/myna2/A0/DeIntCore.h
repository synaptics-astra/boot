//////
/// don't edit! auto-generated by docc: DeIntCore.h
////////////////////////////////////////////////////////////
#ifndef DeIntCore_h
#define DeIntCore_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE MadiReg                 biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Edge0                (P)
///               %unsigned 6  EdgeGain_0                0x9
///                                    ###
///                                    * The gain controls used to detect if an edge is horizontal or vertical. Horizontal edge (line) is defined if the vertical gradient is much greater than the horizontal one and vertical edge (line) is defined if the horizontal gradient is much greater than the vertical one.    
///                                    ###
///               %unsigned 6  EdgeGain_1                0x10
///                                    ###
///                                    * The gain controls used to detect if an edge is horizontal or vertical. Horizontal edge (line) is defined if the vertical gradient is much greater than the horizontal one and vertical edge (line) is defined if the horizontal gradient is much greater than the vertical one.    
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00004 Edge1                (P)
///               %unsigned 8  EdgeThr_0                 0x18
///                                    ###
///                                    * The threshold controls for edge detection. If the edge gradients are not strong enough, it is not considered as an edge.
///                                    ###
///               %unsigned 8  EdgeThr_1                 0x46
///                                    ###
///                                    * The threshold controls for edge detection. If the edge gradients are not strong enough, it is not considered as an edge.
///                                    ###
///               %unsigned 8  EdgeThr_2                 0x2
///                                    ###
///                                    * The threshold controls for edge detection. If the edge gradients are not strong enough, it is not considered as an edge.
///                                    ###
///               %unsigned 8  EdgeThr_3                 0x5
///                                    ###
///                                    * The threshold controls for edge detection. If the edge gradients are not strong enough, it is not considered as an edge.
///                                    ###
///     @ 0x00008 Cnst                 (P)
///               %unsigned 8  CnstThr_0                 0x1E
///                                    ###
///                                    *  The threshold controls on three level contrast detection for SDI processing
///                                    ###
///               %unsigned 8  CnstThr_1                 0x8C
///                                    ###
///                                    *  The threshold controls on three level contrast detection for SDI processing
///                                    ###
///               %unsigned 8  CnstThr_2                 0x8
///                                    ###
///                                    *  The threshold controls on three level contrast detection for SDI processing
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0000C MdvCnst              (P)
///               %unsigned 6  MdvCnstThr                0x28
///                                    ###
///                                    *  The threshold controls on three level contrast detection for SDI processing
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00010 LamdNoise            (P)
///               %unsigned 5  LamdNoiseThr_0            0x2
///                                    ###
///                                    *  The threshold controls for large area motion detection. One for local, the other for global. If the absolute pixel difference between two frames is greater than the threshold, the pixel is considered to be a motion pixel.
///                                    ###
///               %unsigned 5  LamdNoiseThr_1            0x6
///                                    ###
///                                    *  The threshold controls for large area motion detection. One for local, the other for global. If the absolute pixel difference between two frames is greater than the threshold, the pixel is considered to be a motion pixel.
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x00014 LasdNoise            (P)
///               %unsigned 5  LasdNoiseThr_0            0x8
///                                    ###
///                                    * The threshold controls for large area static detection. One for local, the other for global. If the absolute pixel difference between two frames is greater than the threshold, the pixel is considered to be a motion pixel.
///                                    ###
///               %unsigned 5  LasdNoiseThr_1            0xC
///                                    ###
///                                    * The threshold controls for large area static detection. One for local, the other for global. If the absolute pixel difference between two frames is greater than the threshold, the pixel is considered to be a motion pixel.
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x00018 LAMD                 (P)
///               %unsigned 5  LAMDThr_0                 0xC
///                                    ###
///                                    * Independent counter thresholds for three kind of lamd detections. When counts are greater than the value, lamd is detected.
///                                    ###
///               %unsigned 5  LAMDThr_1                 0x6
///                                    ###
///                                    * Independent counter thresholds for three kind of lamd detections. When counts are greater than the value, lamd is detected.
///                                    ###
///               %unsigned 5  LAMDThr_2                 0x15
///                                    ###
///                                    * Independent counter thresholds for three kind of lamd detections. When counts are greater than the value, lamd is detected.
///                                    ###
///               %unsigned 2  LAMDEnhThr_0              0x0
///                                    ###
///                                    * The length controls for horizontal and vertical stretches. The maximum length to be stretched is +/- 3 pixels.
///                                    ###
///               %unsigned 2  LAMDEnhThr_1              0x0
///                                    ###
///                                    * The length controls for horizontal and vertical stretches. The maximum length to be stretched is +/- 3 pixels.
///                                    ###
///               %%        13         # Stuffing bits...
///     @ 0x0001C LASD                 (P)
///               %unsigned 3  LASDThr_0                 0x2
///                                    ###
///                                    * Counter threshold for large area static detection. If the count of motion pixels inside (7x7) kennel is less than it, lasd is detected
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00020 SOSD0                (P)
///               %unsigned 8  SOSDThr_0                 0x96
///                                    ###
///                                    * Threshold controls for static and scrolling OSD detection. The thresholds include both edge and motion thresholds
///                                    ###
///               %unsigned 8  SOSDThr_1                 0x8
///                                    ###
///                                    * Threshold controls for static and scrolling OSD detection. The thresholds include both edge and motion thresholds
///                                    ###
///               %unsigned 8  SOSDThr_2                 0x6
///                                    ###
///                                    * Threshold controls for static and scrolling OSD detection. The thresholds include both edge and motion thresholds
///                                    ###
///               %unsigned 8  SOSDThr_3                 0x78
///                                    ###
///                                    * Threshold controls for static and scrolling OSD detection. The thresholds include both edge and motion thresholds
///                                    ###
///     @ 0x00024 SOSD1                (P)
///               %unsigned 8  SOSDThr_4                 0x40
///                                    ###
///                                    * Threshold controls for static and scrolling OSD detection. The thresholds include both edge and motion thresholds
///                                    ###
///               %unsigned 8  SOSDThr_5                 0x0
///                                    ###
///                                    * Threshold controls for static and scrolling OSD detection. The thresholds include both edge and motion thresholds
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00028 LAMDGain             (P)
///               %unsigned 8  LAMDGain_0                0x40
///                                    ###
///                                    * Gain controls to generate final motion values in case of LAMD
///                                    ###
///               %unsigned 8  LAMDGain_1                0x40
///                                    ###
///                                    * Gain controls to generate final motion values in case of LAMD
///                                    ###
///               %unsigned 8  LAMDGain_2                0xFF
///                                    ###
///                                    * Gain controls to generate final motion values in case of LAMD
///                                    ###
///               %unsigned 8  LAMDGain_3                0x0
///                                    ###
///                                    * Gain controls to generate final motion values in case of LAMD
///                                    ###
///     @ 0x0002C LASDGain             (P)
///               %unsigned 8  LASDGain_0                0x28
///                                    ###
///                                    * Gain controls to generate final motion values in case of LASD and SOSD
///                                    ###
///               %unsigned 8  LASDGain_1                0x14
///                                    ###
///                                    * Gain controls to generate final motion values in case of LASD and SOSD
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00030 Hf                   (P)
///               %unsigned 6  HfThr_0                   0x3
///                                    ###
///                                    * Threshold controls for high frequency detection. Both set the condition of HF.
///                                    ###
///               %unsigned 6  HfThr_1                   0x12
///                                    ###
///                                    * Threshold controls for high frequency detection. Both set the condition of HF.
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00034 Rpd                  (P)
///               %unsigned 5  RpdThr_0                  0x2
///                                    ###
///                                    * Threshold controls for global repeated pattern detection. Both set the condition of RPD.
///                                    ###
///               %unsigned 5  RpdThr_1                  0xF
///                                    ###
///                                    * Threshold controls for global repeated pattern detection. Both set the condition of RPD.
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x00038 SdiSad               (P)
///               %unsigned 6  SdiSadThr_0               0x26
///                                    ###
///                                    * Maximum allowed SAD value for angle detection. The value is subjected contrast adaptation.
///                                    ###
///               %unsigned 6  SdiSadThr_1               0x20
///                                    ###
///                                    * Maximum allowed SAD value for angle detection. The value is subjected contrast adaptation.
///                                    ###
///               %unsigned 6  SdiSadThr_2               0x22
///                                    ###
///                                    * Maximum allowed SAD value for angle detection. The value is subjected contrast adaptation.
///                                    ###
///               %unsigned 8  SdiSadThr_3               0xAA
///                                    ###
///                                    * Maximum allowed SAD value for angle detection. The value is subjected contrast adaptation.
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x0003C DiagByps             (P)
///               %unsigned 1  YDiagByps                 0x0
///                                    ###
///                                    * Y-SDI diagonal bypass control
///                                    ###
///               %unsigned 1  UVDiagByps                0x0
///                                    ###
///                                    * UV-SDI diagonal bypass control
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00040 SdiNoise             (P)
///               %unsigned 6  SdiNoiseThr               0x10
///                                    ###
///                                    * The two step threshold values to determine multiple local minima. 1st one used for coarse detection. 2nd one used for fine detection.
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00044 Sdi0                 (P)
///               %unsigned 3  SdiAbsAngFilterThr        0x6
///                                    ###
///                                    * AVDI uses vertical tap2 or tap4 control. When angle is low, it is more desired to use tap2.
///                                    ###
///               %unsigned 4  SdiIntClamp               0xC
///                                    ###
///                                    * Maximum allowed horizontal kennel size for AVDI
///                                    ###
///               %unsigned 2  SdiAbsAngConfThr          0x1
///                                    ###
///                                    * Angle threshold to use confidence level estimation in case of edge is low or high
///                                    ###
///               %unsigned 4  SdiAbsAngThr              0x2
///                                    ###
///                                    * Angle threshold to use confidence level estimation in case of edge is low or high
///                                    ###
///               %unsigned 5  SdiAngStretchThr          0x0
///                                    ###
///                                    * Angle stretch filter output threshold control
///                                    ###
///               %unsigned 3  SdiHighAngConfValue_0     0x1
///                                    ###
///                                    * user defined angle confidence levels for high histogram value
///                                    ###
///               %unsigned 3  SdiHighAngConfValue_1     0x3
///                                    ###
///                                    * user defined angle confidence levels for high histogram value
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00048 Sdi1                 (P)
///               %unsigned 5  SdiAngConfBlendGain_0     0x10
///                                    ###
///                                    * Final blending control between VDI and AVDI outputs
///                                    ###
///               %unsigned 5  SdiAngConfBlendGain_1     0xE
///                                    ###
///                                    * Final blending control between VDI and AVDI outputs
///                                    ###
///               %unsigned 5  SdiAngConfBlendGain_2     0xC
///                                    ###
///                                    * Final blending control between VDI and AVDI outputs
///                                    ###
///               %unsigned 5  SdiAngConfBlendGain_3     0x9
///                                    ###
///                                    * Final blending control between VDI and AVDI outputs
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x0004C Sdi2                 (P)
///               %unsigned 5  SdiAngConfBlendGain_4     0x7
///                                    ###
///                                    * Final blending control between VDI and AVDI outputs
///                                    ###
///               %unsigned 5  SdiAngConfBlendGain_5     0x3
///                                    ###
///                                    * Final blending control between VDI and AVDI outputs
///                                    ###
///               %unsigned 5  SdiAngConfBlendGain_6     0x0
///                                    ###
///                                    * Final blending control between VDI and AVDI outputs
///                                    ###
///               %%        17         # Stuffing bits...
///     @ 0x00050 ShiftBit             (P)
///               %unsigned 3  BlamdShiftBit             0x2
///                                    ###
///                                    * Accumulator output bit right-shifted control for BLAMD[16][16] detection. The effect is to reduce to number of bits sent to F/W
///                                    ###
///               %unsigned 3  BlasdShiftBit             0x2
///                                    ###
///                                    * Same as above for BLASD[16][16]
///                                    ###
///               %unsigned 3  BsosdShiftBit             0x2
///                                    ###
///                                    * Same as above for BSOSD[16][16]
///                                    ###
///               %unsigned 3  BlmhfShiftBit             0x2
///                                    ###
///                                    * Same as above for BSOSD[16][16]
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00054 Sdi3                 (P)
///               %unsigned 4  SdiScaleFactor_0          0xC
///                                    ###
///                                    * Auto noise threshold value adjustment for local minima detection using the vertical SAD value.
///                                    ###
///               %unsigned 4  SdiScaleFactor_1          0xD
///                                    ###
///                                    * Auto noise threshold value adjustment for local minima detection using the vertical SAD value.
///                                    ###
///               %unsigned 4  SdiScaleFactor_2          0xE
///                                    ###
///                                    * Auto noise threshold value adjustment for local minima detection using the vertical SAD value.
///                                    ###
///               %unsigned 4  SdiScaleFactor_3          0xF
///                                    ###
///                                    * Auto noise threshold value adjustment for local minima detection using the vertical SAD value.
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00058 Sdi4                 (P)
///               %unsigned 10 SdiIntDifThr_0            0x136
///                                    ###
///                                    * interpolation difference (vdi vs avdi) quantizing threshold controls. It is subjected contrast adaptation
///                                    ###
///               %unsigned 10 SdiIntDifThr_1            0x190
///                                    ###
///                                    * interpolation difference (vdi vs avdi) quantizing threshold controls. It is subjected contrast adaptation
///                                    ###
///               %unsigned 10 SdiIntDifThr_2            0x136
///                                    ###
///                                    * interpolation difference (vdi vs avdi) quantizing threshold controls. It is subjected contrast adaptation
///                                    ###
///               %%        2          # Stuffing bits...
///     @ 0x0005C Sdi5                 (P)
///               %unsigned 10 SdiIntDifThr_3            0x168
///                                    ###
///                                    * interpolation difference (vdi vs avdi) quantizing threshold controls. It is subjected contrast adaptation
///                                    ###
///               %unsigned 10 SdiIntDifThr_4            0x136
///                                    ###
///                                    * interpolation difference (vdi vs avdi) quantizing threshold controls. It is subjected contrast adaptation
///                                    ###
///               %unsigned 10 SdiIntDifThr_5            0x190
///                                    ###
///                                    * interpolation difference (vdi vs avdi) quantizing threshold controls. It is subjected contrast adaptation
///                                    ###
///               %%        2          # Stuffing bits...
///     @ 0x00060 Sdi6                 (P)
///               %unsigned 6  SdiMdvThr_0               0x3
///                                    ###
///                                    * Motion threshold for SDI blending control
///                                    ###
///               %unsigned 6  SdiMdvThr_1               0x6
///                                    ###
///                                    * Motion threshold for SDI blending control
///                                    ###
///               %unsigned 6  SdiLowSadThr              0x10
///                                    ###
///                                    * A threshold value to force SdiScaleFactor output to be 0 when vertical SAD is low.
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x00064 Angle                (P)
///               %unsigned 1  AngConfEn                 0x1
///                                    ###
///                                    * Enable control for angle confidence level estimation
///                                    ###
///               %unsigned 3  AngConfUser               0x4
///                                    ###
///                                    * User-define angle confidence level when detector is not enable
///                                    ###
///               %unsigned 1  AngCnstEn                 0x1
///                                    ###
///                                    * Enable control for SDI contrast detection
///                                    ###
///               %unsigned 2  AngCnstUser               0x2
///                                    ###
///                                    * User-define contrast when detector is not enable
///                                    ###
///               %unsigned 1  AngEdgeEn                 0x1
///                                    ###
///                                    * Enable control for SDI edge detection
///                                    ###
///               %unsigned 3  AngEdgeUser               0x3
///                                    ###
///                                    * User-define edge when detector is not enable
///                                    ###
///               %unsigned 1  AngleEn                   0x1
///                                    ###
///                                    * Enable control for angle detection
///                                    ###
///               %unsigned 4  AngleUser                 0x5
///                                    ###
///                                    * User-define angle when detector is not enable
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00068 MotDet               (P)
///               %unsigned 1  LAMDEn                    0x1
///                                    ###
///                                    * Enable control for LAMD detection
///                                    ###
///               %unsigned 2  LAMDUser                  0x3
///                                    ###
///                                    * User-define LAMD value when detector is not enable
///                                    ###
///               %unsigned 1  LASDEn                    0x1
///                                    ###
///                                    * Enable control for LASD detection
///                                    ###
///               %unsigned 1  LASDUser                  0x0
///                                    ###
///                                    * User-define LASD value when detector is not enable
///                                    ###
///               %unsigned 1  LASDSel                   0x0
///                                    ###
///                                    * LASD detection selection control
///                                    * 0: local detection enable
///                                    * 1: block detection enable
///                                    ###
///               %unsigned 1  SOSDEn                    0x1
///                                    ###
///                                    * Enable control for SOSD detection
///                                    ###
///               %unsigned 1  SOSDUser                  0x0
///                                    ###
///                                    * User-define SOSD value when detector is not enable
///                                    ###
///               %unsigned 1  SOSDSel                   0x0
///                                    ###
///                                    * SOSD detection selection control
///                                    * 0: local detection enable
///                                    * 1: block detection enable
///                                    ###
///               %unsigned 1  MDVEn                     0x1
///                                    ###
///                                    * Enable control for motion detection
///                                    ###
///               %unsigned 3  MDVUser_0                 0x4
///                                    ###
///                                    * User-defined motion values for Y and UV
///                                    ###
///               %unsigned 3  MDVUser_1                 0x4
///                                    ###
///                                    * User-defined motion values for Y and UV
///                                    ###
///               %unsigned 1  HVLineEn                  0x1
///                                    ###
///                                    * Enable control for motion line detection
///                                    ###
///               %unsigned 2  HVLineUser                0x0
///                                    ###
///                                    * User defined line ID
///                                    ###
///               %%        13         # Stuffing bits...
///     @ 0x0006C HVLine               (P)
///               %unsigned 8  HVLineGain_0              0x24
///                                    ###
///                                    * motion line detection gain control
///                                    ###
///               %unsigned 8  HVLineGain_1              0x18
///                                    ###
///                                    * motion line detection gain control
///                                    ###
///               %unsigned 8  HVLineThr_0               0xE
///                                    ###
///                                    * motion line detection threshold control
///                                    ###
///               %unsigned 8  HVLineThr_1               0xE
///                                    ###
///                                    * motion line detection threshold control
///                                    ###
///     @ 0x00070 MdvYiir              (P)
///               %unsigned 5  MdvYiirGain_0             0x4
///                                    ###
///                                    * Gain control for 1st order temporal IIR filter on motion values
///                                    ###
///               %unsigned 5  MdvYiirGain_1             0xF
///                                    ###
///                                    * Gain control for 1st order temporal IIR filter on motion values
///                                    ###
///               %unsigned 8  MdvYiirClamp              0xF
///                                    ###
///                                    * The maximum value control for the motion values to send to DRAM
///                                    ###
///               %unsigned 1  MdvYiirEn                 0x0
///                                    ###
///                                    * Temporal IIR filter for motion detection enable control.
///                                    * Note: IIR is not implemented in hardware. MdvYiir registers have no effect.
///                                    ###
///               %%        13         # Stuffing bits...
///     @ 0x00074 C420A                (P)
///               %unsigned 8  EThr                      0x60
///                                    ###
///                                    * Edge threshold control for C420 error detection
///                                    ###
///               %unsigned 4  C420StNum                 0x4
///                                    ###
///                                    * Numerical number added to the Y accumulator in case of the static pixel for C420 error detection
///                                    ###
///               %unsigned 4  C420AccShiftBits          0xC
///                                    ###
///                                    * Edge threshold control for C420 error detection
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00078 C420B                (P)
///               %unsigned 5  MThr_0                    0x14
///                                    ###
///                                    * motion threshold value for C420 error detection
///                                    ###
///               %unsigned 5  MThr_1                    0x8
///                                    ###
///                                    * motion threshold value for C420 error detection
///                                    ###
///               %unsigned 5  MThr_2                    0x3
///                                    ###
///                                    * motion threshold value for C420 error detection
///                                    ###
///               %unsigned 5  MdvThr                    0x4
///                                    ###
///                                    * motion threshold value for GHF detection
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x0007C MdvFilterSel         (P)
///               %unsigned 1  MdvFilterSel_0            0x0
///                                    ###
///                                    * Y and UV motion detection filter selection control
///                                    * 0: temporal stretch
///                                    * 1: LPF
///                                    ###
///               %unsigned 1  MdvFilterSel_1            0x0
///                                    ###
///                                    * Y and UV motion detection filter selection control
///                                    * 0: temporal stretch
///                                    * 1: LPF
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00080 LcnstGain            (P)
///               %unsigned 8  LcnstGain_0               0x40
///                                    ###
///                                    * Low and high cntrast output gain adjustment for SDI SAD calculation
///                                    ###
///               %unsigned 8  LcnstGain_1               0xC
///                                    ###
///                                    * Low and high cntrast output gain adjustment for SDI SAD calculation
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00084 YUVBlendGain         (P)
///               %unsigned 8  YUVBlendGain_0            0x80
///                                    ###
///                                    * VTF and SDI output blending control for motion=3
///                                    ###
///               %unsigned 8  YUVBlendGain_1            0x80
///                                    ###
///                                    * VTF and SDI output blending control for motion=3
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00088 YUVMdvBlendGain      (P)
///               %unsigned 9  YUVMdvBlendGain_0         0x100
///                                    ###
///                                    * Mixed Y and UV motion values blending controls
///                                    ###
///               %unsigned 9  YUVMdvBlendGain_1         0x100
///                                    ###
///                                    * Mixed Y and UV motion values blending controls
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x0008C YMdvGain             (P)
///               %unsigned 8  YMdvGain_0                0x40
///                                    ###
///                                    * Y normal motion detection (MDF) otuput gain control
///                                    ###
///               %unsigned 8  YMdvGain_1                0x10
///                                    ###
///                                    * Y normal motion detection (MDF) otuput gain control
///                                    ###
///               %unsigned 8  YMdvGain_2                0x10
///                                    ###
///                                    * Y normal motion detection (MDF) otuput gain control
///                                    ###
///               %unsigned 8  YMdvGain_3                0x0
///                                    ###
///                                    * Y normal motion detection (MDF) otuput gain control
///                                    ###
///     @ 0x00090 YMdvGain1            (P)
///               %unsigned 8  YMdvGain_4                0xD
///                                    ###
///                                    * Y normal motion detection (MDF) output gain control
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00094 YMdvOffset           (P)
///               %unsigned 6  YMdvOffset_0              0x18
///                                    ###
///                                    * Y normal motion detection (MDF) otuput offset control
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00098 UVMdvGain            (P)
///               %unsigned 8  UVMdvGain                 0xF
///                                    ###
///                                    * UV normal motion detection (MDF) otuput gain control
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x0009C Impulse              (P)
///               %unsigned 1  ImpulseEn                 0x1
///                                    ###
///                                    * Impulse noise detection enable control
///                                    ###
///               %unsigned 8  ImpulseThr                0x80
///                                    ###
///                                    * Threshold control for impulse noise detection
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x000A0 Nr                   (P)
///               %unsigned 1  YNr                       0x0
///                                    ###
///                                    * Y noise reduction enable control
///                                    ###
///               %unsigned 1  UVNr                      0x0
///                                    ###
///                                    * UV noise reduction and cross color surpression enable control
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x000A4 MdvLcnst0            (P)
///               %unsigned 9  MdvLcnstGain_0            0x12C
///                                    ###
///                                    * Low-contrast motion gain controls
///                                    ###
///               %unsigned 9  MdvLcnstGain_1            0x50
///                                    ###
///                                    * Low-contrast motion gain controls
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x000A8 MdvLcnst1            (P)
///               %unsigned 9  MdvLcnstGain_2            0xBE
///                                    ###
///                                    * Low-contrast motion gain controls
///                                    ###
///               %unsigned 9  MdvLcnstGain_3            0x40
///                                    ###
///                                    * Low-contrast motion gain controls
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x000AC MdvLcnst2            (P)
///               %unsigned 5  MdvLcnstValue_0           0x3
///                                    ###
///                                    * Low-contrast motion offset controls
///                                    ###
///               %unsigned 5  MdvLcnstValue_1           0xA
///                                    ###
///                                    * Low-contrast motion offset controls
///                                    ###
///               %unsigned 5  MdvLcnstValue_2           0x3
///                                    ###
///                                    * Low-contrast motion offset controls
///                                    ###
///               %unsigned 5  MdvLcnstValue_3           0x3
///                                    ###
///                                    * Low-contrast motion offset controls
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x000B0 MdvLcnst3            (P)
///               %unsigned 1  MdvLcnstEnhSel_0          0x0
///                                    ###
///                                    * low-contrast enhance selection control for motion detection
///                                    ###
///               %unsigned 1  MdvLcnstEnhSel_1          0x0
///                                    ###
///                                    * low-contrast enhance selection control for motion detection
///                                    ###
///               %unsigned 1  MdvLcnstEnhSel_2          0x0
///                                    ###
///                                    * low-contrast enhance selection control for motion detection
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x000B4 VTFCoef0             (P)
///               %signed   9  VTFCoef_0                 16
///                                    ###
///                                    * VTF coefficents in 422 mode
///                                    ###
///               %signed   9  VTFCoef_1                 -80
///                                    ###
///                                    * VTF coefficents in 422 mode
///                                    ###
///               %signed   9  VTFCoef_2                 112
///                                    ###
///                                    * VTF coefficents in 422 mode
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x000B8 VTFCoef1             (P)
///               %signed   9  VTFCoef_3                 160
///                                    ###
///                                    * VTF coefficents in 422 mode
///                                    ###
///               %signed   9  VTFCoef_4                 112
///                                    ###
///                                    * VTF coefficents in 422 mode
///                                    ###
///               %signed   9  VTFCoef_5                 -80
///                                    ###
///                                    * VTF coefficents in 422 mode
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x000BC VTFCoef2             (P)
///               %signed   9  VTFCoef_6                 16
///                                    ###
///                                    * VTF coefficents in 422 mode
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x000C0 C420VTFCoef0         (P)
///               %signed   9  C420VTFCoef_0             0
///                                    ###
///                                    * VTF coefficents in 420 mode
///                                    ###
///               %signed   9  C420VTFCoef_1             0
///                                    ###
///                                    * VTF coefficents in 420 mode
///                                    ###
///               %signed   9  C420VTFCoef_2             64
///                                    ###
///                                    * VTF coefficents in 420 mode
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x000C4 C420VTFCoef1         (P)
///               %signed   9  C420VTFCoef_3             128
///                                    ###
///                                    * VTF coefficents in 420 mode
///                                    ###
///               %signed   9  C420VTFCoef_4             64
///                                    ###
///                                    * VTF coefficents in 420 mode
///                                    ###
///               %signed   9  C420VTFCoef_5             0
///                                    ###
///                                    * VTF coefficents in 420 mode
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x000C8 C420VTFCoef2         (P)
///               %signed   9  C420VTFCoef_6             0
///                                    ###
///                                    * VTF coefficents in 420 mode
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x000CC C420Mode             (P)
///               %unsigned 1  C420InMode                0x0
///                                    ###
///                                    * 420 input mode selection control
///                                    ###
///               %unsigned 1  C420OutMode               0x0
///                                    ###
///                                    * 420 output mode selection control
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x000D0 IntOutOnly           (P)
///               %unsigned 1  IntOutOnly                0x1
///                                    ###
///                                    * DI output uses interpolated data only
///                                    * 0: full DI output
///                                    * 1: int only
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000D4 ChromaMdvUseOnly     (P)
///               %unsigned 1  ChromaMdvUseOnly          0x0
///                                    ###
///                                    * UVMD disable control and use YMD
///                                    * 0: enable CMD
///                                    * 1: diable and use YMD
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000D8 MdvMin               (P)
///               %unsigned 8  MdvMinSt_0                0x20
///                                    ###
///                                    * border control for minimum motion detection.
///                                    * [0] horizontal border control
///                                    ###
///               %unsigned 8  MdvMinSt_1                0x10
///                                    ###
///                                    * border control for minimum motion detection.
///                                    * [1] vertical border control
///                                    ###
///               %unsigned 8  MdvMinThr_0               0xF
///                                    ###
///                                    * Threshold controls for minimum motion detection.
///                                    ###
///               %unsigned 8  MdvMinThr_1               0x80
///                                    ###
///                                    * Threshold controls for minimum motion detection.
///                                    ###
///     @ 0x000DC GAccShiftBits        (P)
///               %unsigned 2  GhfAccShiftBits           0x1
///                                    ###
///                                    * Number of bits shifted from accumulator before sending to F/W
///                                    ###
///               %unsigned 2  GosdAccShiftBits          0x0
///                                    ###
///                                    * Number of bits shifted from accumulator before sending to F/W
///                                    ###
///               %unsigned 2  GrpdAccShiftBits          0x0
///                                    ###
///                                    * Number of bits shifted from accumulator before sending to F/W
///                                    ###
///               %unsigned 2  GdiAccShiftBits           0x0
///                                    ###
///                                    * Number of bits shifted from accumulator before sending to F/W
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x000E0 YUV8BitIn            (P)
///               %unsigned 2  YUV8BitIn                 0x0
///                                    ###
///                                    * 8/10 bit YUV input selection control
///                                    * 0: 10-bits
///                                    * 1: 8-bits
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     228B, bits:     903b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_MadiReg
#define h_MadiReg (){}

    #define     RA_MadiReg_Edge0                               0x0000

    #define     BA_MadiReg_Edge0_EdgeGain_0                    0x0000
    #define     B16MadiReg_Edge0_EdgeGain_0                    0x0000
    #define   LSb32MadiReg_Edge0_EdgeGain_0                       0
    #define   LSb16MadiReg_Edge0_EdgeGain_0                       0
    #define       bMadiReg_Edge0_EdgeGain_0                    6
    #define   MSK32MadiReg_Edge0_EdgeGain_0                       0x0000003F

    #define     BA_MadiReg_Edge0_EdgeGain_1                    0x0000
    #define     B16MadiReg_Edge0_EdgeGain_1                    0x0000
    #define   LSb32MadiReg_Edge0_EdgeGain_1                       6
    #define   LSb16MadiReg_Edge0_EdgeGain_1                       6
    #define       bMadiReg_Edge0_EdgeGain_1                    6
    #define   MSK32MadiReg_Edge0_EdgeGain_1                       0x00000FC0
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Edge1                               0x0004

    #define     BA_MadiReg_Edge1_EdgeThr_0                     0x0004
    #define     B16MadiReg_Edge1_EdgeThr_0                     0x0004
    #define   LSb32MadiReg_Edge1_EdgeThr_0                        0
    #define   LSb16MadiReg_Edge1_EdgeThr_0                        0
    #define       bMadiReg_Edge1_EdgeThr_0                     8
    #define   MSK32MadiReg_Edge1_EdgeThr_0                        0x000000FF

    #define     BA_MadiReg_Edge1_EdgeThr_1                     0x0005
    #define     B16MadiReg_Edge1_EdgeThr_1                     0x0004
    #define   LSb32MadiReg_Edge1_EdgeThr_1                        8
    #define   LSb16MadiReg_Edge1_EdgeThr_1                        8
    #define       bMadiReg_Edge1_EdgeThr_1                     8
    #define   MSK32MadiReg_Edge1_EdgeThr_1                        0x0000FF00

    #define     BA_MadiReg_Edge1_EdgeThr_2                     0x0006
    #define     B16MadiReg_Edge1_EdgeThr_2                     0x0006
    #define   LSb32MadiReg_Edge1_EdgeThr_2                        16
    #define   LSb16MadiReg_Edge1_EdgeThr_2                        0
    #define       bMadiReg_Edge1_EdgeThr_2                     8
    #define   MSK32MadiReg_Edge1_EdgeThr_2                        0x00FF0000

    #define     BA_MadiReg_Edge1_EdgeThr_3                     0x0007
    #define     B16MadiReg_Edge1_EdgeThr_3                     0x0006
    #define   LSb32MadiReg_Edge1_EdgeThr_3                        24
    #define   LSb16MadiReg_Edge1_EdgeThr_3                        8
    #define       bMadiReg_Edge1_EdgeThr_3                     8
    #define   MSK32MadiReg_Edge1_EdgeThr_3                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Cnst                                0x0008

    #define     BA_MadiReg_Cnst_CnstThr_0                      0x0008
    #define     B16MadiReg_Cnst_CnstThr_0                      0x0008
    #define   LSb32MadiReg_Cnst_CnstThr_0                         0
    #define   LSb16MadiReg_Cnst_CnstThr_0                         0
    #define       bMadiReg_Cnst_CnstThr_0                      8
    #define   MSK32MadiReg_Cnst_CnstThr_0                         0x000000FF

    #define     BA_MadiReg_Cnst_CnstThr_1                      0x0009
    #define     B16MadiReg_Cnst_CnstThr_1                      0x0008
    #define   LSb32MadiReg_Cnst_CnstThr_1                         8
    #define   LSb16MadiReg_Cnst_CnstThr_1                         8
    #define       bMadiReg_Cnst_CnstThr_1                      8
    #define   MSK32MadiReg_Cnst_CnstThr_1                         0x0000FF00

    #define     BA_MadiReg_Cnst_CnstThr_2                      0x000A
    #define     B16MadiReg_Cnst_CnstThr_2                      0x000A
    #define   LSb32MadiReg_Cnst_CnstThr_2                         16
    #define   LSb16MadiReg_Cnst_CnstThr_2                         0
    #define       bMadiReg_Cnst_CnstThr_2                      8
    #define   MSK32MadiReg_Cnst_CnstThr_2                         0x00FF0000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvCnst                             0x000C

    #define     BA_MadiReg_MdvCnst_MdvCnstThr                  0x000C
    #define     B16MadiReg_MdvCnst_MdvCnstThr                  0x000C
    #define   LSb32MadiReg_MdvCnst_MdvCnstThr                     0
    #define   LSb16MadiReg_MdvCnst_MdvCnstThr                     0
    #define       bMadiReg_MdvCnst_MdvCnstThr                  6
    #define   MSK32MadiReg_MdvCnst_MdvCnstThr                     0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_LamdNoise                           0x0010

    #define     BA_MadiReg_LamdNoise_LamdNoiseThr_0            0x0010
    #define     B16MadiReg_LamdNoise_LamdNoiseThr_0            0x0010
    #define   LSb32MadiReg_LamdNoise_LamdNoiseThr_0               0
    #define   LSb16MadiReg_LamdNoise_LamdNoiseThr_0               0
    #define       bMadiReg_LamdNoise_LamdNoiseThr_0            5
    #define   MSK32MadiReg_LamdNoise_LamdNoiseThr_0               0x0000001F

    #define     BA_MadiReg_LamdNoise_LamdNoiseThr_1            0x0010
    #define     B16MadiReg_LamdNoise_LamdNoiseThr_1            0x0010
    #define   LSb32MadiReg_LamdNoise_LamdNoiseThr_1               5
    #define   LSb16MadiReg_LamdNoise_LamdNoiseThr_1               5
    #define       bMadiReg_LamdNoise_LamdNoiseThr_1            5
    #define   MSK32MadiReg_LamdNoise_LamdNoiseThr_1               0x000003E0
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_LasdNoise                           0x0014

    #define     BA_MadiReg_LasdNoise_LasdNoiseThr_0            0x0014
    #define     B16MadiReg_LasdNoise_LasdNoiseThr_0            0x0014
    #define   LSb32MadiReg_LasdNoise_LasdNoiseThr_0               0
    #define   LSb16MadiReg_LasdNoise_LasdNoiseThr_0               0
    #define       bMadiReg_LasdNoise_LasdNoiseThr_0            5
    #define   MSK32MadiReg_LasdNoise_LasdNoiseThr_0               0x0000001F

    #define     BA_MadiReg_LasdNoise_LasdNoiseThr_1            0x0014
    #define     B16MadiReg_LasdNoise_LasdNoiseThr_1            0x0014
    #define   LSb32MadiReg_LasdNoise_LasdNoiseThr_1               5
    #define   LSb16MadiReg_LasdNoise_LasdNoiseThr_1               5
    #define       bMadiReg_LasdNoise_LasdNoiseThr_1            5
    #define   MSK32MadiReg_LasdNoise_LasdNoiseThr_1               0x000003E0
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_LAMD                                0x0018

    #define     BA_MadiReg_LAMD_LAMDThr_0                      0x0018
    #define     B16MadiReg_LAMD_LAMDThr_0                      0x0018
    #define   LSb32MadiReg_LAMD_LAMDThr_0                         0
    #define   LSb16MadiReg_LAMD_LAMDThr_0                         0
    #define       bMadiReg_LAMD_LAMDThr_0                      5
    #define   MSK32MadiReg_LAMD_LAMDThr_0                         0x0000001F

    #define     BA_MadiReg_LAMD_LAMDThr_1                      0x0018
    #define     B16MadiReg_LAMD_LAMDThr_1                      0x0018
    #define   LSb32MadiReg_LAMD_LAMDThr_1                         5
    #define   LSb16MadiReg_LAMD_LAMDThr_1                         5
    #define       bMadiReg_LAMD_LAMDThr_1                      5
    #define   MSK32MadiReg_LAMD_LAMDThr_1                         0x000003E0

    #define     BA_MadiReg_LAMD_LAMDThr_2                      0x0019
    #define     B16MadiReg_LAMD_LAMDThr_2                      0x0018
    #define   LSb32MadiReg_LAMD_LAMDThr_2                         10
    #define   LSb16MadiReg_LAMD_LAMDThr_2                         10
    #define       bMadiReg_LAMD_LAMDThr_2                      5
    #define   MSK32MadiReg_LAMD_LAMDThr_2                         0x00007C00

    #define     BA_MadiReg_LAMD_LAMDEnhThr_0                   0x0019
    #define     B16MadiReg_LAMD_LAMDEnhThr_0                   0x0018
    #define   LSb32MadiReg_LAMD_LAMDEnhThr_0                      15
    #define   LSb16MadiReg_LAMD_LAMDEnhThr_0                      15
    #define       bMadiReg_LAMD_LAMDEnhThr_0                   2
    #define   MSK32MadiReg_LAMD_LAMDEnhThr_0                      0x00018000

    #define     BA_MadiReg_LAMD_LAMDEnhThr_1                   0x001A
    #define     B16MadiReg_LAMD_LAMDEnhThr_1                   0x001A
    #define   LSb32MadiReg_LAMD_LAMDEnhThr_1                      17
    #define   LSb16MadiReg_LAMD_LAMDEnhThr_1                      1
    #define       bMadiReg_LAMD_LAMDEnhThr_1                   2
    #define   MSK32MadiReg_LAMD_LAMDEnhThr_1                      0x00060000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_LASD                                0x001C

    #define     BA_MadiReg_LASD_LASDThr_0                      0x001C
    #define     B16MadiReg_LASD_LASDThr_0                      0x001C
    #define   LSb32MadiReg_LASD_LASDThr_0                         0
    #define   LSb16MadiReg_LASD_LASDThr_0                         0
    #define       bMadiReg_LASD_LASDThr_0                      3
    #define   MSK32MadiReg_LASD_LASDThr_0                         0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_SOSD0                               0x0020

    #define     BA_MadiReg_SOSD0_SOSDThr_0                     0x0020
    #define     B16MadiReg_SOSD0_SOSDThr_0                     0x0020
    #define   LSb32MadiReg_SOSD0_SOSDThr_0                        0
    #define   LSb16MadiReg_SOSD0_SOSDThr_0                        0
    #define       bMadiReg_SOSD0_SOSDThr_0                     8
    #define   MSK32MadiReg_SOSD0_SOSDThr_0                        0x000000FF

    #define     BA_MadiReg_SOSD0_SOSDThr_1                     0x0021
    #define     B16MadiReg_SOSD0_SOSDThr_1                     0x0020
    #define   LSb32MadiReg_SOSD0_SOSDThr_1                        8
    #define   LSb16MadiReg_SOSD0_SOSDThr_1                        8
    #define       bMadiReg_SOSD0_SOSDThr_1                     8
    #define   MSK32MadiReg_SOSD0_SOSDThr_1                        0x0000FF00

    #define     BA_MadiReg_SOSD0_SOSDThr_2                     0x0022
    #define     B16MadiReg_SOSD0_SOSDThr_2                     0x0022
    #define   LSb32MadiReg_SOSD0_SOSDThr_2                        16
    #define   LSb16MadiReg_SOSD0_SOSDThr_2                        0
    #define       bMadiReg_SOSD0_SOSDThr_2                     8
    #define   MSK32MadiReg_SOSD0_SOSDThr_2                        0x00FF0000

    #define     BA_MadiReg_SOSD0_SOSDThr_3                     0x0023
    #define     B16MadiReg_SOSD0_SOSDThr_3                     0x0022
    #define   LSb32MadiReg_SOSD0_SOSDThr_3                        24
    #define   LSb16MadiReg_SOSD0_SOSDThr_3                        8
    #define       bMadiReg_SOSD0_SOSDThr_3                     8
    #define   MSK32MadiReg_SOSD0_SOSDThr_3                        0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_SOSD1                               0x0024

    #define     BA_MadiReg_SOSD1_SOSDThr_4                     0x0024
    #define     B16MadiReg_SOSD1_SOSDThr_4                     0x0024
    #define   LSb32MadiReg_SOSD1_SOSDThr_4                        0
    #define   LSb16MadiReg_SOSD1_SOSDThr_4                        0
    #define       bMadiReg_SOSD1_SOSDThr_4                     8
    #define   MSK32MadiReg_SOSD1_SOSDThr_4                        0x000000FF

    #define     BA_MadiReg_SOSD1_SOSDThr_5                     0x0025
    #define     B16MadiReg_SOSD1_SOSDThr_5                     0x0024
    #define   LSb32MadiReg_SOSD1_SOSDThr_5                        8
    #define   LSb16MadiReg_SOSD1_SOSDThr_5                        8
    #define       bMadiReg_SOSD1_SOSDThr_5                     8
    #define   MSK32MadiReg_SOSD1_SOSDThr_5                        0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_LAMDGain                            0x0028

    #define     BA_MadiReg_LAMDGain_LAMDGain_0                 0x0028
    #define     B16MadiReg_LAMDGain_LAMDGain_0                 0x0028
    #define   LSb32MadiReg_LAMDGain_LAMDGain_0                    0
    #define   LSb16MadiReg_LAMDGain_LAMDGain_0                    0
    #define       bMadiReg_LAMDGain_LAMDGain_0                 8
    #define   MSK32MadiReg_LAMDGain_LAMDGain_0                    0x000000FF

    #define     BA_MadiReg_LAMDGain_LAMDGain_1                 0x0029
    #define     B16MadiReg_LAMDGain_LAMDGain_1                 0x0028
    #define   LSb32MadiReg_LAMDGain_LAMDGain_1                    8
    #define   LSb16MadiReg_LAMDGain_LAMDGain_1                    8
    #define       bMadiReg_LAMDGain_LAMDGain_1                 8
    #define   MSK32MadiReg_LAMDGain_LAMDGain_1                    0x0000FF00

    #define     BA_MadiReg_LAMDGain_LAMDGain_2                 0x002A
    #define     B16MadiReg_LAMDGain_LAMDGain_2                 0x002A
    #define   LSb32MadiReg_LAMDGain_LAMDGain_2                    16
    #define   LSb16MadiReg_LAMDGain_LAMDGain_2                    0
    #define       bMadiReg_LAMDGain_LAMDGain_2                 8
    #define   MSK32MadiReg_LAMDGain_LAMDGain_2                    0x00FF0000

    #define     BA_MadiReg_LAMDGain_LAMDGain_3                 0x002B
    #define     B16MadiReg_LAMDGain_LAMDGain_3                 0x002A
    #define   LSb32MadiReg_LAMDGain_LAMDGain_3                    24
    #define   LSb16MadiReg_LAMDGain_LAMDGain_3                    8
    #define       bMadiReg_LAMDGain_LAMDGain_3                 8
    #define   MSK32MadiReg_LAMDGain_LAMDGain_3                    0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_LASDGain                            0x002C

    #define     BA_MadiReg_LASDGain_LASDGain_0                 0x002C
    #define     B16MadiReg_LASDGain_LASDGain_0                 0x002C
    #define   LSb32MadiReg_LASDGain_LASDGain_0                    0
    #define   LSb16MadiReg_LASDGain_LASDGain_0                    0
    #define       bMadiReg_LASDGain_LASDGain_0                 8
    #define   MSK32MadiReg_LASDGain_LASDGain_0                    0x000000FF

    #define     BA_MadiReg_LASDGain_LASDGain_1                 0x002D
    #define     B16MadiReg_LASDGain_LASDGain_1                 0x002C
    #define   LSb32MadiReg_LASDGain_LASDGain_1                    8
    #define   LSb16MadiReg_LASDGain_LASDGain_1                    8
    #define       bMadiReg_LASDGain_LASDGain_1                 8
    #define   MSK32MadiReg_LASDGain_LASDGain_1                    0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Hf                                  0x0030

    #define     BA_MadiReg_Hf_HfThr_0                          0x0030
    #define     B16MadiReg_Hf_HfThr_0                          0x0030
    #define   LSb32MadiReg_Hf_HfThr_0                             0
    #define   LSb16MadiReg_Hf_HfThr_0                             0
    #define       bMadiReg_Hf_HfThr_0                          6
    #define   MSK32MadiReg_Hf_HfThr_0                             0x0000003F

    #define     BA_MadiReg_Hf_HfThr_1                          0x0030
    #define     B16MadiReg_Hf_HfThr_1                          0x0030
    #define   LSb32MadiReg_Hf_HfThr_1                             6
    #define   LSb16MadiReg_Hf_HfThr_1                             6
    #define       bMadiReg_Hf_HfThr_1                          6
    #define   MSK32MadiReg_Hf_HfThr_1                             0x00000FC0
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Rpd                                 0x0034

    #define     BA_MadiReg_Rpd_RpdThr_0                        0x0034
    #define     B16MadiReg_Rpd_RpdThr_0                        0x0034
    #define   LSb32MadiReg_Rpd_RpdThr_0                           0
    #define   LSb16MadiReg_Rpd_RpdThr_0                           0
    #define       bMadiReg_Rpd_RpdThr_0                        5
    #define   MSK32MadiReg_Rpd_RpdThr_0                           0x0000001F

    #define     BA_MadiReg_Rpd_RpdThr_1                        0x0034
    #define     B16MadiReg_Rpd_RpdThr_1                        0x0034
    #define   LSb32MadiReg_Rpd_RpdThr_1                           5
    #define   LSb16MadiReg_Rpd_RpdThr_1                           5
    #define       bMadiReg_Rpd_RpdThr_1                        5
    #define   MSK32MadiReg_Rpd_RpdThr_1                           0x000003E0
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_SdiSad                              0x0038

    #define     BA_MadiReg_SdiSad_SdiSadThr_0                  0x0038
    #define     B16MadiReg_SdiSad_SdiSadThr_0                  0x0038
    #define   LSb32MadiReg_SdiSad_SdiSadThr_0                     0
    #define   LSb16MadiReg_SdiSad_SdiSadThr_0                     0
    #define       bMadiReg_SdiSad_SdiSadThr_0                  6
    #define   MSK32MadiReg_SdiSad_SdiSadThr_0                     0x0000003F

    #define     BA_MadiReg_SdiSad_SdiSadThr_1                  0x0038
    #define     B16MadiReg_SdiSad_SdiSadThr_1                  0x0038
    #define   LSb32MadiReg_SdiSad_SdiSadThr_1                     6
    #define   LSb16MadiReg_SdiSad_SdiSadThr_1                     6
    #define       bMadiReg_SdiSad_SdiSadThr_1                  6
    #define   MSK32MadiReg_SdiSad_SdiSadThr_1                     0x00000FC0

    #define     BA_MadiReg_SdiSad_SdiSadThr_2                  0x0039
    #define     B16MadiReg_SdiSad_SdiSadThr_2                  0x0038
    #define   LSb32MadiReg_SdiSad_SdiSadThr_2                     12
    #define   LSb16MadiReg_SdiSad_SdiSadThr_2                     12
    #define       bMadiReg_SdiSad_SdiSadThr_2                  6
    #define   MSK32MadiReg_SdiSad_SdiSadThr_2                     0x0003F000

    #define     BA_MadiReg_SdiSad_SdiSadThr_3                  0x003A
    #define     B16MadiReg_SdiSad_SdiSadThr_3                  0x003A
    #define   LSb32MadiReg_SdiSad_SdiSadThr_3                     18
    #define   LSb16MadiReg_SdiSad_SdiSadThr_3                     2
    #define       bMadiReg_SdiSad_SdiSadThr_3                  8
    #define   MSK32MadiReg_SdiSad_SdiSadThr_3                     0x03FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_DiagByps                            0x003C

    #define     BA_MadiReg_DiagByps_YDiagByps                  0x003C
    #define     B16MadiReg_DiagByps_YDiagByps                  0x003C
    #define   LSb32MadiReg_DiagByps_YDiagByps                     0
    #define   LSb16MadiReg_DiagByps_YDiagByps                     0
    #define       bMadiReg_DiagByps_YDiagByps                  1
    #define   MSK32MadiReg_DiagByps_YDiagByps                     0x00000001

    #define     BA_MadiReg_DiagByps_UVDiagByps                 0x003C
    #define     B16MadiReg_DiagByps_UVDiagByps                 0x003C
    #define   LSb32MadiReg_DiagByps_UVDiagByps                    1
    #define   LSb16MadiReg_DiagByps_UVDiagByps                    1
    #define       bMadiReg_DiagByps_UVDiagByps                 1
    #define   MSK32MadiReg_DiagByps_UVDiagByps                    0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_SdiNoise                            0x0040

    #define     BA_MadiReg_SdiNoise_SdiNoiseThr                0x0040
    #define     B16MadiReg_SdiNoise_SdiNoiseThr                0x0040
    #define   LSb32MadiReg_SdiNoise_SdiNoiseThr                   0
    #define   LSb16MadiReg_SdiNoise_SdiNoiseThr                   0
    #define       bMadiReg_SdiNoise_SdiNoiseThr                6
    #define   MSK32MadiReg_SdiNoise_SdiNoiseThr                   0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Sdi0                                0x0044

    #define     BA_MadiReg_Sdi0_SdiAbsAngFilterThr             0x0044
    #define     B16MadiReg_Sdi0_SdiAbsAngFilterThr             0x0044
    #define   LSb32MadiReg_Sdi0_SdiAbsAngFilterThr                0
    #define   LSb16MadiReg_Sdi0_SdiAbsAngFilterThr                0
    #define       bMadiReg_Sdi0_SdiAbsAngFilterThr             3
    #define   MSK32MadiReg_Sdi0_SdiAbsAngFilterThr                0x00000007

    #define     BA_MadiReg_Sdi0_SdiIntClamp                    0x0044
    #define     B16MadiReg_Sdi0_SdiIntClamp                    0x0044
    #define   LSb32MadiReg_Sdi0_SdiIntClamp                       3
    #define   LSb16MadiReg_Sdi0_SdiIntClamp                       3
    #define       bMadiReg_Sdi0_SdiIntClamp                    4
    #define   MSK32MadiReg_Sdi0_SdiIntClamp                       0x00000078

    #define     BA_MadiReg_Sdi0_SdiAbsAngConfThr               0x0044
    #define     B16MadiReg_Sdi0_SdiAbsAngConfThr               0x0044
    #define   LSb32MadiReg_Sdi0_SdiAbsAngConfThr                  7
    #define   LSb16MadiReg_Sdi0_SdiAbsAngConfThr                  7
    #define       bMadiReg_Sdi0_SdiAbsAngConfThr               2
    #define   MSK32MadiReg_Sdi0_SdiAbsAngConfThr                  0x00000180

    #define     BA_MadiReg_Sdi0_SdiAbsAngThr                   0x0045
    #define     B16MadiReg_Sdi0_SdiAbsAngThr                   0x0044
    #define   LSb32MadiReg_Sdi0_SdiAbsAngThr                      9
    #define   LSb16MadiReg_Sdi0_SdiAbsAngThr                      9
    #define       bMadiReg_Sdi0_SdiAbsAngThr                   4
    #define   MSK32MadiReg_Sdi0_SdiAbsAngThr                      0x00001E00

    #define     BA_MadiReg_Sdi0_SdiAngStretchThr               0x0045
    #define     B16MadiReg_Sdi0_SdiAngStretchThr               0x0044
    #define   LSb32MadiReg_Sdi0_SdiAngStretchThr                  13
    #define   LSb16MadiReg_Sdi0_SdiAngStretchThr                  13
    #define       bMadiReg_Sdi0_SdiAngStretchThr               5
    #define   MSK32MadiReg_Sdi0_SdiAngStretchThr                  0x0003E000

    #define     BA_MadiReg_Sdi0_SdiHighAngConfValue_0          0x0046
    #define     B16MadiReg_Sdi0_SdiHighAngConfValue_0          0x0046
    #define   LSb32MadiReg_Sdi0_SdiHighAngConfValue_0             18
    #define   LSb16MadiReg_Sdi0_SdiHighAngConfValue_0             2
    #define       bMadiReg_Sdi0_SdiHighAngConfValue_0          3
    #define   MSK32MadiReg_Sdi0_SdiHighAngConfValue_0             0x001C0000

    #define     BA_MadiReg_Sdi0_SdiHighAngConfValue_1          0x0046
    #define     B16MadiReg_Sdi0_SdiHighAngConfValue_1          0x0046
    #define   LSb32MadiReg_Sdi0_SdiHighAngConfValue_1             21
    #define   LSb16MadiReg_Sdi0_SdiHighAngConfValue_1             5
    #define       bMadiReg_Sdi0_SdiHighAngConfValue_1          3
    #define   MSK32MadiReg_Sdi0_SdiHighAngConfValue_1             0x00E00000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Sdi1                                0x0048

    #define     BA_MadiReg_Sdi1_SdiAngConfBlendGain_0          0x0048
    #define     B16MadiReg_Sdi1_SdiAngConfBlendGain_0          0x0048
    #define   LSb32MadiReg_Sdi1_SdiAngConfBlendGain_0             0
    #define   LSb16MadiReg_Sdi1_SdiAngConfBlendGain_0             0
    #define       bMadiReg_Sdi1_SdiAngConfBlendGain_0          5
    #define   MSK32MadiReg_Sdi1_SdiAngConfBlendGain_0             0x0000001F

    #define     BA_MadiReg_Sdi1_SdiAngConfBlendGain_1          0x0048
    #define     B16MadiReg_Sdi1_SdiAngConfBlendGain_1          0x0048
    #define   LSb32MadiReg_Sdi1_SdiAngConfBlendGain_1             5
    #define   LSb16MadiReg_Sdi1_SdiAngConfBlendGain_1             5
    #define       bMadiReg_Sdi1_SdiAngConfBlendGain_1          5
    #define   MSK32MadiReg_Sdi1_SdiAngConfBlendGain_1             0x000003E0

    #define     BA_MadiReg_Sdi1_SdiAngConfBlendGain_2          0x0049
    #define     B16MadiReg_Sdi1_SdiAngConfBlendGain_2          0x0048
    #define   LSb32MadiReg_Sdi1_SdiAngConfBlendGain_2             10
    #define   LSb16MadiReg_Sdi1_SdiAngConfBlendGain_2             10
    #define       bMadiReg_Sdi1_SdiAngConfBlendGain_2          5
    #define   MSK32MadiReg_Sdi1_SdiAngConfBlendGain_2             0x00007C00

    #define     BA_MadiReg_Sdi1_SdiAngConfBlendGain_3          0x0049
    #define     B16MadiReg_Sdi1_SdiAngConfBlendGain_3          0x0048
    #define   LSb32MadiReg_Sdi1_SdiAngConfBlendGain_3             15
    #define   LSb16MadiReg_Sdi1_SdiAngConfBlendGain_3             15
    #define       bMadiReg_Sdi1_SdiAngConfBlendGain_3          5
    #define   MSK32MadiReg_Sdi1_SdiAngConfBlendGain_3             0x000F8000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Sdi2                                0x004C

    #define     BA_MadiReg_Sdi2_SdiAngConfBlendGain_4          0x004C
    #define     B16MadiReg_Sdi2_SdiAngConfBlendGain_4          0x004C
    #define   LSb32MadiReg_Sdi2_SdiAngConfBlendGain_4             0
    #define   LSb16MadiReg_Sdi2_SdiAngConfBlendGain_4             0
    #define       bMadiReg_Sdi2_SdiAngConfBlendGain_4          5
    #define   MSK32MadiReg_Sdi2_SdiAngConfBlendGain_4             0x0000001F

    #define     BA_MadiReg_Sdi2_SdiAngConfBlendGain_5          0x004C
    #define     B16MadiReg_Sdi2_SdiAngConfBlendGain_5          0x004C
    #define   LSb32MadiReg_Sdi2_SdiAngConfBlendGain_5             5
    #define   LSb16MadiReg_Sdi2_SdiAngConfBlendGain_5             5
    #define       bMadiReg_Sdi2_SdiAngConfBlendGain_5          5
    #define   MSK32MadiReg_Sdi2_SdiAngConfBlendGain_5             0x000003E0

    #define     BA_MadiReg_Sdi2_SdiAngConfBlendGain_6          0x004D
    #define     B16MadiReg_Sdi2_SdiAngConfBlendGain_6          0x004C
    #define   LSb32MadiReg_Sdi2_SdiAngConfBlendGain_6             10
    #define   LSb16MadiReg_Sdi2_SdiAngConfBlendGain_6             10
    #define       bMadiReg_Sdi2_SdiAngConfBlendGain_6          5
    #define   MSK32MadiReg_Sdi2_SdiAngConfBlendGain_6             0x00007C00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_ShiftBit                            0x0050

    #define     BA_MadiReg_ShiftBit_BlamdShiftBit              0x0050
    #define     B16MadiReg_ShiftBit_BlamdShiftBit              0x0050
    #define   LSb32MadiReg_ShiftBit_BlamdShiftBit                 0
    #define   LSb16MadiReg_ShiftBit_BlamdShiftBit                 0
    #define       bMadiReg_ShiftBit_BlamdShiftBit              3
    #define   MSK32MadiReg_ShiftBit_BlamdShiftBit                 0x00000007

    #define     BA_MadiReg_ShiftBit_BlasdShiftBit              0x0050
    #define     B16MadiReg_ShiftBit_BlasdShiftBit              0x0050
    #define   LSb32MadiReg_ShiftBit_BlasdShiftBit                 3
    #define   LSb16MadiReg_ShiftBit_BlasdShiftBit                 3
    #define       bMadiReg_ShiftBit_BlasdShiftBit              3
    #define   MSK32MadiReg_ShiftBit_BlasdShiftBit                 0x00000038

    #define     BA_MadiReg_ShiftBit_BsosdShiftBit              0x0050
    #define     B16MadiReg_ShiftBit_BsosdShiftBit              0x0050
    #define   LSb32MadiReg_ShiftBit_BsosdShiftBit                 6
    #define   LSb16MadiReg_ShiftBit_BsosdShiftBit                 6
    #define       bMadiReg_ShiftBit_BsosdShiftBit              3
    #define   MSK32MadiReg_ShiftBit_BsosdShiftBit                 0x000001C0

    #define     BA_MadiReg_ShiftBit_BlmhfShiftBit              0x0051
    #define     B16MadiReg_ShiftBit_BlmhfShiftBit              0x0050
    #define   LSb32MadiReg_ShiftBit_BlmhfShiftBit                 9
    #define   LSb16MadiReg_ShiftBit_BlmhfShiftBit                 9
    #define       bMadiReg_ShiftBit_BlmhfShiftBit              3
    #define   MSK32MadiReg_ShiftBit_BlmhfShiftBit                 0x00000E00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Sdi3                                0x0054

    #define     BA_MadiReg_Sdi3_SdiScaleFactor_0               0x0054
    #define     B16MadiReg_Sdi3_SdiScaleFactor_0               0x0054
    #define   LSb32MadiReg_Sdi3_SdiScaleFactor_0                  0
    #define   LSb16MadiReg_Sdi3_SdiScaleFactor_0                  0
    #define       bMadiReg_Sdi3_SdiScaleFactor_0               4
    #define   MSK32MadiReg_Sdi3_SdiScaleFactor_0                  0x0000000F

    #define     BA_MadiReg_Sdi3_SdiScaleFactor_1               0x0054
    #define     B16MadiReg_Sdi3_SdiScaleFactor_1               0x0054
    #define   LSb32MadiReg_Sdi3_SdiScaleFactor_1                  4
    #define   LSb16MadiReg_Sdi3_SdiScaleFactor_1                  4
    #define       bMadiReg_Sdi3_SdiScaleFactor_1               4
    #define   MSK32MadiReg_Sdi3_SdiScaleFactor_1                  0x000000F0

    #define     BA_MadiReg_Sdi3_SdiScaleFactor_2               0x0055
    #define     B16MadiReg_Sdi3_SdiScaleFactor_2               0x0054
    #define   LSb32MadiReg_Sdi3_SdiScaleFactor_2                  8
    #define   LSb16MadiReg_Sdi3_SdiScaleFactor_2                  8
    #define       bMadiReg_Sdi3_SdiScaleFactor_2               4
    #define   MSK32MadiReg_Sdi3_SdiScaleFactor_2                  0x00000F00

    #define     BA_MadiReg_Sdi3_SdiScaleFactor_3               0x0055
    #define     B16MadiReg_Sdi3_SdiScaleFactor_3               0x0054
    #define   LSb32MadiReg_Sdi3_SdiScaleFactor_3                  12
    #define   LSb16MadiReg_Sdi3_SdiScaleFactor_3                  12
    #define       bMadiReg_Sdi3_SdiScaleFactor_3               4
    #define   MSK32MadiReg_Sdi3_SdiScaleFactor_3                  0x0000F000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Sdi4                                0x0058

    #define     BA_MadiReg_Sdi4_SdiIntDifThr_0                 0x0058
    #define     B16MadiReg_Sdi4_SdiIntDifThr_0                 0x0058
    #define   LSb32MadiReg_Sdi4_SdiIntDifThr_0                    0
    #define   LSb16MadiReg_Sdi4_SdiIntDifThr_0                    0
    #define       bMadiReg_Sdi4_SdiIntDifThr_0                 10
    #define   MSK32MadiReg_Sdi4_SdiIntDifThr_0                    0x000003FF

    #define     BA_MadiReg_Sdi4_SdiIntDifThr_1                 0x0059
    #define     B16MadiReg_Sdi4_SdiIntDifThr_1                 0x0058
    #define   LSb32MadiReg_Sdi4_SdiIntDifThr_1                    10
    #define   LSb16MadiReg_Sdi4_SdiIntDifThr_1                    10
    #define       bMadiReg_Sdi4_SdiIntDifThr_1                 10
    #define   MSK32MadiReg_Sdi4_SdiIntDifThr_1                    0x000FFC00

    #define     BA_MadiReg_Sdi4_SdiIntDifThr_2                 0x005A
    #define     B16MadiReg_Sdi4_SdiIntDifThr_2                 0x005A
    #define   LSb32MadiReg_Sdi4_SdiIntDifThr_2                    20
    #define   LSb16MadiReg_Sdi4_SdiIntDifThr_2                    4
    #define       bMadiReg_Sdi4_SdiIntDifThr_2                 10
    #define   MSK32MadiReg_Sdi4_SdiIntDifThr_2                    0x3FF00000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Sdi5                                0x005C

    #define     BA_MadiReg_Sdi5_SdiIntDifThr_3                 0x005C
    #define     B16MadiReg_Sdi5_SdiIntDifThr_3                 0x005C
    #define   LSb32MadiReg_Sdi5_SdiIntDifThr_3                    0
    #define   LSb16MadiReg_Sdi5_SdiIntDifThr_3                    0
    #define       bMadiReg_Sdi5_SdiIntDifThr_3                 10
    #define   MSK32MadiReg_Sdi5_SdiIntDifThr_3                    0x000003FF

    #define     BA_MadiReg_Sdi5_SdiIntDifThr_4                 0x005D
    #define     B16MadiReg_Sdi5_SdiIntDifThr_4                 0x005C
    #define   LSb32MadiReg_Sdi5_SdiIntDifThr_4                    10
    #define   LSb16MadiReg_Sdi5_SdiIntDifThr_4                    10
    #define       bMadiReg_Sdi5_SdiIntDifThr_4                 10
    #define   MSK32MadiReg_Sdi5_SdiIntDifThr_4                    0x000FFC00

    #define     BA_MadiReg_Sdi5_SdiIntDifThr_5                 0x005E
    #define     B16MadiReg_Sdi5_SdiIntDifThr_5                 0x005E
    #define   LSb32MadiReg_Sdi5_SdiIntDifThr_5                    20
    #define   LSb16MadiReg_Sdi5_SdiIntDifThr_5                    4
    #define       bMadiReg_Sdi5_SdiIntDifThr_5                 10
    #define   MSK32MadiReg_Sdi5_SdiIntDifThr_5                    0x3FF00000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Sdi6                                0x0060

    #define     BA_MadiReg_Sdi6_SdiMdvThr_0                    0x0060
    #define     B16MadiReg_Sdi6_SdiMdvThr_0                    0x0060
    #define   LSb32MadiReg_Sdi6_SdiMdvThr_0                       0
    #define   LSb16MadiReg_Sdi6_SdiMdvThr_0                       0
    #define       bMadiReg_Sdi6_SdiMdvThr_0                    6
    #define   MSK32MadiReg_Sdi6_SdiMdvThr_0                       0x0000003F

    #define     BA_MadiReg_Sdi6_SdiMdvThr_1                    0x0060
    #define     B16MadiReg_Sdi6_SdiMdvThr_1                    0x0060
    #define   LSb32MadiReg_Sdi6_SdiMdvThr_1                       6
    #define   LSb16MadiReg_Sdi6_SdiMdvThr_1                       6
    #define       bMadiReg_Sdi6_SdiMdvThr_1                    6
    #define   MSK32MadiReg_Sdi6_SdiMdvThr_1                       0x00000FC0

    #define     BA_MadiReg_Sdi6_SdiLowSadThr                   0x0061
    #define     B16MadiReg_Sdi6_SdiLowSadThr                   0x0060
    #define   LSb32MadiReg_Sdi6_SdiLowSadThr                      12
    #define   LSb16MadiReg_Sdi6_SdiLowSadThr                      12
    #define       bMadiReg_Sdi6_SdiLowSadThr                   6
    #define   MSK32MadiReg_Sdi6_SdiLowSadThr                      0x0003F000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Angle                               0x0064

    #define     BA_MadiReg_Angle_AngConfEn                     0x0064
    #define     B16MadiReg_Angle_AngConfEn                     0x0064
    #define   LSb32MadiReg_Angle_AngConfEn                        0
    #define   LSb16MadiReg_Angle_AngConfEn                        0
    #define       bMadiReg_Angle_AngConfEn                     1
    #define   MSK32MadiReg_Angle_AngConfEn                        0x00000001

    #define     BA_MadiReg_Angle_AngConfUser                   0x0064
    #define     B16MadiReg_Angle_AngConfUser                   0x0064
    #define   LSb32MadiReg_Angle_AngConfUser                      1
    #define   LSb16MadiReg_Angle_AngConfUser                      1
    #define       bMadiReg_Angle_AngConfUser                   3
    #define   MSK32MadiReg_Angle_AngConfUser                      0x0000000E

    #define     BA_MadiReg_Angle_AngCnstEn                     0x0064
    #define     B16MadiReg_Angle_AngCnstEn                     0x0064
    #define   LSb32MadiReg_Angle_AngCnstEn                        4
    #define   LSb16MadiReg_Angle_AngCnstEn                        4
    #define       bMadiReg_Angle_AngCnstEn                     1
    #define   MSK32MadiReg_Angle_AngCnstEn                        0x00000010

    #define     BA_MadiReg_Angle_AngCnstUser                   0x0064
    #define     B16MadiReg_Angle_AngCnstUser                   0x0064
    #define   LSb32MadiReg_Angle_AngCnstUser                      5
    #define   LSb16MadiReg_Angle_AngCnstUser                      5
    #define       bMadiReg_Angle_AngCnstUser                   2
    #define   MSK32MadiReg_Angle_AngCnstUser                      0x00000060

    #define     BA_MadiReg_Angle_AngEdgeEn                     0x0064
    #define     B16MadiReg_Angle_AngEdgeEn                     0x0064
    #define   LSb32MadiReg_Angle_AngEdgeEn                        7
    #define   LSb16MadiReg_Angle_AngEdgeEn                        7
    #define       bMadiReg_Angle_AngEdgeEn                     1
    #define   MSK32MadiReg_Angle_AngEdgeEn                        0x00000080

    #define     BA_MadiReg_Angle_AngEdgeUser                   0x0065
    #define     B16MadiReg_Angle_AngEdgeUser                   0x0064
    #define   LSb32MadiReg_Angle_AngEdgeUser                      8
    #define   LSb16MadiReg_Angle_AngEdgeUser                      8
    #define       bMadiReg_Angle_AngEdgeUser                   3
    #define   MSK32MadiReg_Angle_AngEdgeUser                      0x00000700

    #define     BA_MadiReg_Angle_AngleEn                       0x0065
    #define     B16MadiReg_Angle_AngleEn                       0x0064
    #define   LSb32MadiReg_Angle_AngleEn                          11
    #define   LSb16MadiReg_Angle_AngleEn                          11
    #define       bMadiReg_Angle_AngleEn                       1
    #define   MSK32MadiReg_Angle_AngleEn                          0x00000800

    #define     BA_MadiReg_Angle_AngleUser                     0x0065
    #define     B16MadiReg_Angle_AngleUser                     0x0064
    #define   LSb32MadiReg_Angle_AngleUser                        12
    #define   LSb16MadiReg_Angle_AngleUser                        12
    #define       bMadiReg_Angle_AngleUser                     4
    #define   MSK32MadiReg_Angle_AngleUser                        0x0000F000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MotDet                              0x0068

    #define     BA_MadiReg_MotDet_LAMDEn                       0x0068
    #define     B16MadiReg_MotDet_LAMDEn                       0x0068
    #define   LSb32MadiReg_MotDet_LAMDEn                          0
    #define   LSb16MadiReg_MotDet_LAMDEn                          0
    #define       bMadiReg_MotDet_LAMDEn                       1
    #define   MSK32MadiReg_MotDet_LAMDEn                          0x00000001

    #define     BA_MadiReg_MotDet_LAMDUser                     0x0068
    #define     B16MadiReg_MotDet_LAMDUser                     0x0068
    #define   LSb32MadiReg_MotDet_LAMDUser                        1
    #define   LSb16MadiReg_MotDet_LAMDUser                        1
    #define       bMadiReg_MotDet_LAMDUser                     2
    #define   MSK32MadiReg_MotDet_LAMDUser                        0x00000006

    #define     BA_MadiReg_MotDet_LASDEn                       0x0068
    #define     B16MadiReg_MotDet_LASDEn                       0x0068
    #define   LSb32MadiReg_MotDet_LASDEn                          3
    #define   LSb16MadiReg_MotDet_LASDEn                          3
    #define       bMadiReg_MotDet_LASDEn                       1
    #define   MSK32MadiReg_MotDet_LASDEn                          0x00000008

    #define     BA_MadiReg_MotDet_LASDUser                     0x0068
    #define     B16MadiReg_MotDet_LASDUser                     0x0068
    #define   LSb32MadiReg_MotDet_LASDUser                        4
    #define   LSb16MadiReg_MotDet_LASDUser                        4
    #define       bMadiReg_MotDet_LASDUser                     1
    #define   MSK32MadiReg_MotDet_LASDUser                        0x00000010

    #define     BA_MadiReg_MotDet_LASDSel                      0x0068
    #define     B16MadiReg_MotDet_LASDSel                      0x0068
    #define   LSb32MadiReg_MotDet_LASDSel                         5
    #define   LSb16MadiReg_MotDet_LASDSel                         5
    #define       bMadiReg_MotDet_LASDSel                      1
    #define   MSK32MadiReg_MotDet_LASDSel                         0x00000020

    #define     BA_MadiReg_MotDet_SOSDEn                       0x0068
    #define     B16MadiReg_MotDet_SOSDEn                       0x0068
    #define   LSb32MadiReg_MotDet_SOSDEn                          6
    #define   LSb16MadiReg_MotDet_SOSDEn                          6
    #define       bMadiReg_MotDet_SOSDEn                       1
    #define   MSK32MadiReg_MotDet_SOSDEn                          0x00000040

    #define     BA_MadiReg_MotDet_SOSDUser                     0x0068
    #define     B16MadiReg_MotDet_SOSDUser                     0x0068
    #define   LSb32MadiReg_MotDet_SOSDUser                        7
    #define   LSb16MadiReg_MotDet_SOSDUser                        7
    #define       bMadiReg_MotDet_SOSDUser                     1
    #define   MSK32MadiReg_MotDet_SOSDUser                        0x00000080

    #define     BA_MadiReg_MotDet_SOSDSel                      0x0069
    #define     B16MadiReg_MotDet_SOSDSel                      0x0068
    #define   LSb32MadiReg_MotDet_SOSDSel                         8
    #define   LSb16MadiReg_MotDet_SOSDSel                         8
    #define       bMadiReg_MotDet_SOSDSel                      1
    #define   MSK32MadiReg_MotDet_SOSDSel                         0x00000100

    #define     BA_MadiReg_MotDet_MDVEn                        0x0069
    #define     B16MadiReg_MotDet_MDVEn                        0x0068
    #define   LSb32MadiReg_MotDet_MDVEn                           9
    #define   LSb16MadiReg_MotDet_MDVEn                           9
    #define       bMadiReg_MotDet_MDVEn                        1
    #define   MSK32MadiReg_MotDet_MDVEn                           0x00000200

    #define     BA_MadiReg_MotDet_MDVUser_0                    0x0069
    #define     B16MadiReg_MotDet_MDVUser_0                    0x0068
    #define   LSb32MadiReg_MotDet_MDVUser_0                       10
    #define   LSb16MadiReg_MotDet_MDVUser_0                       10
    #define       bMadiReg_MotDet_MDVUser_0                    3
    #define   MSK32MadiReg_MotDet_MDVUser_0                       0x00001C00

    #define     BA_MadiReg_MotDet_MDVUser_1                    0x0069
    #define     B16MadiReg_MotDet_MDVUser_1                    0x0068
    #define   LSb32MadiReg_MotDet_MDVUser_1                       13
    #define   LSb16MadiReg_MotDet_MDVUser_1                       13
    #define       bMadiReg_MotDet_MDVUser_1                    3
    #define   MSK32MadiReg_MotDet_MDVUser_1                       0x0000E000

    #define     BA_MadiReg_MotDet_HVLineEn                     0x006A
    #define     B16MadiReg_MotDet_HVLineEn                     0x006A
    #define   LSb32MadiReg_MotDet_HVLineEn                        16
    #define   LSb16MadiReg_MotDet_HVLineEn                        0
    #define       bMadiReg_MotDet_HVLineEn                     1
    #define   MSK32MadiReg_MotDet_HVLineEn                        0x00010000

    #define     BA_MadiReg_MotDet_HVLineUser                   0x006A
    #define     B16MadiReg_MotDet_HVLineUser                   0x006A
    #define   LSb32MadiReg_MotDet_HVLineUser                      17
    #define   LSb16MadiReg_MotDet_HVLineUser                      1
    #define       bMadiReg_MotDet_HVLineUser                   2
    #define   MSK32MadiReg_MotDet_HVLineUser                      0x00060000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_HVLine                              0x006C

    #define     BA_MadiReg_HVLine_HVLineGain_0                 0x006C
    #define     B16MadiReg_HVLine_HVLineGain_0                 0x006C
    #define   LSb32MadiReg_HVLine_HVLineGain_0                    0
    #define   LSb16MadiReg_HVLine_HVLineGain_0                    0
    #define       bMadiReg_HVLine_HVLineGain_0                 8
    #define   MSK32MadiReg_HVLine_HVLineGain_0                    0x000000FF

    #define     BA_MadiReg_HVLine_HVLineGain_1                 0x006D
    #define     B16MadiReg_HVLine_HVLineGain_1                 0x006C
    #define   LSb32MadiReg_HVLine_HVLineGain_1                    8
    #define   LSb16MadiReg_HVLine_HVLineGain_1                    8
    #define       bMadiReg_HVLine_HVLineGain_1                 8
    #define   MSK32MadiReg_HVLine_HVLineGain_1                    0x0000FF00

    #define     BA_MadiReg_HVLine_HVLineThr_0                  0x006E
    #define     B16MadiReg_HVLine_HVLineThr_0                  0x006E
    #define   LSb32MadiReg_HVLine_HVLineThr_0                     16
    #define   LSb16MadiReg_HVLine_HVLineThr_0                     0
    #define       bMadiReg_HVLine_HVLineThr_0                  8
    #define   MSK32MadiReg_HVLine_HVLineThr_0                     0x00FF0000

    #define     BA_MadiReg_HVLine_HVLineThr_1                  0x006F
    #define     B16MadiReg_HVLine_HVLineThr_1                  0x006E
    #define   LSb32MadiReg_HVLine_HVLineThr_1                     24
    #define   LSb16MadiReg_HVLine_HVLineThr_1                     8
    #define       bMadiReg_HVLine_HVLineThr_1                  8
    #define   MSK32MadiReg_HVLine_HVLineThr_1                     0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvYiir                             0x0070

    #define     BA_MadiReg_MdvYiir_MdvYiirGain_0               0x0070
    #define     B16MadiReg_MdvYiir_MdvYiirGain_0               0x0070
    #define   LSb32MadiReg_MdvYiir_MdvYiirGain_0                  0
    #define   LSb16MadiReg_MdvYiir_MdvYiirGain_0                  0
    #define       bMadiReg_MdvYiir_MdvYiirGain_0               5
    #define   MSK32MadiReg_MdvYiir_MdvYiirGain_0                  0x0000001F

    #define     BA_MadiReg_MdvYiir_MdvYiirGain_1               0x0070
    #define     B16MadiReg_MdvYiir_MdvYiirGain_1               0x0070
    #define   LSb32MadiReg_MdvYiir_MdvYiirGain_1                  5
    #define   LSb16MadiReg_MdvYiir_MdvYiirGain_1                  5
    #define       bMadiReg_MdvYiir_MdvYiirGain_1               5
    #define   MSK32MadiReg_MdvYiir_MdvYiirGain_1                  0x000003E0

    #define     BA_MadiReg_MdvYiir_MdvYiirClamp                0x0071
    #define     B16MadiReg_MdvYiir_MdvYiirClamp                0x0070
    #define   LSb32MadiReg_MdvYiir_MdvYiirClamp                   10
    #define   LSb16MadiReg_MdvYiir_MdvYiirClamp                   10
    #define       bMadiReg_MdvYiir_MdvYiirClamp                8
    #define   MSK32MadiReg_MdvYiir_MdvYiirClamp                   0x0003FC00

    #define     BA_MadiReg_MdvYiir_MdvYiirEn                   0x0072
    #define     B16MadiReg_MdvYiir_MdvYiirEn                   0x0072
    #define   LSb32MadiReg_MdvYiir_MdvYiirEn                      18
    #define   LSb16MadiReg_MdvYiir_MdvYiirEn                      2
    #define       bMadiReg_MdvYiir_MdvYiirEn                   1
    #define   MSK32MadiReg_MdvYiir_MdvYiirEn                      0x00040000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_C420A                               0x0074

    #define     BA_MadiReg_C420A_EThr                          0x0074
    #define     B16MadiReg_C420A_EThr                          0x0074
    #define   LSb32MadiReg_C420A_EThr                             0
    #define   LSb16MadiReg_C420A_EThr                             0
    #define       bMadiReg_C420A_EThr                          8
    #define   MSK32MadiReg_C420A_EThr                             0x000000FF

    #define     BA_MadiReg_C420A_C420StNum                     0x0075
    #define     B16MadiReg_C420A_C420StNum                     0x0074
    #define   LSb32MadiReg_C420A_C420StNum                        8
    #define   LSb16MadiReg_C420A_C420StNum                        8
    #define       bMadiReg_C420A_C420StNum                     4
    #define   MSK32MadiReg_C420A_C420StNum                        0x00000F00

    #define     BA_MadiReg_C420A_C420AccShiftBits              0x0075
    #define     B16MadiReg_C420A_C420AccShiftBits              0x0074
    #define   LSb32MadiReg_C420A_C420AccShiftBits                 12
    #define   LSb16MadiReg_C420A_C420AccShiftBits                 12
    #define       bMadiReg_C420A_C420AccShiftBits              4
    #define   MSK32MadiReg_C420A_C420AccShiftBits                 0x0000F000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_C420B                               0x0078

    #define     BA_MadiReg_C420B_MThr_0                        0x0078
    #define     B16MadiReg_C420B_MThr_0                        0x0078
    #define   LSb32MadiReg_C420B_MThr_0                           0
    #define   LSb16MadiReg_C420B_MThr_0                           0
    #define       bMadiReg_C420B_MThr_0                        5
    #define   MSK32MadiReg_C420B_MThr_0                           0x0000001F

    #define     BA_MadiReg_C420B_MThr_1                        0x0078
    #define     B16MadiReg_C420B_MThr_1                        0x0078
    #define   LSb32MadiReg_C420B_MThr_1                           5
    #define   LSb16MadiReg_C420B_MThr_1                           5
    #define       bMadiReg_C420B_MThr_1                        5
    #define   MSK32MadiReg_C420B_MThr_1                           0x000003E0

    #define     BA_MadiReg_C420B_MThr_2                        0x0079
    #define     B16MadiReg_C420B_MThr_2                        0x0078
    #define   LSb32MadiReg_C420B_MThr_2                           10
    #define   LSb16MadiReg_C420B_MThr_2                           10
    #define       bMadiReg_C420B_MThr_2                        5
    #define   MSK32MadiReg_C420B_MThr_2                           0x00007C00

    #define     BA_MadiReg_C420B_MdvThr                        0x0079
    #define     B16MadiReg_C420B_MdvThr                        0x0078
    #define   LSb32MadiReg_C420B_MdvThr                           15
    #define   LSb16MadiReg_C420B_MdvThr                           15
    #define       bMadiReg_C420B_MdvThr                        5
    #define   MSK32MadiReg_C420B_MdvThr                           0x000F8000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvFilterSel                        0x007C

    #define     BA_MadiReg_MdvFilterSel_MdvFilterSel_0         0x007C
    #define     B16MadiReg_MdvFilterSel_MdvFilterSel_0         0x007C
    #define   LSb32MadiReg_MdvFilterSel_MdvFilterSel_0            0
    #define   LSb16MadiReg_MdvFilterSel_MdvFilterSel_0            0
    #define       bMadiReg_MdvFilterSel_MdvFilterSel_0         1
    #define   MSK32MadiReg_MdvFilterSel_MdvFilterSel_0            0x00000001

    #define     BA_MadiReg_MdvFilterSel_MdvFilterSel_1         0x007C
    #define     B16MadiReg_MdvFilterSel_MdvFilterSel_1         0x007C
    #define   LSb32MadiReg_MdvFilterSel_MdvFilterSel_1            1
    #define   LSb16MadiReg_MdvFilterSel_MdvFilterSel_1            1
    #define       bMadiReg_MdvFilterSel_MdvFilterSel_1         1
    #define   MSK32MadiReg_MdvFilterSel_MdvFilterSel_1            0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_LcnstGain                           0x0080

    #define     BA_MadiReg_LcnstGain_LcnstGain_0               0x0080
    #define     B16MadiReg_LcnstGain_LcnstGain_0               0x0080
    #define   LSb32MadiReg_LcnstGain_LcnstGain_0                  0
    #define   LSb16MadiReg_LcnstGain_LcnstGain_0                  0
    #define       bMadiReg_LcnstGain_LcnstGain_0               8
    #define   MSK32MadiReg_LcnstGain_LcnstGain_0                  0x000000FF

    #define     BA_MadiReg_LcnstGain_LcnstGain_1               0x0081
    #define     B16MadiReg_LcnstGain_LcnstGain_1               0x0080
    #define   LSb32MadiReg_LcnstGain_LcnstGain_1                  8
    #define   LSb16MadiReg_LcnstGain_LcnstGain_1                  8
    #define       bMadiReg_LcnstGain_LcnstGain_1               8
    #define   MSK32MadiReg_LcnstGain_LcnstGain_1                  0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_YUVBlendGain                        0x0084

    #define     BA_MadiReg_YUVBlendGain_YUVBlendGain_0         0x0084
    #define     B16MadiReg_YUVBlendGain_YUVBlendGain_0         0x0084
    #define   LSb32MadiReg_YUVBlendGain_YUVBlendGain_0            0
    #define   LSb16MadiReg_YUVBlendGain_YUVBlendGain_0            0
    #define       bMadiReg_YUVBlendGain_YUVBlendGain_0         8
    #define   MSK32MadiReg_YUVBlendGain_YUVBlendGain_0            0x000000FF

    #define     BA_MadiReg_YUVBlendGain_YUVBlendGain_1         0x0085
    #define     B16MadiReg_YUVBlendGain_YUVBlendGain_1         0x0084
    #define   LSb32MadiReg_YUVBlendGain_YUVBlendGain_1            8
    #define   LSb16MadiReg_YUVBlendGain_YUVBlendGain_1            8
    #define       bMadiReg_YUVBlendGain_YUVBlendGain_1         8
    #define   MSK32MadiReg_YUVBlendGain_YUVBlendGain_1            0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_YUVMdvBlendGain                     0x0088

    #define     BA_MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0   0x0088
    #define     B16MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0   0x0088
    #define   LSb32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0      0
    #define   LSb16MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0      0
    #define       bMadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0   9
    #define   MSK32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0      0x000001FF

    #define     BA_MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1   0x0089
    #define     B16MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1   0x0088
    #define   LSb32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1      9
    #define   LSb16MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1      9
    #define       bMadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1   9
    #define   MSK32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1      0x0003FE00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_YMdvGain                            0x008C

    #define     BA_MadiReg_YMdvGain_YMdvGain_0                 0x008C
    #define     B16MadiReg_YMdvGain_YMdvGain_0                 0x008C
    #define   LSb32MadiReg_YMdvGain_YMdvGain_0                    0
    #define   LSb16MadiReg_YMdvGain_YMdvGain_0                    0
    #define       bMadiReg_YMdvGain_YMdvGain_0                 8
    #define   MSK32MadiReg_YMdvGain_YMdvGain_0                    0x000000FF

    #define     BA_MadiReg_YMdvGain_YMdvGain_1                 0x008D
    #define     B16MadiReg_YMdvGain_YMdvGain_1                 0x008C
    #define   LSb32MadiReg_YMdvGain_YMdvGain_1                    8
    #define   LSb16MadiReg_YMdvGain_YMdvGain_1                    8
    #define       bMadiReg_YMdvGain_YMdvGain_1                 8
    #define   MSK32MadiReg_YMdvGain_YMdvGain_1                    0x0000FF00

    #define     BA_MadiReg_YMdvGain_YMdvGain_2                 0x008E
    #define     B16MadiReg_YMdvGain_YMdvGain_2                 0x008E
    #define   LSb32MadiReg_YMdvGain_YMdvGain_2                    16
    #define   LSb16MadiReg_YMdvGain_YMdvGain_2                    0
    #define       bMadiReg_YMdvGain_YMdvGain_2                 8
    #define   MSK32MadiReg_YMdvGain_YMdvGain_2                    0x00FF0000

    #define     BA_MadiReg_YMdvGain_YMdvGain_3                 0x008F
    #define     B16MadiReg_YMdvGain_YMdvGain_3                 0x008E
    #define   LSb32MadiReg_YMdvGain_YMdvGain_3                    24
    #define   LSb16MadiReg_YMdvGain_YMdvGain_3                    8
    #define       bMadiReg_YMdvGain_YMdvGain_3                 8
    #define   MSK32MadiReg_YMdvGain_YMdvGain_3                    0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_YMdvGain1                           0x0090

    #define     BA_MadiReg_YMdvGain1_YMdvGain_4                0x0090
    #define     B16MadiReg_YMdvGain1_YMdvGain_4                0x0090
    #define   LSb32MadiReg_YMdvGain1_YMdvGain_4                   0
    #define   LSb16MadiReg_YMdvGain1_YMdvGain_4                   0
    #define       bMadiReg_YMdvGain1_YMdvGain_4                8
    #define   MSK32MadiReg_YMdvGain1_YMdvGain_4                   0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_YMdvOffset                          0x0094

    #define     BA_MadiReg_YMdvOffset_YMdvOffset_0             0x0094
    #define     B16MadiReg_YMdvOffset_YMdvOffset_0             0x0094
    #define   LSb32MadiReg_YMdvOffset_YMdvOffset_0                0
    #define   LSb16MadiReg_YMdvOffset_YMdvOffset_0                0
    #define       bMadiReg_YMdvOffset_YMdvOffset_0             6
    #define   MSK32MadiReg_YMdvOffset_YMdvOffset_0                0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_UVMdvGain                           0x0098

    #define     BA_MadiReg_UVMdvGain_UVMdvGain                 0x0098
    #define     B16MadiReg_UVMdvGain_UVMdvGain                 0x0098
    #define   LSb32MadiReg_UVMdvGain_UVMdvGain                    0
    #define   LSb16MadiReg_UVMdvGain_UVMdvGain                    0
    #define       bMadiReg_UVMdvGain_UVMdvGain                 8
    #define   MSK32MadiReg_UVMdvGain_UVMdvGain                    0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Impulse                             0x009C

    #define     BA_MadiReg_Impulse_ImpulseEn                   0x009C
    #define     B16MadiReg_Impulse_ImpulseEn                   0x009C
    #define   LSb32MadiReg_Impulse_ImpulseEn                      0
    #define   LSb16MadiReg_Impulse_ImpulseEn                      0
    #define       bMadiReg_Impulse_ImpulseEn                   1
    #define   MSK32MadiReg_Impulse_ImpulseEn                      0x00000001

    #define     BA_MadiReg_Impulse_ImpulseThr                  0x009C
    #define     B16MadiReg_Impulse_ImpulseThr                  0x009C
    #define   LSb32MadiReg_Impulse_ImpulseThr                     1
    #define   LSb16MadiReg_Impulse_ImpulseThr                     1
    #define       bMadiReg_Impulse_ImpulseThr                  8
    #define   MSK32MadiReg_Impulse_ImpulseThr                     0x000001FE
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_Nr                                  0x00A0

    #define     BA_MadiReg_Nr_YNr                              0x00A0
    #define     B16MadiReg_Nr_YNr                              0x00A0
    #define   LSb32MadiReg_Nr_YNr                                 0
    #define   LSb16MadiReg_Nr_YNr                                 0
    #define       bMadiReg_Nr_YNr                              1
    #define   MSK32MadiReg_Nr_YNr                                 0x00000001

    #define     BA_MadiReg_Nr_UVNr                             0x00A0
    #define     B16MadiReg_Nr_UVNr                             0x00A0
    #define   LSb32MadiReg_Nr_UVNr                                1
    #define   LSb16MadiReg_Nr_UVNr                                1
    #define       bMadiReg_Nr_UVNr                             1
    #define   MSK32MadiReg_Nr_UVNr                                0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvLcnst0                           0x00A4

    #define     BA_MadiReg_MdvLcnst0_MdvLcnstGain_0            0x00A4
    #define     B16MadiReg_MdvLcnst0_MdvLcnstGain_0            0x00A4
    #define   LSb32MadiReg_MdvLcnst0_MdvLcnstGain_0               0
    #define   LSb16MadiReg_MdvLcnst0_MdvLcnstGain_0               0
    #define       bMadiReg_MdvLcnst0_MdvLcnstGain_0            9
    #define   MSK32MadiReg_MdvLcnst0_MdvLcnstGain_0               0x000001FF

    #define     BA_MadiReg_MdvLcnst0_MdvLcnstGain_1            0x00A5
    #define     B16MadiReg_MdvLcnst0_MdvLcnstGain_1            0x00A4
    #define   LSb32MadiReg_MdvLcnst0_MdvLcnstGain_1               9
    #define   LSb16MadiReg_MdvLcnst0_MdvLcnstGain_1               9
    #define       bMadiReg_MdvLcnst0_MdvLcnstGain_1            9
    #define   MSK32MadiReg_MdvLcnst0_MdvLcnstGain_1               0x0003FE00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvLcnst1                           0x00A8

    #define     BA_MadiReg_MdvLcnst1_MdvLcnstGain_2            0x00A8
    #define     B16MadiReg_MdvLcnst1_MdvLcnstGain_2            0x00A8
    #define   LSb32MadiReg_MdvLcnst1_MdvLcnstGain_2               0
    #define   LSb16MadiReg_MdvLcnst1_MdvLcnstGain_2               0
    #define       bMadiReg_MdvLcnst1_MdvLcnstGain_2            9
    #define   MSK32MadiReg_MdvLcnst1_MdvLcnstGain_2               0x000001FF

    #define     BA_MadiReg_MdvLcnst1_MdvLcnstGain_3            0x00A9
    #define     B16MadiReg_MdvLcnst1_MdvLcnstGain_3            0x00A8
    #define   LSb32MadiReg_MdvLcnst1_MdvLcnstGain_3               9
    #define   LSb16MadiReg_MdvLcnst1_MdvLcnstGain_3               9
    #define       bMadiReg_MdvLcnst1_MdvLcnstGain_3            9
    #define   MSK32MadiReg_MdvLcnst1_MdvLcnstGain_3               0x0003FE00
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvLcnst2                           0x00AC

    #define     BA_MadiReg_MdvLcnst2_MdvLcnstValue_0           0x00AC
    #define     B16MadiReg_MdvLcnst2_MdvLcnstValue_0           0x00AC
    #define   LSb32MadiReg_MdvLcnst2_MdvLcnstValue_0              0
    #define   LSb16MadiReg_MdvLcnst2_MdvLcnstValue_0              0
    #define       bMadiReg_MdvLcnst2_MdvLcnstValue_0           5
    #define   MSK32MadiReg_MdvLcnst2_MdvLcnstValue_0              0x0000001F

    #define     BA_MadiReg_MdvLcnst2_MdvLcnstValue_1           0x00AC
    #define     B16MadiReg_MdvLcnst2_MdvLcnstValue_1           0x00AC
    #define   LSb32MadiReg_MdvLcnst2_MdvLcnstValue_1              5
    #define   LSb16MadiReg_MdvLcnst2_MdvLcnstValue_1              5
    #define       bMadiReg_MdvLcnst2_MdvLcnstValue_1           5
    #define   MSK32MadiReg_MdvLcnst2_MdvLcnstValue_1              0x000003E0

    #define     BA_MadiReg_MdvLcnst2_MdvLcnstValue_2           0x00AD
    #define     B16MadiReg_MdvLcnst2_MdvLcnstValue_2           0x00AC
    #define   LSb32MadiReg_MdvLcnst2_MdvLcnstValue_2              10
    #define   LSb16MadiReg_MdvLcnst2_MdvLcnstValue_2              10
    #define       bMadiReg_MdvLcnst2_MdvLcnstValue_2           5
    #define   MSK32MadiReg_MdvLcnst2_MdvLcnstValue_2              0x00007C00

    #define     BA_MadiReg_MdvLcnst2_MdvLcnstValue_3           0x00AD
    #define     B16MadiReg_MdvLcnst2_MdvLcnstValue_3           0x00AC
    #define   LSb32MadiReg_MdvLcnst2_MdvLcnstValue_3              15
    #define   LSb16MadiReg_MdvLcnst2_MdvLcnstValue_3              15
    #define       bMadiReg_MdvLcnst2_MdvLcnstValue_3           5
    #define   MSK32MadiReg_MdvLcnst2_MdvLcnstValue_3              0x000F8000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvLcnst3                           0x00B0

    #define     BA_MadiReg_MdvLcnst3_MdvLcnstEnhSel_0          0x00B0
    #define     B16MadiReg_MdvLcnst3_MdvLcnstEnhSel_0          0x00B0
    #define   LSb32MadiReg_MdvLcnst3_MdvLcnstEnhSel_0             0
    #define   LSb16MadiReg_MdvLcnst3_MdvLcnstEnhSel_0             0
    #define       bMadiReg_MdvLcnst3_MdvLcnstEnhSel_0          1
    #define   MSK32MadiReg_MdvLcnst3_MdvLcnstEnhSel_0             0x00000001

    #define     BA_MadiReg_MdvLcnst3_MdvLcnstEnhSel_1          0x00B0
    #define     B16MadiReg_MdvLcnst3_MdvLcnstEnhSel_1          0x00B0
    #define   LSb32MadiReg_MdvLcnst3_MdvLcnstEnhSel_1             1
    #define   LSb16MadiReg_MdvLcnst3_MdvLcnstEnhSel_1             1
    #define       bMadiReg_MdvLcnst3_MdvLcnstEnhSel_1          1
    #define   MSK32MadiReg_MdvLcnst3_MdvLcnstEnhSel_1             0x00000002

    #define     BA_MadiReg_MdvLcnst3_MdvLcnstEnhSel_2          0x00B0
    #define     B16MadiReg_MdvLcnst3_MdvLcnstEnhSel_2          0x00B0
    #define   LSb32MadiReg_MdvLcnst3_MdvLcnstEnhSel_2             2
    #define   LSb16MadiReg_MdvLcnst3_MdvLcnstEnhSel_2             2
    #define       bMadiReg_MdvLcnst3_MdvLcnstEnhSel_2          1
    #define   MSK32MadiReg_MdvLcnst3_MdvLcnstEnhSel_2             0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_VTFCoef0                            0x00B4

    #define     BA_MadiReg_VTFCoef0_VTFCoef_0                  0x00B4
    #define     B16MadiReg_VTFCoef0_VTFCoef_0                  0x00B4
    #define   LSb32MadiReg_VTFCoef0_VTFCoef_0                     0
    #define   LSb16MadiReg_VTFCoef0_VTFCoef_0                     0
    #define       bMadiReg_VTFCoef0_VTFCoef_0                  9
    #define   MSK32MadiReg_VTFCoef0_VTFCoef_0                     0x000001FF

    #define     BA_MadiReg_VTFCoef0_VTFCoef_1                  0x00B5
    #define     B16MadiReg_VTFCoef0_VTFCoef_1                  0x00B4
    #define   LSb32MadiReg_VTFCoef0_VTFCoef_1                     9
    #define   LSb16MadiReg_VTFCoef0_VTFCoef_1                     9
    #define       bMadiReg_VTFCoef0_VTFCoef_1                  9
    #define   MSK32MadiReg_VTFCoef0_VTFCoef_1                     0x0003FE00

    #define     BA_MadiReg_VTFCoef0_VTFCoef_2                  0x00B6
    #define     B16MadiReg_VTFCoef0_VTFCoef_2                  0x00B6
    #define   LSb32MadiReg_VTFCoef0_VTFCoef_2                     18
    #define   LSb16MadiReg_VTFCoef0_VTFCoef_2                     2
    #define       bMadiReg_VTFCoef0_VTFCoef_2                  9
    #define   MSK32MadiReg_VTFCoef0_VTFCoef_2                     0x07FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_VTFCoef1                            0x00B8

    #define     BA_MadiReg_VTFCoef1_VTFCoef_3                  0x00B8
    #define     B16MadiReg_VTFCoef1_VTFCoef_3                  0x00B8
    #define   LSb32MadiReg_VTFCoef1_VTFCoef_3                     0
    #define   LSb16MadiReg_VTFCoef1_VTFCoef_3                     0
    #define       bMadiReg_VTFCoef1_VTFCoef_3                  9
    #define   MSK32MadiReg_VTFCoef1_VTFCoef_3                     0x000001FF

    #define     BA_MadiReg_VTFCoef1_VTFCoef_4                  0x00B9
    #define     B16MadiReg_VTFCoef1_VTFCoef_4                  0x00B8
    #define   LSb32MadiReg_VTFCoef1_VTFCoef_4                     9
    #define   LSb16MadiReg_VTFCoef1_VTFCoef_4                     9
    #define       bMadiReg_VTFCoef1_VTFCoef_4                  9
    #define   MSK32MadiReg_VTFCoef1_VTFCoef_4                     0x0003FE00

    #define     BA_MadiReg_VTFCoef1_VTFCoef_5                  0x00BA
    #define     B16MadiReg_VTFCoef1_VTFCoef_5                  0x00BA
    #define   LSb32MadiReg_VTFCoef1_VTFCoef_5                     18
    #define   LSb16MadiReg_VTFCoef1_VTFCoef_5                     2
    #define       bMadiReg_VTFCoef1_VTFCoef_5                  9
    #define   MSK32MadiReg_VTFCoef1_VTFCoef_5                     0x07FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_VTFCoef2                            0x00BC

    #define     BA_MadiReg_VTFCoef2_VTFCoef_6                  0x00BC
    #define     B16MadiReg_VTFCoef2_VTFCoef_6                  0x00BC
    #define   LSb32MadiReg_VTFCoef2_VTFCoef_6                     0
    #define   LSb16MadiReg_VTFCoef2_VTFCoef_6                     0
    #define       bMadiReg_VTFCoef2_VTFCoef_6                  9
    #define   MSK32MadiReg_VTFCoef2_VTFCoef_6                     0x000001FF
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_C420VTFCoef0                        0x00C0

    #define     BA_MadiReg_C420VTFCoef0_C420VTFCoef_0          0x00C0
    #define     B16MadiReg_C420VTFCoef0_C420VTFCoef_0          0x00C0
    #define   LSb32MadiReg_C420VTFCoef0_C420VTFCoef_0             0
    #define   LSb16MadiReg_C420VTFCoef0_C420VTFCoef_0             0
    #define       bMadiReg_C420VTFCoef0_C420VTFCoef_0          9
    #define   MSK32MadiReg_C420VTFCoef0_C420VTFCoef_0             0x000001FF

    #define     BA_MadiReg_C420VTFCoef0_C420VTFCoef_1          0x00C1
    #define     B16MadiReg_C420VTFCoef0_C420VTFCoef_1          0x00C0
    #define   LSb32MadiReg_C420VTFCoef0_C420VTFCoef_1             9
    #define   LSb16MadiReg_C420VTFCoef0_C420VTFCoef_1             9
    #define       bMadiReg_C420VTFCoef0_C420VTFCoef_1          9
    #define   MSK32MadiReg_C420VTFCoef0_C420VTFCoef_1             0x0003FE00

    #define     BA_MadiReg_C420VTFCoef0_C420VTFCoef_2          0x00C2
    #define     B16MadiReg_C420VTFCoef0_C420VTFCoef_2          0x00C2
    #define   LSb32MadiReg_C420VTFCoef0_C420VTFCoef_2             18
    #define   LSb16MadiReg_C420VTFCoef0_C420VTFCoef_2             2
    #define       bMadiReg_C420VTFCoef0_C420VTFCoef_2          9
    #define   MSK32MadiReg_C420VTFCoef0_C420VTFCoef_2             0x07FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_C420VTFCoef1                        0x00C4

    #define     BA_MadiReg_C420VTFCoef1_C420VTFCoef_3          0x00C4
    #define     B16MadiReg_C420VTFCoef1_C420VTFCoef_3          0x00C4
    #define   LSb32MadiReg_C420VTFCoef1_C420VTFCoef_3             0
    #define   LSb16MadiReg_C420VTFCoef1_C420VTFCoef_3             0
    #define       bMadiReg_C420VTFCoef1_C420VTFCoef_3          9
    #define   MSK32MadiReg_C420VTFCoef1_C420VTFCoef_3             0x000001FF

    #define     BA_MadiReg_C420VTFCoef1_C420VTFCoef_4          0x00C5
    #define     B16MadiReg_C420VTFCoef1_C420VTFCoef_4          0x00C4
    #define   LSb32MadiReg_C420VTFCoef1_C420VTFCoef_4             9
    #define   LSb16MadiReg_C420VTFCoef1_C420VTFCoef_4             9
    #define       bMadiReg_C420VTFCoef1_C420VTFCoef_4          9
    #define   MSK32MadiReg_C420VTFCoef1_C420VTFCoef_4             0x0003FE00

    #define     BA_MadiReg_C420VTFCoef1_C420VTFCoef_5          0x00C6
    #define     B16MadiReg_C420VTFCoef1_C420VTFCoef_5          0x00C6
    #define   LSb32MadiReg_C420VTFCoef1_C420VTFCoef_5             18
    #define   LSb16MadiReg_C420VTFCoef1_C420VTFCoef_5             2
    #define       bMadiReg_C420VTFCoef1_C420VTFCoef_5          9
    #define   MSK32MadiReg_C420VTFCoef1_C420VTFCoef_5             0x07FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_C420VTFCoef2                        0x00C8

    #define     BA_MadiReg_C420VTFCoef2_C420VTFCoef_6          0x00C8
    #define     B16MadiReg_C420VTFCoef2_C420VTFCoef_6          0x00C8
    #define   LSb32MadiReg_C420VTFCoef2_C420VTFCoef_6             0
    #define   LSb16MadiReg_C420VTFCoef2_C420VTFCoef_6             0
    #define       bMadiReg_C420VTFCoef2_C420VTFCoef_6          9
    #define   MSK32MadiReg_C420VTFCoef2_C420VTFCoef_6             0x000001FF
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_C420Mode                            0x00CC

    #define     BA_MadiReg_C420Mode_C420InMode                 0x00CC
    #define     B16MadiReg_C420Mode_C420InMode                 0x00CC
    #define   LSb32MadiReg_C420Mode_C420InMode                    0
    #define   LSb16MadiReg_C420Mode_C420InMode                    0
    #define       bMadiReg_C420Mode_C420InMode                 1
    #define   MSK32MadiReg_C420Mode_C420InMode                    0x00000001

    #define     BA_MadiReg_C420Mode_C420OutMode                0x00CC
    #define     B16MadiReg_C420Mode_C420OutMode                0x00CC
    #define   LSb32MadiReg_C420Mode_C420OutMode                   1
    #define   LSb16MadiReg_C420Mode_C420OutMode                   1
    #define       bMadiReg_C420Mode_C420OutMode                1
    #define   MSK32MadiReg_C420Mode_C420OutMode                   0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_IntOutOnly                          0x00D0

    #define     BA_MadiReg_IntOutOnly_IntOutOnly               0x00D0
    #define     B16MadiReg_IntOutOnly_IntOutOnly               0x00D0
    #define   LSb32MadiReg_IntOutOnly_IntOutOnly                  0
    #define   LSb16MadiReg_IntOutOnly_IntOutOnly                  0
    #define       bMadiReg_IntOutOnly_IntOutOnly               1
    #define   MSK32MadiReg_IntOutOnly_IntOutOnly                  0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_ChromaMdvUseOnly                    0x00D4

    #define     BA_MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly   0x00D4
    #define     B16MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly   0x00D4
    #define   LSb32MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly      0
    #define   LSb16MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly      0
    #define       bMadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly   1
    #define   MSK32MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_MdvMin                              0x00D8

    #define     BA_MadiReg_MdvMin_MdvMinSt_0                   0x00D8
    #define     B16MadiReg_MdvMin_MdvMinSt_0                   0x00D8
    #define   LSb32MadiReg_MdvMin_MdvMinSt_0                      0
    #define   LSb16MadiReg_MdvMin_MdvMinSt_0                      0
    #define       bMadiReg_MdvMin_MdvMinSt_0                   8
    #define   MSK32MadiReg_MdvMin_MdvMinSt_0                      0x000000FF

    #define     BA_MadiReg_MdvMin_MdvMinSt_1                   0x00D9
    #define     B16MadiReg_MdvMin_MdvMinSt_1                   0x00D8
    #define   LSb32MadiReg_MdvMin_MdvMinSt_1                      8
    #define   LSb16MadiReg_MdvMin_MdvMinSt_1                      8
    #define       bMadiReg_MdvMin_MdvMinSt_1                   8
    #define   MSK32MadiReg_MdvMin_MdvMinSt_1                      0x0000FF00

    #define     BA_MadiReg_MdvMin_MdvMinThr_0                  0x00DA
    #define     B16MadiReg_MdvMin_MdvMinThr_0                  0x00DA
    #define   LSb32MadiReg_MdvMin_MdvMinThr_0                     16
    #define   LSb16MadiReg_MdvMin_MdvMinThr_0                     0
    #define       bMadiReg_MdvMin_MdvMinThr_0                  8
    #define   MSK32MadiReg_MdvMin_MdvMinThr_0                     0x00FF0000

    #define     BA_MadiReg_MdvMin_MdvMinThr_1                  0x00DB
    #define     B16MadiReg_MdvMin_MdvMinThr_1                  0x00DA
    #define   LSb32MadiReg_MdvMin_MdvMinThr_1                     24
    #define   LSb16MadiReg_MdvMin_MdvMinThr_1                     8
    #define       bMadiReg_MdvMin_MdvMinThr_1                  8
    #define   MSK32MadiReg_MdvMin_MdvMinThr_1                     0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_GAccShiftBits                       0x00DC

    #define     BA_MadiReg_GAccShiftBits_GhfAccShiftBits       0x00DC
    #define     B16MadiReg_GAccShiftBits_GhfAccShiftBits       0x00DC
    #define   LSb32MadiReg_GAccShiftBits_GhfAccShiftBits          0
    #define   LSb16MadiReg_GAccShiftBits_GhfAccShiftBits          0
    #define       bMadiReg_GAccShiftBits_GhfAccShiftBits       2
    #define   MSK32MadiReg_GAccShiftBits_GhfAccShiftBits          0x00000003

    #define     BA_MadiReg_GAccShiftBits_GosdAccShiftBits      0x00DC
    #define     B16MadiReg_GAccShiftBits_GosdAccShiftBits      0x00DC
    #define   LSb32MadiReg_GAccShiftBits_GosdAccShiftBits         2
    #define   LSb16MadiReg_GAccShiftBits_GosdAccShiftBits         2
    #define       bMadiReg_GAccShiftBits_GosdAccShiftBits      2
    #define   MSK32MadiReg_GAccShiftBits_GosdAccShiftBits         0x0000000C

    #define     BA_MadiReg_GAccShiftBits_GrpdAccShiftBits      0x00DC
    #define     B16MadiReg_GAccShiftBits_GrpdAccShiftBits      0x00DC
    #define   LSb32MadiReg_GAccShiftBits_GrpdAccShiftBits         4
    #define   LSb16MadiReg_GAccShiftBits_GrpdAccShiftBits         4
    #define       bMadiReg_GAccShiftBits_GrpdAccShiftBits      2
    #define   MSK32MadiReg_GAccShiftBits_GrpdAccShiftBits         0x00000030

    #define     BA_MadiReg_GAccShiftBits_GdiAccShiftBits       0x00DC
    #define     B16MadiReg_GAccShiftBits_GdiAccShiftBits       0x00DC
    #define   LSb32MadiReg_GAccShiftBits_GdiAccShiftBits          6
    #define   LSb16MadiReg_GAccShiftBits_GdiAccShiftBits          6
    #define       bMadiReg_GAccShiftBits_GdiAccShiftBits       2
    #define   MSK32MadiReg_GAccShiftBits_GdiAccShiftBits          0x000000C0
    ///////////////////////////////////////////////////////////
    #define     RA_MadiReg_YUV8BitIn                           0x00E0

    #define     BA_MadiReg_YUV8BitIn_YUV8BitIn                 0x00E0
    #define     B16MadiReg_YUV8BitIn_YUV8BitIn                 0x00E0
    #define   LSb32MadiReg_YUV8BitIn_YUV8BitIn                    0
    #define   LSb16MadiReg_YUV8BitIn_YUV8BitIn                    0
    #define       bMadiReg_YUV8BitIn_YUV8BitIn                 2
    #define   MSK32MadiReg_YUV8BitIn_YUV8BitIn                    0x00000003
    ///////////////////////////////////////////////////////////

    typedef struct SIE_MadiReg {
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Edge0_EdgeGain_0(r32)               _BFGET_(r32, 5, 0)
    #define   SET32MadiReg_Edge0_EdgeGain_0(r32,v)             _BFSET_(r32, 5, 0,v)
    #define   GET16MadiReg_Edge0_EdgeGain_0(r16)               _BFGET_(r16, 5, 0)
    #define   SET16MadiReg_Edge0_EdgeGain_0(r16,v)             _BFSET_(r16, 5, 0,v)

    #define   GET32MadiReg_Edge0_EdgeGain_1(r32)               _BFGET_(r32,11, 6)
    #define   SET32MadiReg_Edge0_EdgeGain_1(r32,v)             _BFSET_(r32,11, 6,v)
    #define   GET16MadiReg_Edge0_EdgeGain_1(r16)               _BFGET_(r16,11, 6)
    #define   SET16MadiReg_Edge0_EdgeGain_1(r16,v)             _BFSET_(r16,11, 6,v)

    #define     w32MadiReg_Edge0                               {\
            UNSG32 uEdge0_EdgeGain_0                           :  6;\
            UNSG32 uEdge0_EdgeGain_1                           :  6;\
            UNSG32 RSVDx0_b12                                  : 20;\
          }
    union { UNSG32 u32MadiReg_Edge0;
            struct w32MadiReg_Edge0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Edge1_EdgeThr_0(r32)                _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_Edge1_EdgeThr_0(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_Edge1_EdgeThr_0(r16)                _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_Edge1_EdgeThr_0(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_Edge1_EdgeThr_1(r32)                _BFGET_(r32,15, 8)
    #define   SET32MadiReg_Edge1_EdgeThr_1(r32,v)              _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_Edge1_EdgeThr_1(r16)                _BFGET_(r16,15, 8)
    #define   SET16MadiReg_Edge1_EdgeThr_1(r16,v)              _BFSET_(r16,15, 8,v)

    #define   GET32MadiReg_Edge1_EdgeThr_2(r32)                _BFGET_(r32,23,16)
    #define   SET32MadiReg_Edge1_EdgeThr_2(r32,v)              _BFSET_(r32,23,16,v)
    #define   GET16MadiReg_Edge1_EdgeThr_2(r16)                _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_Edge1_EdgeThr_2(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_Edge1_EdgeThr_3(r32)                _BFGET_(r32,31,24)
    #define   SET32MadiReg_Edge1_EdgeThr_3(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16MadiReg_Edge1_EdgeThr_3(r16)                _BFGET_(r16,15, 8)
    #define   SET16MadiReg_Edge1_EdgeThr_3(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_Edge1                               {\
            UNSG32 uEdge1_EdgeThr_0                            :  8;\
            UNSG32 uEdge1_EdgeThr_1                            :  8;\
            UNSG32 uEdge1_EdgeThr_2                            :  8;\
            UNSG32 uEdge1_EdgeThr_3                            :  8;\
          }
    union { UNSG32 u32MadiReg_Edge1;
            struct w32MadiReg_Edge1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Cnst_CnstThr_0(r32)                 _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_Cnst_CnstThr_0(r32,v)               _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_Cnst_CnstThr_0(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_Cnst_CnstThr_0(r16,v)               _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_Cnst_CnstThr_1(r32)                 _BFGET_(r32,15, 8)
    #define   SET32MadiReg_Cnst_CnstThr_1(r32,v)               _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_Cnst_CnstThr_1(r16)                 _BFGET_(r16,15, 8)
    #define   SET16MadiReg_Cnst_CnstThr_1(r16,v)               _BFSET_(r16,15, 8,v)

    #define   GET32MadiReg_Cnst_CnstThr_2(r32)                 _BFGET_(r32,23,16)
    #define   SET32MadiReg_Cnst_CnstThr_2(r32,v)               _BFSET_(r32,23,16,v)
    #define   GET16MadiReg_Cnst_CnstThr_2(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_Cnst_CnstThr_2(r16,v)               _BFSET_(r16, 7, 0,v)

    #define     w32MadiReg_Cnst                                {\
            UNSG32 uCnst_CnstThr_0                             :  8;\
            UNSG32 uCnst_CnstThr_1                             :  8;\
            UNSG32 uCnst_CnstThr_2                             :  8;\
            UNSG32 RSVDx8_b24                                  :  8;\
          }
    union { UNSG32 u32MadiReg_Cnst;
            struct w32MadiReg_Cnst;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvCnst_MdvCnstThr(r32)             _BFGET_(r32, 5, 0)
    #define   SET32MadiReg_MdvCnst_MdvCnstThr(r32,v)           _BFSET_(r32, 5, 0,v)
    #define   GET16MadiReg_MdvCnst_MdvCnstThr(r16)             _BFGET_(r16, 5, 0)
    #define   SET16MadiReg_MdvCnst_MdvCnstThr(r16,v)           _BFSET_(r16, 5, 0,v)

    #define     w32MadiReg_MdvCnst                             {\
            UNSG32 uMdvCnst_MdvCnstThr                         :  6;\
            UNSG32 RSVDxC_b6                                   : 26;\
          }
    union { UNSG32 u32MadiReg_MdvCnst;
            struct w32MadiReg_MdvCnst;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_LamdNoise_LamdNoiseThr_0(r32)       _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_LamdNoise_LamdNoiseThr_0(r32,v)     _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_LamdNoise_LamdNoiseThr_0(r16)       _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_LamdNoise_LamdNoiseThr_0(r16,v)     _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_LamdNoise_LamdNoiseThr_1(r32)       _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_LamdNoise_LamdNoiseThr_1(r32,v)     _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_LamdNoise_LamdNoiseThr_1(r16)       _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_LamdNoise_LamdNoiseThr_1(r16,v)     _BFSET_(r16, 9, 5,v)

    #define     w32MadiReg_LamdNoise                           {\
            UNSG32 uLamdNoise_LamdNoiseThr_0                   :  5;\
            UNSG32 uLamdNoise_LamdNoiseThr_1                   :  5;\
            UNSG32 RSVDx10_b10                                 : 22;\
          }
    union { UNSG32 u32MadiReg_LamdNoise;
            struct w32MadiReg_LamdNoise;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_LasdNoise_LasdNoiseThr_0(r32)       _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_LasdNoise_LasdNoiseThr_0(r32,v)     _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_LasdNoise_LasdNoiseThr_0(r16)       _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_LasdNoise_LasdNoiseThr_0(r16,v)     _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_LasdNoise_LasdNoiseThr_1(r32)       _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_LasdNoise_LasdNoiseThr_1(r32,v)     _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_LasdNoise_LasdNoiseThr_1(r16)       _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_LasdNoise_LasdNoiseThr_1(r16,v)     _BFSET_(r16, 9, 5,v)

    #define     w32MadiReg_LasdNoise                           {\
            UNSG32 uLasdNoise_LasdNoiseThr_0                   :  5;\
            UNSG32 uLasdNoise_LasdNoiseThr_1                   :  5;\
            UNSG32 RSVDx14_b10                                 : 22;\
          }
    union { UNSG32 u32MadiReg_LasdNoise;
            struct w32MadiReg_LasdNoise;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_LAMD_LAMDThr_0(r32)                 _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_LAMD_LAMDThr_0(r32,v)               _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_LAMD_LAMDThr_0(r16)                 _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_LAMD_LAMDThr_0(r16,v)               _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_LAMD_LAMDThr_1(r32)                 _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_LAMD_LAMDThr_1(r32,v)               _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_LAMD_LAMDThr_1(r16)                 _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_LAMD_LAMDThr_1(r16,v)               _BFSET_(r16, 9, 5,v)

    #define   GET32MadiReg_LAMD_LAMDThr_2(r32)                 _BFGET_(r32,14,10)
    #define   SET32MadiReg_LAMD_LAMDThr_2(r32,v)               _BFSET_(r32,14,10,v)
    #define   GET16MadiReg_LAMD_LAMDThr_2(r16)                 _BFGET_(r16,14,10)
    #define   SET16MadiReg_LAMD_LAMDThr_2(r16,v)               _BFSET_(r16,14,10,v)

    #define   GET32MadiReg_LAMD_LAMDEnhThr_0(r32)              _BFGET_(r32,16,15)
    #define   SET32MadiReg_LAMD_LAMDEnhThr_0(r32,v)            _BFSET_(r32,16,15,v)

    #define   GET32MadiReg_LAMD_LAMDEnhThr_1(r32)              _BFGET_(r32,18,17)
    #define   SET32MadiReg_LAMD_LAMDEnhThr_1(r32,v)            _BFSET_(r32,18,17,v)
    #define   GET16MadiReg_LAMD_LAMDEnhThr_1(r16)              _BFGET_(r16, 2, 1)
    #define   SET16MadiReg_LAMD_LAMDEnhThr_1(r16,v)            _BFSET_(r16, 2, 1,v)

    #define     w32MadiReg_LAMD                                {\
            UNSG32 uLAMD_LAMDThr_0                             :  5;\
            UNSG32 uLAMD_LAMDThr_1                             :  5;\
            UNSG32 uLAMD_LAMDThr_2                             :  5;\
            UNSG32 uLAMD_LAMDEnhThr_0                          :  2;\
            UNSG32 uLAMD_LAMDEnhThr_1                          :  2;\
            UNSG32 RSVDx18_b19                                 : 13;\
          }
    union { UNSG32 u32MadiReg_LAMD;
            struct w32MadiReg_LAMD;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_LASD_LASDThr_0(r32)                 _BFGET_(r32, 2, 0)
    #define   SET32MadiReg_LASD_LASDThr_0(r32,v)               _BFSET_(r32, 2, 0,v)
    #define   GET16MadiReg_LASD_LASDThr_0(r16)                 _BFGET_(r16, 2, 0)
    #define   SET16MadiReg_LASD_LASDThr_0(r16,v)               _BFSET_(r16, 2, 0,v)

    #define     w32MadiReg_LASD                                {\
            UNSG32 uLASD_LASDThr_0                             :  3;\
            UNSG32 RSVDx1C_b3                                  : 29;\
          }
    union { UNSG32 u32MadiReg_LASD;
            struct w32MadiReg_LASD;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_SOSD0_SOSDThr_0(r32)                _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_SOSD0_SOSDThr_0(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_SOSD0_SOSDThr_0(r16)                _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_SOSD0_SOSDThr_0(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_SOSD0_SOSDThr_1(r32)                _BFGET_(r32,15, 8)
    #define   SET32MadiReg_SOSD0_SOSDThr_1(r32,v)              _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_SOSD0_SOSDThr_1(r16)                _BFGET_(r16,15, 8)
    #define   SET16MadiReg_SOSD0_SOSDThr_1(r16,v)              _BFSET_(r16,15, 8,v)

    #define   GET32MadiReg_SOSD0_SOSDThr_2(r32)                _BFGET_(r32,23,16)
    #define   SET32MadiReg_SOSD0_SOSDThr_2(r32,v)              _BFSET_(r32,23,16,v)
    #define   GET16MadiReg_SOSD0_SOSDThr_2(r16)                _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_SOSD0_SOSDThr_2(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_SOSD0_SOSDThr_3(r32)                _BFGET_(r32,31,24)
    #define   SET32MadiReg_SOSD0_SOSDThr_3(r32,v)              _BFSET_(r32,31,24,v)
    #define   GET16MadiReg_SOSD0_SOSDThr_3(r16)                _BFGET_(r16,15, 8)
    #define   SET16MadiReg_SOSD0_SOSDThr_3(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_SOSD0                               {\
            UNSG32 uSOSD0_SOSDThr_0                            :  8;\
            UNSG32 uSOSD0_SOSDThr_1                            :  8;\
            UNSG32 uSOSD0_SOSDThr_2                            :  8;\
            UNSG32 uSOSD0_SOSDThr_3                            :  8;\
          }
    union { UNSG32 u32MadiReg_SOSD0;
            struct w32MadiReg_SOSD0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_SOSD1_SOSDThr_4(r32)                _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_SOSD1_SOSDThr_4(r32,v)              _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_SOSD1_SOSDThr_4(r16)                _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_SOSD1_SOSDThr_4(r16,v)              _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_SOSD1_SOSDThr_5(r32)                _BFGET_(r32,15, 8)
    #define   SET32MadiReg_SOSD1_SOSDThr_5(r32,v)              _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_SOSD1_SOSDThr_5(r16)                _BFGET_(r16,15, 8)
    #define   SET16MadiReg_SOSD1_SOSDThr_5(r16,v)              _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_SOSD1                               {\
            UNSG32 uSOSD1_SOSDThr_4                            :  8;\
            UNSG32 uSOSD1_SOSDThr_5                            :  8;\
            UNSG32 RSVDx24_b16                                 : 16;\
          }
    union { UNSG32 u32MadiReg_SOSD1;
            struct w32MadiReg_SOSD1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_LAMDGain_LAMDGain_0(r32)            _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_LAMDGain_LAMDGain_0(r32,v)          _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_LAMDGain_LAMDGain_0(r16)            _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_LAMDGain_LAMDGain_0(r16,v)          _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_LAMDGain_LAMDGain_1(r32)            _BFGET_(r32,15, 8)
    #define   SET32MadiReg_LAMDGain_LAMDGain_1(r32,v)          _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_LAMDGain_LAMDGain_1(r16)            _BFGET_(r16,15, 8)
    #define   SET16MadiReg_LAMDGain_LAMDGain_1(r16,v)          _BFSET_(r16,15, 8,v)

    #define   GET32MadiReg_LAMDGain_LAMDGain_2(r32)            _BFGET_(r32,23,16)
    #define   SET32MadiReg_LAMDGain_LAMDGain_2(r32,v)          _BFSET_(r32,23,16,v)
    #define   GET16MadiReg_LAMDGain_LAMDGain_2(r16)            _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_LAMDGain_LAMDGain_2(r16,v)          _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_LAMDGain_LAMDGain_3(r32)            _BFGET_(r32,31,24)
    #define   SET32MadiReg_LAMDGain_LAMDGain_3(r32,v)          _BFSET_(r32,31,24,v)
    #define   GET16MadiReg_LAMDGain_LAMDGain_3(r16)            _BFGET_(r16,15, 8)
    #define   SET16MadiReg_LAMDGain_LAMDGain_3(r16,v)          _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_LAMDGain                            {\
            UNSG32 uLAMDGain_LAMDGain_0                        :  8;\
            UNSG32 uLAMDGain_LAMDGain_1                        :  8;\
            UNSG32 uLAMDGain_LAMDGain_2                        :  8;\
            UNSG32 uLAMDGain_LAMDGain_3                        :  8;\
          }
    union { UNSG32 u32MadiReg_LAMDGain;
            struct w32MadiReg_LAMDGain;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_LASDGain_LASDGain_0(r32)            _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_LASDGain_LASDGain_0(r32,v)          _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_LASDGain_LASDGain_0(r16)            _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_LASDGain_LASDGain_0(r16,v)          _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_LASDGain_LASDGain_1(r32)            _BFGET_(r32,15, 8)
    #define   SET32MadiReg_LASDGain_LASDGain_1(r32,v)          _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_LASDGain_LASDGain_1(r16)            _BFGET_(r16,15, 8)
    #define   SET16MadiReg_LASDGain_LASDGain_1(r16,v)          _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_LASDGain                            {\
            UNSG32 uLASDGain_LASDGain_0                        :  8;\
            UNSG32 uLASDGain_LASDGain_1                        :  8;\
            UNSG32 RSVDx2C_b16                                 : 16;\
          }
    union { UNSG32 u32MadiReg_LASDGain;
            struct w32MadiReg_LASDGain;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Hf_HfThr_0(r32)                     _BFGET_(r32, 5, 0)
    #define   SET32MadiReg_Hf_HfThr_0(r32,v)                   _BFSET_(r32, 5, 0,v)
    #define   GET16MadiReg_Hf_HfThr_0(r16)                     _BFGET_(r16, 5, 0)
    #define   SET16MadiReg_Hf_HfThr_0(r16,v)                   _BFSET_(r16, 5, 0,v)

    #define   GET32MadiReg_Hf_HfThr_1(r32)                     _BFGET_(r32,11, 6)
    #define   SET32MadiReg_Hf_HfThr_1(r32,v)                   _BFSET_(r32,11, 6,v)
    #define   GET16MadiReg_Hf_HfThr_1(r16)                     _BFGET_(r16,11, 6)
    #define   SET16MadiReg_Hf_HfThr_1(r16,v)                   _BFSET_(r16,11, 6,v)

    #define     w32MadiReg_Hf                                  {\
            UNSG32 uHf_HfThr_0                                 :  6;\
            UNSG32 uHf_HfThr_1                                 :  6;\
            UNSG32 RSVDx30_b12                                 : 20;\
          }
    union { UNSG32 u32MadiReg_Hf;
            struct w32MadiReg_Hf;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Rpd_RpdThr_0(r32)                   _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_Rpd_RpdThr_0(r32,v)                 _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_Rpd_RpdThr_0(r16)                   _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_Rpd_RpdThr_0(r16,v)                 _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_Rpd_RpdThr_1(r32)                   _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_Rpd_RpdThr_1(r32,v)                 _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_Rpd_RpdThr_1(r16)                   _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_Rpd_RpdThr_1(r16,v)                 _BFSET_(r16, 9, 5,v)

    #define     w32MadiReg_Rpd                                 {\
            UNSG32 uRpd_RpdThr_0                               :  5;\
            UNSG32 uRpd_RpdThr_1                               :  5;\
            UNSG32 RSVDx34_b10                                 : 22;\
          }
    union { UNSG32 u32MadiReg_Rpd;
            struct w32MadiReg_Rpd;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_SdiSad_SdiSadThr_0(r32)             _BFGET_(r32, 5, 0)
    #define   SET32MadiReg_SdiSad_SdiSadThr_0(r32,v)           _BFSET_(r32, 5, 0,v)
    #define   GET16MadiReg_SdiSad_SdiSadThr_0(r16)             _BFGET_(r16, 5, 0)
    #define   SET16MadiReg_SdiSad_SdiSadThr_0(r16,v)           _BFSET_(r16, 5, 0,v)

    #define   GET32MadiReg_SdiSad_SdiSadThr_1(r32)             _BFGET_(r32,11, 6)
    #define   SET32MadiReg_SdiSad_SdiSadThr_1(r32,v)           _BFSET_(r32,11, 6,v)
    #define   GET16MadiReg_SdiSad_SdiSadThr_1(r16)             _BFGET_(r16,11, 6)
    #define   SET16MadiReg_SdiSad_SdiSadThr_1(r16,v)           _BFSET_(r16,11, 6,v)

    #define   GET32MadiReg_SdiSad_SdiSadThr_2(r32)             _BFGET_(r32,17,12)
    #define   SET32MadiReg_SdiSad_SdiSadThr_2(r32,v)           _BFSET_(r32,17,12,v)

    #define   GET32MadiReg_SdiSad_SdiSadThr_3(r32)             _BFGET_(r32,25,18)
    #define   SET32MadiReg_SdiSad_SdiSadThr_3(r32,v)           _BFSET_(r32,25,18,v)
    #define   GET16MadiReg_SdiSad_SdiSadThr_3(r16)             _BFGET_(r16, 9, 2)
    #define   SET16MadiReg_SdiSad_SdiSadThr_3(r16,v)           _BFSET_(r16, 9, 2,v)

    #define     w32MadiReg_SdiSad                              {\
            UNSG32 uSdiSad_SdiSadThr_0                         :  6;\
            UNSG32 uSdiSad_SdiSadThr_1                         :  6;\
            UNSG32 uSdiSad_SdiSadThr_2                         :  6;\
            UNSG32 uSdiSad_SdiSadThr_3                         :  8;\
            UNSG32 RSVDx38_b26                                 :  6;\
          }
    union { UNSG32 u32MadiReg_SdiSad;
            struct w32MadiReg_SdiSad;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_DiagByps_YDiagByps(r32)             _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_DiagByps_YDiagByps(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_DiagByps_YDiagByps(r16)             _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_DiagByps_YDiagByps(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_DiagByps_UVDiagByps(r32)            _BFGET_(r32, 1, 1)
    #define   SET32MadiReg_DiagByps_UVDiagByps(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16MadiReg_DiagByps_UVDiagByps(r16)            _BFGET_(r16, 1, 1)
    #define   SET16MadiReg_DiagByps_UVDiagByps(r16,v)          _BFSET_(r16, 1, 1,v)

    #define     w32MadiReg_DiagByps                            {\
            UNSG32 uDiagByps_YDiagByps                         :  1;\
            UNSG32 uDiagByps_UVDiagByps                        :  1;\
            UNSG32 RSVDx3C_b2                                  : 30;\
          }
    union { UNSG32 u32MadiReg_DiagByps;
            struct w32MadiReg_DiagByps;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_SdiNoise_SdiNoiseThr(r32)           _BFGET_(r32, 5, 0)
    #define   SET32MadiReg_SdiNoise_SdiNoiseThr(r32,v)         _BFSET_(r32, 5, 0,v)
    #define   GET16MadiReg_SdiNoise_SdiNoiseThr(r16)           _BFGET_(r16, 5, 0)
    #define   SET16MadiReg_SdiNoise_SdiNoiseThr(r16,v)         _BFSET_(r16, 5, 0,v)

    #define     w32MadiReg_SdiNoise                            {\
            UNSG32 uSdiNoise_SdiNoiseThr                       :  6;\
            UNSG32 RSVDx40_b6                                  : 26;\
          }
    union { UNSG32 u32MadiReg_SdiNoise;
            struct w32MadiReg_SdiNoise;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Sdi0_SdiAbsAngFilterThr(r32)        _BFGET_(r32, 2, 0)
    #define   SET32MadiReg_Sdi0_SdiAbsAngFilterThr(r32,v)      _BFSET_(r32, 2, 0,v)
    #define   GET16MadiReg_Sdi0_SdiAbsAngFilterThr(r16)        _BFGET_(r16, 2, 0)
    #define   SET16MadiReg_Sdi0_SdiAbsAngFilterThr(r16,v)      _BFSET_(r16, 2, 0,v)

    #define   GET32MadiReg_Sdi0_SdiIntClamp(r32)               _BFGET_(r32, 6, 3)
    #define   SET32MadiReg_Sdi0_SdiIntClamp(r32,v)             _BFSET_(r32, 6, 3,v)
    #define   GET16MadiReg_Sdi0_SdiIntClamp(r16)               _BFGET_(r16, 6, 3)
    #define   SET16MadiReg_Sdi0_SdiIntClamp(r16,v)             _BFSET_(r16, 6, 3,v)

    #define   GET32MadiReg_Sdi0_SdiAbsAngConfThr(r32)          _BFGET_(r32, 8, 7)
    #define   SET32MadiReg_Sdi0_SdiAbsAngConfThr(r32,v)        _BFSET_(r32, 8, 7,v)
    #define   GET16MadiReg_Sdi0_SdiAbsAngConfThr(r16)          _BFGET_(r16, 8, 7)
    #define   SET16MadiReg_Sdi0_SdiAbsAngConfThr(r16,v)        _BFSET_(r16, 8, 7,v)

    #define   GET32MadiReg_Sdi0_SdiAbsAngThr(r32)              _BFGET_(r32,12, 9)
    #define   SET32MadiReg_Sdi0_SdiAbsAngThr(r32,v)            _BFSET_(r32,12, 9,v)
    #define   GET16MadiReg_Sdi0_SdiAbsAngThr(r16)              _BFGET_(r16,12, 9)
    #define   SET16MadiReg_Sdi0_SdiAbsAngThr(r16,v)            _BFSET_(r16,12, 9,v)

    #define   GET32MadiReg_Sdi0_SdiAngStretchThr(r32)          _BFGET_(r32,17,13)
    #define   SET32MadiReg_Sdi0_SdiAngStretchThr(r32,v)        _BFSET_(r32,17,13,v)

    #define   GET32MadiReg_Sdi0_SdiHighAngConfValue_0(r32)     _BFGET_(r32,20,18)
    #define   SET32MadiReg_Sdi0_SdiHighAngConfValue_0(r32,v)   _BFSET_(r32,20,18,v)
    #define   GET16MadiReg_Sdi0_SdiHighAngConfValue_0(r16)     _BFGET_(r16, 4, 2)
    #define   SET16MadiReg_Sdi0_SdiHighAngConfValue_0(r16,v)   _BFSET_(r16, 4, 2,v)

    #define   GET32MadiReg_Sdi0_SdiHighAngConfValue_1(r32)     _BFGET_(r32,23,21)
    #define   SET32MadiReg_Sdi0_SdiHighAngConfValue_1(r32,v)   _BFSET_(r32,23,21,v)
    #define   GET16MadiReg_Sdi0_SdiHighAngConfValue_1(r16)     _BFGET_(r16, 7, 5)
    #define   SET16MadiReg_Sdi0_SdiHighAngConfValue_1(r16,v)   _BFSET_(r16, 7, 5,v)

    #define     w32MadiReg_Sdi0                                {\
            UNSG32 uSdi0_SdiAbsAngFilterThr                    :  3;\
            UNSG32 uSdi0_SdiIntClamp                           :  4;\
            UNSG32 uSdi0_SdiAbsAngConfThr                      :  2;\
            UNSG32 uSdi0_SdiAbsAngThr                          :  4;\
            UNSG32 uSdi0_SdiAngStretchThr                      :  5;\
            UNSG32 uSdi0_SdiHighAngConfValue_0                 :  3;\
            UNSG32 uSdi0_SdiHighAngConfValue_1                 :  3;\
            UNSG32 RSVDx44_b24                                 :  8;\
          }
    union { UNSG32 u32MadiReg_Sdi0;
            struct w32MadiReg_Sdi0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Sdi1_SdiAngConfBlendGain_0(r32)     _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_Sdi1_SdiAngConfBlendGain_0(r32,v)   _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_Sdi1_SdiAngConfBlendGain_0(r16)     _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_Sdi1_SdiAngConfBlendGain_0(r16,v)   _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_Sdi1_SdiAngConfBlendGain_1(r32)     _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_Sdi1_SdiAngConfBlendGain_1(r32,v)   _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_Sdi1_SdiAngConfBlendGain_1(r16)     _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_Sdi1_SdiAngConfBlendGain_1(r16,v)   _BFSET_(r16, 9, 5,v)

    #define   GET32MadiReg_Sdi1_SdiAngConfBlendGain_2(r32)     _BFGET_(r32,14,10)
    #define   SET32MadiReg_Sdi1_SdiAngConfBlendGain_2(r32,v)   _BFSET_(r32,14,10,v)
    #define   GET16MadiReg_Sdi1_SdiAngConfBlendGain_2(r16)     _BFGET_(r16,14,10)
    #define   SET16MadiReg_Sdi1_SdiAngConfBlendGain_2(r16,v)   _BFSET_(r16,14,10,v)

    #define   GET32MadiReg_Sdi1_SdiAngConfBlendGain_3(r32)     _BFGET_(r32,19,15)
    #define   SET32MadiReg_Sdi1_SdiAngConfBlendGain_3(r32,v)   _BFSET_(r32,19,15,v)

    #define     w32MadiReg_Sdi1                                {\
            UNSG32 uSdi1_SdiAngConfBlendGain_0                 :  5;\
            UNSG32 uSdi1_SdiAngConfBlendGain_1                 :  5;\
            UNSG32 uSdi1_SdiAngConfBlendGain_2                 :  5;\
            UNSG32 uSdi1_SdiAngConfBlendGain_3                 :  5;\
            UNSG32 RSVDx48_b20                                 : 12;\
          }
    union { UNSG32 u32MadiReg_Sdi1;
            struct w32MadiReg_Sdi1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Sdi2_SdiAngConfBlendGain_4(r32)     _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_Sdi2_SdiAngConfBlendGain_4(r32,v)   _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_Sdi2_SdiAngConfBlendGain_4(r16)     _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_Sdi2_SdiAngConfBlendGain_4(r16,v)   _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_Sdi2_SdiAngConfBlendGain_5(r32)     _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_Sdi2_SdiAngConfBlendGain_5(r32,v)   _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_Sdi2_SdiAngConfBlendGain_5(r16)     _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_Sdi2_SdiAngConfBlendGain_5(r16,v)   _BFSET_(r16, 9, 5,v)

    #define   GET32MadiReg_Sdi2_SdiAngConfBlendGain_6(r32)     _BFGET_(r32,14,10)
    #define   SET32MadiReg_Sdi2_SdiAngConfBlendGain_6(r32,v)   _BFSET_(r32,14,10,v)
    #define   GET16MadiReg_Sdi2_SdiAngConfBlendGain_6(r16)     _BFGET_(r16,14,10)
    #define   SET16MadiReg_Sdi2_SdiAngConfBlendGain_6(r16,v)   _BFSET_(r16,14,10,v)

    #define     w32MadiReg_Sdi2                                {\
            UNSG32 uSdi2_SdiAngConfBlendGain_4                 :  5;\
            UNSG32 uSdi2_SdiAngConfBlendGain_5                 :  5;\
            UNSG32 uSdi2_SdiAngConfBlendGain_6                 :  5;\
            UNSG32 RSVDx4C_b15                                 : 17;\
          }
    union { UNSG32 u32MadiReg_Sdi2;
            struct w32MadiReg_Sdi2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_ShiftBit_BlamdShiftBit(r32)         _BFGET_(r32, 2, 0)
    #define   SET32MadiReg_ShiftBit_BlamdShiftBit(r32,v)       _BFSET_(r32, 2, 0,v)
    #define   GET16MadiReg_ShiftBit_BlamdShiftBit(r16)         _BFGET_(r16, 2, 0)
    #define   SET16MadiReg_ShiftBit_BlamdShiftBit(r16,v)       _BFSET_(r16, 2, 0,v)

    #define   GET32MadiReg_ShiftBit_BlasdShiftBit(r32)         _BFGET_(r32, 5, 3)
    #define   SET32MadiReg_ShiftBit_BlasdShiftBit(r32,v)       _BFSET_(r32, 5, 3,v)
    #define   GET16MadiReg_ShiftBit_BlasdShiftBit(r16)         _BFGET_(r16, 5, 3)
    #define   SET16MadiReg_ShiftBit_BlasdShiftBit(r16,v)       _BFSET_(r16, 5, 3,v)

    #define   GET32MadiReg_ShiftBit_BsosdShiftBit(r32)         _BFGET_(r32, 8, 6)
    #define   SET32MadiReg_ShiftBit_BsosdShiftBit(r32,v)       _BFSET_(r32, 8, 6,v)
    #define   GET16MadiReg_ShiftBit_BsosdShiftBit(r16)         _BFGET_(r16, 8, 6)
    #define   SET16MadiReg_ShiftBit_BsosdShiftBit(r16,v)       _BFSET_(r16, 8, 6,v)

    #define   GET32MadiReg_ShiftBit_BlmhfShiftBit(r32)         _BFGET_(r32,11, 9)
    #define   SET32MadiReg_ShiftBit_BlmhfShiftBit(r32,v)       _BFSET_(r32,11, 9,v)
    #define   GET16MadiReg_ShiftBit_BlmhfShiftBit(r16)         _BFGET_(r16,11, 9)
    #define   SET16MadiReg_ShiftBit_BlmhfShiftBit(r16,v)       _BFSET_(r16,11, 9,v)

    #define     w32MadiReg_ShiftBit                            {\
            UNSG32 uShiftBit_BlamdShiftBit                     :  3;\
            UNSG32 uShiftBit_BlasdShiftBit                     :  3;\
            UNSG32 uShiftBit_BsosdShiftBit                     :  3;\
            UNSG32 uShiftBit_BlmhfShiftBit                     :  3;\
            UNSG32 RSVDx50_b12                                 : 20;\
          }
    union { UNSG32 u32MadiReg_ShiftBit;
            struct w32MadiReg_ShiftBit;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Sdi3_SdiScaleFactor_0(r32)          _BFGET_(r32, 3, 0)
    #define   SET32MadiReg_Sdi3_SdiScaleFactor_0(r32,v)        _BFSET_(r32, 3, 0,v)
    #define   GET16MadiReg_Sdi3_SdiScaleFactor_0(r16)          _BFGET_(r16, 3, 0)
    #define   SET16MadiReg_Sdi3_SdiScaleFactor_0(r16,v)        _BFSET_(r16, 3, 0,v)

    #define   GET32MadiReg_Sdi3_SdiScaleFactor_1(r32)          _BFGET_(r32, 7, 4)
    #define   SET32MadiReg_Sdi3_SdiScaleFactor_1(r32,v)        _BFSET_(r32, 7, 4,v)
    #define   GET16MadiReg_Sdi3_SdiScaleFactor_1(r16)          _BFGET_(r16, 7, 4)
    #define   SET16MadiReg_Sdi3_SdiScaleFactor_1(r16,v)        _BFSET_(r16, 7, 4,v)

    #define   GET32MadiReg_Sdi3_SdiScaleFactor_2(r32)          _BFGET_(r32,11, 8)
    #define   SET32MadiReg_Sdi3_SdiScaleFactor_2(r32,v)        _BFSET_(r32,11, 8,v)
    #define   GET16MadiReg_Sdi3_SdiScaleFactor_2(r16)          _BFGET_(r16,11, 8)
    #define   SET16MadiReg_Sdi3_SdiScaleFactor_2(r16,v)        _BFSET_(r16,11, 8,v)

    #define   GET32MadiReg_Sdi3_SdiScaleFactor_3(r32)          _BFGET_(r32,15,12)
    #define   SET32MadiReg_Sdi3_SdiScaleFactor_3(r32,v)        _BFSET_(r32,15,12,v)
    #define   GET16MadiReg_Sdi3_SdiScaleFactor_3(r16)          _BFGET_(r16,15,12)
    #define   SET16MadiReg_Sdi3_SdiScaleFactor_3(r16,v)        _BFSET_(r16,15,12,v)

    #define     w32MadiReg_Sdi3                                {\
            UNSG32 uSdi3_SdiScaleFactor_0                      :  4;\
            UNSG32 uSdi3_SdiScaleFactor_1                      :  4;\
            UNSG32 uSdi3_SdiScaleFactor_2                      :  4;\
            UNSG32 uSdi3_SdiScaleFactor_3                      :  4;\
            UNSG32 RSVDx54_b16                                 : 16;\
          }
    union { UNSG32 u32MadiReg_Sdi3;
            struct w32MadiReg_Sdi3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Sdi4_SdiIntDifThr_0(r32)            _BFGET_(r32, 9, 0)
    #define   SET32MadiReg_Sdi4_SdiIntDifThr_0(r32,v)          _BFSET_(r32, 9, 0,v)
    #define   GET16MadiReg_Sdi4_SdiIntDifThr_0(r16)            _BFGET_(r16, 9, 0)
    #define   SET16MadiReg_Sdi4_SdiIntDifThr_0(r16,v)          _BFSET_(r16, 9, 0,v)

    #define   GET32MadiReg_Sdi4_SdiIntDifThr_1(r32)            _BFGET_(r32,19,10)
    #define   SET32MadiReg_Sdi4_SdiIntDifThr_1(r32,v)          _BFSET_(r32,19,10,v)

    #define   GET32MadiReg_Sdi4_SdiIntDifThr_2(r32)            _BFGET_(r32,29,20)
    #define   SET32MadiReg_Sdi4_SdiIntDifThr_2(r32,v)          _BFSET_(r32,29,20,v)
    #define   GET16MadiReg_Sdi4_SdiIntDifThr_2(r16)            _BFGET_(r16,13, 4)
    #define   SET16MadiReg_Sdi4_SdiIntDifThr_2(r16,v)          _BFSET_(r16,13, 4,v)

    #define     w32MadiReg_Sdi4                                {\
            UNSG32 uSdi4_SdiIntDifThr_0                        : 10;\
            UNSG32 uSdi4_SdiIntDifThr_1                        : 10;\
            UNSG32 uSdi4_SdiIntDifThr_2                        : 10;\
            UNSG32 RSVDx58_b30                                 :  2;\
          }
    union { UNSG32 u32MadiReg_Sdi4;
            struct w32MadiReg_Sdi4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Sdi5_SdiIntDifThr_3(r32)            _BFGET_(r32, 9, 0)
    #define   SET32MadiReg_Sdi5_SdiIntDifThr_3(r32,v)          _BFSET_(r32, 9, 0,v)
    #define   GET16MadiReg_Sdi5_SdiIntDifThr_3(r16)            _BFGET_(r16, 9, 0)
    #define   SET16MadiReg_Sdi5_SdiIntDifThr_3(r16,v)          _BFSET_(r16, 9, 0,v)

    #define   GET32MadiReg_Sdi5_SdiIntDifThr_4(r32)            _BFGET_(r32,19,10)
    #define   SET32MadiReg_Sdi5_SdiIntDifThr_4(r32,v)          _BFSET_(r32,19,10,v)

    #define   GET32MadiReg_Sdi5_SdiIntDifThr_5(r32)            _BFGET_(r32,29,20)
    #define   SET32MadiReg_Sdi5_SdiIntDifThr_5(r32,v)          _BFSET_(r32,29,20,v)
    #define   GET16MadiReg_Sdi5_SdiIntDifThr_5(r16)            _BFGET_(r16,13, 4)
    #define   SET16MadiReg_Sdi5_SdiIntDifThr_5(r16,v)          _BFSET_(r16,13, 4,v)

    #define     w32MadiReg_Sdi5                                {\
            UNSG32 uSdi5_SdiIntDifThr_3                        : 10;\
            UNSG32 uSdi5_SdiIntDifThr_4                        : 10;\
            UNSG32 uSdi5_SdiIntDifThr_5                        : 10;\
            UNSG32 RSVDx5C_b30                                 :  2;\
          }
    union { UNSG32 u32MadiReg_Sdi5;
            struct w32MadiReg_Sdi5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Sdi6_SdiMdvThr_0(r32)               _BFGET_(r32, 5, 0)
    #define   SET32MadiReg_Sdi6_SdiMdvThr_0(r32,v)             _BFSET_(r32, 5, 0,v)
    #define   GET16MadiReg_Sdi6_SdiMdvThr_0(r16)               _BFGET_(r16, 5, 0)
    #define   SET16MadiReg_Sdi6_SdiMdvThr_0(r16,v)             _BFSET_(r16, 5, 0,v)

    #define   GET32MadiReg_Sdi6_SdiMdvThr_1(r32)               _BFGET_(r32,11, 6)
    #define   SET32MadiReg_Sdi6_SdiMdvThr_1(r32,v)             _BFSET_(r32,11, 6,v)
    #define   GET16MadiReg_Sdi6_SdiMdvThr_1(r16)               _BFGET_(r16,11, 6)
    #define   SET16MadiReg_Sdi6_SdiMdvThr_1(r16,v)             _BFSET_(r16,11, 6,v)

    #define   GET32MadiReg_Sdi6_SdiLowSadThr(r32)              _BFGET_(r32,17,12)
    #define   SET32MadiReg_Sdi6_SdiLowSadThr(r32,v)            _BFSET_(r32,17,12,v)

    #define     w32MadiReg_Sdi6                                {\
            UNSG32 uSdi6_SdiMdvThr_0                           :  6;\
            UNSG32 uSdi6_SdiMdvThr_1                           :  6;\
            UNSG32 uSdi6_SdiLowSadThr                          :  6;\
            UNSG32 RSVDx60_b18                                 : 14;\
          }
    union { UNSG32 u32MadiReg_Sdi6;
            struct w32MadiReg_Sdi6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Angle_AngConfEn(r32)                _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_Angle_AngConfEn(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_Angle_AngConfEn(r16)                _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_Angle_AngConfEn(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_Angle_AngConfUser(r32)              _BFGET_(r32, 3, 1)
    #define   SET32MadiReg_Angle_AngConfUser(r32,v)            _BFSET_(r32, 3, 1,v)
    #define   GET16MadiReg_Angle_AngConfUser(r16)              _BFGET_(r16, 3, 1)
    #define   SET16MadiReg_Angle_AngConfUser(r16,v)            _BFSET_(r16, 3, 1,v)

    #define   GET32MadiReg_Angle_AngCnstEn(r32)                _BFGET_(r32, 4, 4)
    #define   SET32MadiReg_Angle_AngCnstEn(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16MadiReg_Angle_AngCnstEn(r16)                _BFGET_(r16, 4, 4)
    #define   SET16MadiReg_Angle_AngCnstEn(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32MadiReg_Angle_AngCnstUser(r32)              _BFGET_(r32, 6, 5)
    #define   SET32MadiReg_Angle_AngCnstUser(r32,v)            _BFSET_(r32, 6, 5,v)
    #define   GET16MadiReg_Angle_AngCnstUser(r16)              _BFGET_(r16, 6, 5)
    #define   SET16MadiReg_Angle_AngCnstUser(r16,v)            _BFSET_(r16, 6, 5,v)

    #define   GET32MadiReg_Angle_AngEdgeEn(r32)                _BFGET_(r32, 7, 7)
    #define   SET32MadiReg_Angle_AngEdgeEn(r32,v)              _BFSET_(r32, 7, 7,v)
    #define   GET16MadiReg_Angle_AngEdgeEn(r16)                _BFGET_(r16, 7, 7)
    #define   SET16MadiReg_Angle_AngEdgeEn(r16,v)              _BFSET_(r16, 7, 7,v)

    #define   GET32MadiReg_Angle_AngEdgeUser(r32)              _BFGET_(r32,10, 8)
    #define   SET32MadiReg_Angle_AngEdgeUser(r32,v)            _BFSET_(r32,10, 8,v)
    #define   GET16MadiReg_Angle_AngEdgeUser(r16)              _BFGET_(r16,10, 8)
    #define   SET16MadiReg_Angle_AngEdgeUser(r16,v)            _BFSET_(r16,10, 8,v)

    #define   GET32MadiReg_Angle_AngleEn(r32)                  _BFGET_(r32,11,11)
    #define   SET32MadiReg_Angle_AngleEn(r32,v)                _BFSET_(r32,11,11,v)
    #define   GET16MadiReg_Angle_AngleEn(r16)                  _BFGET_(r16,11,11)
    #define   SET16MadiReg_Angle_AngleEn(r16,v)                _BFSET_(r16,11,11,v)

    #define   GET32MadiReg_Angle_AngleUser(r32)                _BFGET_(r32,15,12)
    #define   SET32MadiReg_Angle_AngleUser(r32,v)              _BFSET_(r32,15,12,v)
    #define   GET16MadiReg_Angle_AngleUser(r16)                _BFGET_(r16,15,12)
    #define   SET16MadiReg_Angle_AngleUser(r16,v)              _BFSET_(r16,15,12,v)

    #define     w32MadiReg_Angle                               {\
            UNSG32 uAngle_AngConfEn                            :  1;\
            UNSG32 uAngle_AngConfUser                          :  3;\
            UNSG32 uAngle_AngCnstEn                            :  1;\
            UNSG32 uAngle_AngCnstUser                          :  2;\
            UNSG32 uAngle_AngEdgeEn                            :  1;\
            UNSG32 uAngle_AngEdgeUser                          :  3;\
            UNSG32 uAngle_AngleEn                              :  1;\
            UNSG32 uAngle_AngleUser                            :  4;\
            UNSG32 RSVDx64_b16                                 : 16;\
          }
    union { UNSG32 u32MadiReg_Angle;
            struct w32MadiReg_Angle;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MotDet_LAMDEn(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_MotDet_LAMDEn(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_MotDet_LAMDEn(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_MotDet_LAMDEn(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_MotDet_LAMDUser(r32)                _BFGET_(r32, 2, 1)
    #define   SET32MadiReg_MotDet_LAMDUser(r32,v)              _BFSET_(r32, 2, 1,v)
    #define   GET16MadiReg_MotDet_LAMDUser(r16)                _BFGET_(r16, 2, 1)
    #define   SET16MadiReg_MotDet_LAMDUser(r16,v)              _BFSET_(r16, 2, 1,v)

    #define   GET32MadiReg_MotDet_LASDEn(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32MadiReg_MotDet_LASDEn(r32,v)                _BFSET_(r32, 3, 3,v)
    #define   GET16MadiReg_MotDet_LASDEn(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16MadiReg_MotDet_LASDEn(r16,v)                _BFSET_(r16, 3, 3,v)

    #define   GET32MadiReg_MotDet_LASDUser(r32)                _BFGET_(r32, 4, 4)
    #define   SET32MadiReg_MotDet_LASDUser(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16MadiReg_MotDet_LASDUser(r16)                _BFGET_(r16, 4, 4)
    #define   SET16MadiReg_MotDet_LASDUser(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32MadiReg_MotDet_LASDSel(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32MadiReg_MotDet_LASDSel(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16MadiReg_MotDet_LASDSel(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16MadiReg_MotDet_LASDSel(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32MadiReg_MotDet_SOSDEn(r32)                  _BFGET_(r32, 6, 6)
    #define   SET32MadiReg_MotDet_SOSDEn(r32,v)                _BFSET_(r32, 6, 6,v)
    #define   GET16MadiReg_MotDet_SOSDEn(r16)                  _BFGET_(r16, 6, 6)
    #define   SET16MadiReg_MotDet_SOSDEn(r16,v)                _BFSET_(r16, 6, 6,v)

    #define   GET32MadiReg_MotDet_SOSDUser(r32)                _BFGET_(r32, 7, 7)
    #define   SET32MadiReg_MotDet_SOSDUser(r32,v)              _BFSET_(r32, 7, 7,v)
    #define   GET16MadiReg_MotDet_SOSDUser(r16)                _BFGET_(r16, 7, 7)
    #define   SET16MadiReg_MotDet_SOSDUser(r16,v)              _BFSET_(r16, 7, 7,v)

    #define   GET32MadiReg_MotDet_SOSDSel(r32)                 _BFGET_(r32, 8, 8)
    #define   SET32MadiReg_MotDet_SOSDSel(r32,v)               _BFSET_(r32, 8, 8,v)
    #define   GET16MadiReg_MotDet_SOSDSel(r16)                 _BFGET_(r16, 8, 8)
    #define   SET16MadiReg_MotDet_SOSDSel(r16,v)               _BFSET_(r16, 8, 8,v)

    #define   GET32MadiReg_MotDet_MDVEn(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32MadiReg_MotDet_MDVEn(r32,v)                 _BFSET_(r32, 9, 9,v)
    #define   GET16MadiReg_MotDet_MDVEn(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16MadiReg_MotDet_MDVEn(r16,v)                 _BFSET_(r16, 9, 9,v)

    #define   GET32MadiReg_MotDet_MDVUser_0(r32)               _BFGET_(r32,12,10)
    #define   SET32MadiReg_MotDet_MDVUser_0(r32,v)             _BFSET_(r32,12,10,v)
    #define   GET16MadiReg_MotDet_MDVUser_0(r16)               _BFGET_(r16,12,10)
    #define   SET16MadiReg_MotDet_MDVUser_0(r16,v)             _BFSET_(r16,12,10,v)

    #define   GET32MadiReg_MotDet_MDVUser_1(r32)               _BFGET_(r32,15,13)
    #define   SET32MadiReg_MotDet_MDVUser_1(r32,v)             _BFSET_(r32,15,13,v)
    #define   GET16MadiReg_MotDet_MDVUser_1(r16)               _BFGET_(r16,15,13)
    #define   SET16MadiReg_MotDet_MDVUser_1(r16,v)             _BFSET_(r16,15,13,v)

    #define   GET32MadiReg_MotDet_HVLineEn(r32)                _BFGET_(r32,16,16)
    #define   SET32MadiReg_MotDet_HVLineEn(r32,v)              _BFSET_(r32,16,16,v)
    #define   GET16MadiReg_MotDet_HVLineEn(r16)                _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_MotDet_HVLineEn(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_MotDet_HVLineUser(r32)              _BFGET_(r32,18,17)
    #define   SET32MadiReg_MotDet_HVLineUser(r32,v)            _BFSET_(r32,18,17,v)
    #define   GET16MadiReg_MotDet_HVLineUser(r16)              _BFGET_(r16, 2, 1)
    #define   SET16MadiReg_MotDet_HVLineUser(r16,v)            _BFSET_(r16, 2, 1,v)

    #define     w32MadiReg_MotDet                              {\
            UNSG32 uMotDet_LAMDEn                              :  1;\
            UNSG32 uMotDet_LAMDUser                            :  2;\
            UNSG32 uMotDet_LASDEn                              :  1;\
            UNSG32 uMotDet_LASDUser                            :  1;\
            UNSG32 uMotDet_LASDSel                             :  1;\
            UNSG32 uMotDet_SOSDEn                              :  1;\
            UNSG32 uMotDet_SOSDUser                            :  1;\
            UNSG32 uMotDet_SOSDSel                             :  1;\
            UNSG32 uMotDet_MDVEn                               :  1;\
            UNSG32 uMotDet_MDVUser_0                           :  3;\
            UNSG32 uMotDet_MDVUser_1                           :  3;\
            UNSG32 uMotDet_HVLineEn                            :  1;\
            UNSG32 uMotDet_HVLineUser                          :  2;\
            UNSG32 RSVDx68_b19                                 : 13;\
          }
    union { UNSG32 u32MadiReg_MotDet;
            struct w32MadiReg_MotDet;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_HVLine_HVLineGain_0(r32)            _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_HVLine_HVLineGain_0(r32,v)          _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_HVLine_HVLineGain_0(r16)            _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_HVLine_HVLineGain_0(r16,v)          _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_HVLine_HVLineGain_1(r32)            _BFGET_(r32,15, 8)
    #define   SET32MadiReg_HVLine_HVLineGain_1(r32,v)          _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_HVLine_HVLineGain_1(r16)            _BFGET_(r16,15, 8)
    #define   SET16MadiReg_HVLine_HVLineGain_1(r16,v)          _BFSET_(r16,15, 8,v)

    #define   GET32MadiReg_HVLine_HVLineThr_0(r32)             _BFGET_(r32,23,16)
    #define   SET32MadiReg_HVLine_HVLineThr_0(r32,v)           _BFSET_(r32,23,16,v)
    #define   GET16MadiReg_HVLine_HVLineThr_0(r16)             _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_HVLine_HVLineThr_0(r16,v)           _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_HVLine_HVLineThr_1(r32)             _BFGET_(r32,31,24)
    #define   SET32MadiReg_HVLine_HVLineThr_1(r32,v)           _BFSET_(r32,31,24,v)
    #define   GET16MadiReg_HVLine_HVLineThr_1(r16)             _BFGET_(r16,15, 8)
    #define   SET16MadiReg_HVLine_HVLineThr_1(r16,v)           _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_HVLine                              {\
            UNSG32 uHVLine_HVLineGain_0                        :  8;\
            UNSG32 uHVLine_HVLineGain_1                        :  8;\
            UNSG32 uHVLine_HVLineThr_0                         :  8;\
            UNSG32 uHVLine_HVLineThr_1                         :  8;\
          }
    union { UNSG32 u32MadiReg_HVLine;
            struct w32MadiReg_HVLine;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvYiir_MdvYiirGain_0(r32)          _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_MdvYiir_MdvYiirGain_0(r32,v)        _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_MdvYiir_MdvYiirGain_0(r16)          _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_MdvYiir_MdvYiirGain_0(r16,v)        _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_MdvYiir_MdvYiirGain_1(r32)          _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_MdvYiir_MdvYiirGain_1(r32,v)        _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_MdvYiir_MdvYiirGain_1(r16)          _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_MdvYiir_MdvYiirGain_1(r16,v)        _BFSET_(r16, 9, 5,v)

    #define   GET32MadiReg_MdvYiir_MdvYiirClamp(r32)           _BFGET_(r32,17,10)
    #define   SET32MadiReg_MdvYiir_MdvYiirClamp(r32,v)         _BFSET_(r32,17,10,v)

    #define   GET32MadiReg_MdvYiir_MdvYiirEn(r32)              _BFGET_(r32,18,18)
    #define   SET32MadiReg_MdvYiir_MdvYiirEn(r32,v)            _BFSET_(r32,18,18,v)
    #define   GET16MadiReg_MdvYiir_MdvYiirEn(r16)              _BFGET_(r16, 2, 2)
    #define   SET16MadiReg_MdvYiir_MdvYiirEn(r16,v)            _BFSET_(r16, 2, 2,v)

    #define     w32MadiReg_MdvYiir                             {\
            UNSG32 uMdvYiir_MdvYiirGain_0                      :  5;\
            UNSG32 uMdvYiir_MdvYiirGain_1                      :  5;\
            UNSG32 uMdvYiir_MdvYiirClamp                       :  8;\
            UNSG32 uMdvYiir_MdvYiirEn                          :  1;\
            UNSG32 RSVDx70_b19                                 : 13;\
          }
    union { UNSG32 u32MadiReg_MdvYiir;
            struct w32MadiReg_MdvYiir;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_C420A_EThr(r32)                     _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_C420A_EThr(r32,v)                   _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_C420A_EThr(r16)                     _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_C420A_EThr(r16,v)                   _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_C420A_C420StNum(r32)                _BFGET_(r32,11, 8)
    #define   SET32MadiReg_C420A_C420StNum(r32,v)              _BFSET_(r32,11, 8,v)
    #define   GET16MadiReg_C420A_C420StNum(r16)                _BFGET_(r16,11, 8)
    #define   SET16MadiReg_C420A_C420StNum(r16,v)              _BFSET_(r16,11, 8,v)

    #define   GET32MadiReg_C420A_C420AccShiftBits(r32)         _BFGET_(r32,15,12)
    #define   SET32MadiReg_C420A_C420AccShiftBits(r32,v)       _BFSET_(r32,15,12,v)
    #define   GET16MadiReg_C420A_C420AccShiftBits(r16)         _BFGET_(r16,15,12)
    #define   SET16MadiReg_C420A_C420AccShiftBits(r16,v)       _BFSET_(r16,15,12,v)

    #define     w32MadiReg_C420A                               {\
            UNSG32 uC420A_EThr                                 :  8;\
            UNSG32 uC420A_C420StNum                            :  4;\
            UNSG32 uC420A_C420AccShiftBits                     :  4;\
            UNSG32 RSVDx74_b16                                 : 16;\
          }
    union { UNSG32 u32MadiReg_C420A;
            struct w32MadiReg_C420A;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_C420B_MThr_0(r32)                   _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_C420B_MThr_0(r32,v)                 _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_C420B_MThr_0(r16)                   _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_C420B_MThr_0(r16,v)                 _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_C420B_MThr_1(r32)                   _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_C420B_MThr_1(r32,v)                 _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_C420B_MThr_1(r16)                   _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_C420B_MThr_1(r16,v)                 _BFSET_(r16, 9, 5,v)

    #define   GET32MadiReg_C420B_MThr_2(r32)                   _BFGET_(r32,14,10)
    #define   SET32MadiReg_C420B_MThr_2(r32,v)                 _BFSET_(r32,14,10,v)
    #define   GET16MadiReg_C420B_MThr_2(r16)                   _BFGET_(r16,14,10)
    #define   SET16MadiReg_C420B_MThr_2(r16,v)                 _BFSET_(r16,14,10,v)

    #define   GET32MadiReg_C420B_MdvThr(r32)                   _BFGET_(r32,19,15)
    #define   SET32MadiReg_C420B_MdvThr(r32,v)                 _BFSET_(r32,19,15,v)

    #define     w32MadiReg_C420B                               {\
            UNSG32 uC420B_MThr_0                               :  5;\
            UNSG32 uC420B_MThr_1                               :  5;\
            UNSG32 uC420B_MThr_2                               :  5;\
            UNSG32 uC420B_MdvThr                               :  5;\
            UNSG32 RSVDx78_b20                                 : 12;\
          }
    union { UNSG32 u32MadiReg_C420B;
            struct w32MadiReg_C420B;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvFilterSel_MdvFilterSel_0(r32)    _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_MdvFilterSel_MdvFilterSel_0(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_MdvFilterSel_MdvFilterSel_0(r16)    _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_MdvFilterSel_MdvFilterSel_0(r16,v)  _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_MdvFilterSel_MdvFilterSel_1(r32)    _BFGET_(r32, 1, 1)
    #define   SET32MadiReg_MdvFilterSel_MdvFilterSel_1(r32,v)  _BFSET_(r32, 1, 1,v)
    #define   GET16MadiReg_MdvFilterSel_MdvFilterSel_1(r16)    _BFGET_(r16, 1, 1)
    #define   SET16MadiReg_MdvFilterSel_MdvFilterSel_1(r16,v)  _BFSET_(r16, 1, 1,v)

    #define     w32MadiReg_MdvFilterSel                        {\
            UNSG32 uMdvFilterSel_MdvFilterSel_0                :  1;\
            UNSG32 uMdvFilterSel_MdvFilterSel_1                :  1;\
            UNSG32 RSVDx7C_b2                                  : 30;\
          }
    union { UNSG32 u32MadiReg_MdvFilterSel;
            struct w32MadiReg_MdvFilterSel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_LcnstGain_LcnstGain_0(r32)          _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_LcnstGain_LcnstGain_0(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_LcnstGain_LcnstGain_0(r16)          _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_LcnstGain_LcnstGain_0(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_LcnstGain_LcnstGain_1(r32)          _BFGET_(r32,15, 8)
    #define   SET32MadiReg_LcnstGain_LcnstGain_1(r32,v)        _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_LcnstGain_LcnstGain_1(r16)          _BFGET_(r16,15, 8)
    #define   SET16MadiReg_LcnstGain_LcnstGain_1(r16,v)        _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_LcnstGain                           {\
            UNSG32 uLcnstGain_LcnstGain_0                      :  8;\
            UNSG32 uLcnstGain_LcnstGain_1                      :  8;\
            UNSG32 RSVDx80_b16                                 : 16;\
          }
    union { UNSG32 u32MadiReg_LcnstGain;
            struct w32MadiReg_LcnstGain;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_YUVBlendGain_YUVBlendGain_0(r32)    _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_YUVBlendGain_YUVBlendGain_0(r32,v)  _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_YUVBlendGain_YUVBlendGain_0(r16)    _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_YUVBlendGain_YUVBlendGain_0(r16,v)  _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_YUVBlendGain_YUVBlendGain_1(r32)    _BFGET_(r32,15, 8)
    #define   SET32MadiReg_YUVBlendGain_YUVBlendGain_1(r32,v)  _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_YUVBlendGain_YUVBlendGain_1(r16)    _BFGET_(r16,15, 8)
    #define   SET16MadiReg_YUVBlendGain_YUVBlendGain_1(r16,v)  _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_YUVBlendGain                        {\
            UNSG32 uYUVBlendGain_YUVBlendGain_0                :  8;\
            UNSG32 uYUVBlendGain_YUVBlendGain_1                :  8;\
            UNSG32 RSVDx84_b16                                 : 16;\
          }
    union { UNSG32 u32MadiReg_YUVBlendGain;
            struct w32MadiReg_YUVBlendGain;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0(r32) _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0(r32,v) _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0(r16) _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_0(r16,v) _BFSET_(r16, 8, 0,v)

    #define   GET32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1(r32) _BFGET_(r32,17, 9)
    #define   SET32MadiReg_YUVMdvBlendGain_YUVMdvBlendGain_1(r32,v) _BFSET_(r32,17, 9,v)

    #define     w32MadiReg_YUVMdvBlendGain                     {\
            UNSG32 uYUVMdvBlendGain_YUVMdvBlendGain_0          :  9;\
            UNSG32 uYUVMdvBlendGain_YUVMdvBlendGain_1          :  9;\
            UNSG32 RSVDx88_b18                                 : 14;\
          }
    union { UNSG32 u32MadiReg_YUVMdvBlendGain;
            struct w32MadiReg_YUVMdvBlendGain;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_YMdvGain_YMdvGain_0(r32)            _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_YMdvGain_YMdvGain_0(r32,v)          _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_YMdvGain_YMdvGain_0(r16)            _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_YMdvGain_YMdvGain_0(r16,v)          _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_YMdvGain_YMdvGain_1(r32)            _BFGET_(r32,15, 8)
    #define   SET32MadiReg_YMdvGain_YMdvGain_1(r32,v)          _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_YMdvGain_YMdvGain_1(r16)            _BFGET_(r16,15, 8)
    #define   SET16MadiReg_YMdvGain_YMdvGain_1(r16,v)          _BFSET_(r16,15, 8,v)

    #define   GET32MadiReg_YMdvGain_YMdvGain_2(r32)            _BFGET_(r32,23,16)
    #define   SET32MadiReg_YMdvGain_YMdvGain_2(r32,v)          _BFSET_(r32,23,16,v)
    #define   GET16MadiReg_YMdvGain_YMdvGain_2(r16)            _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_YMdvGain_YMdvGain_2(r16,v)          _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_YMdvGain_YMdvGain_3(r32)            _BFGET_(r32,31,24)
    #define   SET32MadiReg_YMdvGain_YMdvGain_3(r32,v)          _BFSET_(r32,31,24,v)
    #define   GET16MadiReg_YMdvGain_YMdvGain_3(r16)            _BFGET_(r16,15, 8)
    #define   SET16MadiReg_YMdvGain_YMdvGain_3(r16,v)          _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_YMdvGain                            {\
            UNSG32 uYMdvGain_YMdvGain_0                        :  8;\
            UNSG32 uYMdvGain_YMdvGain_1                        :  8;\
            UNSG32 uYMdvGain_YMdvGain_2                        :  8;\
            UNSG32 uYMdvGain_YMdvGain_3                        :  8;\
          }
    union { UNSG32 u32MadiReg_YMdvGain;
            struct w32MadiReg_YMdvGain;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_YMdvGain1_YMdvGain_4(r32)           _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_YMdvGain1_YMdvGain_4(r32,v)         _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_YMdvGain1_YMdvGain_4(r16)           _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_YMdvGain1_YMdvGain_4(r16,v)         _BFSET_(r16, 7, 0,v)

    #define     w32MadiReg_YMdvGain1                           {\
            UNSG32 uYMdvGain1_YMdvGain_4                       :  8;\
            UNSG32 RSVDx90_b8                                  : 24;\
          }
    union { UNSG32 u32MadiReg_YMdvGain1;
            struct w32MadiReg_YMdvGain1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_YMdvOffset_YMdvOffset_0(r32)        _BFGET_(r32, 5, 0)
    #define   SET32MadiReg_YMdvOffset_YMdvOffset_0(r32,v)      _BFSET_(r32, 5, 0,v)
    #define   GET16MadiReg_YMdvOffset_YMdvOffset_0(r16)        _BFGET_(r16, 5, 0)
    #define   SET16MadiReg_YMdvOffset_YMdvOffset_0(r16,v)      _BFSET_(r16, 5, 0,v)

    #define     w32MadiReg_YMdvOffset                          {\
            UNSG32 uYMdvOffset_YMdvOffset_0                    :  6;\
            UNSG32 RSVDx94_b6                                  : 26;\
          }
    union { UNSG32 u32MadiReg_YMdvOffset;
            struct w32MadiReg_YMdvOffset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_UVMdvGain_UVMdvGain(r32)            _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_UVMdvGain_UVMdvGain(r32,v)          _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_UVMdvGain_UVMdvGain(r16)            _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_UVMdvGain_UVMdvGain(r16,v)          _BFSET_(r16, 7, 0,v)

    #define     w32MadiReg_UVMdvGain                           {\
            UNSG32 uUVMdvGain_UVMdvGain                        :  8;\
            UNSG32 RSVDx98_b8                                  : 24;\
          }
    union { UNSG32 u32MadiReg_UVMdvGain;
            struct w32MadiReg_UVMdvGain;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Impulse_ImpulseEn(r32)              _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_Impulse_ImpulseEn(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_Impulse_ImpulseEn(r16)              _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_Impulse_ImpulseEn(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_Impulse_ImpulseThr(r32)             _BFGET_(r32, 8, 1)
    #define   SET32MadiReg_Impulse_ImpulseThr(r32,v)           _BFSET_(r32, 8, 1,v)
    #define   GET16MadiReg_Impulse_ImpulseThr(r16)             _BFGET_(r16, 8, 1)
    #define   SET16MadiReg_Impulse_ImpulseThr(r16,v)           _BFSET_(r16, 8, 1,v)

    #define     w32MadiReg_Impulse                             {\
            UNSG32 uImpulse_ImpulseEn                          :  1;\
            UNSG32 uImpulse_ImpulseThr                         :  8;\
            UNSG32 RSVDx9C_b9                                  : 23;\
          }
    union { UNSG32 u32MadiReg_Impulse;
            struct w32MadiReg_Impulse;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_Nr_YNr(r32)                         _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_Nr_YNr(r32,v)                       _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_Nr_YNr(r16)                         _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_Nr_YNr(r16,v)                       _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_Nr_UVNr(r32)                        _BFGET_(r32, 1, 1)
    #define   SET32MadiReg_Nr_UVNr(r32,v)                      _BFSET_(r32, 1, 1,v)
    #define   GET16MadiReg_Nr_UVNr(r16)                        _BFGET_(r16, 1, 1)
    #define   SET16MadiReg_Nr_UVNr(r16,v)                      _BFSET_(r16, 1, 1,v)

    #define     w32MadiReg_Nr                                  {\
            UNSG32 uNr_YNr                                     :  1;\
            UNSG32 uNr_UVNr                                    :  1;\
            UNSG32 RSVDxA0_b2                                  : 30;\
          }
    union { UNSG32 u32MadiReg_Nr;
            struct w32MadiReg_Nr;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvLcnst0_MdvLcnstGain_0(r32)       _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_MdvLcnst0_MdvLcnstGain_0(r32,v)     _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_MdvLcnst0_MdvLcnstGain_0(r16)       _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_MdvLcnst0_MdvLcnstGain_0(r16,v)     _BFSET_(r16, 8, 0,v)

    #define   GET32MadiReg_MdvLcnst0_MdvLcnstGain_1(r32)       _BFGET_(r32,17, 9)
    #define   SET32MadiReg_MdvLcnst0_MdvLcnstGain_1(r32,v)     _BFSET_(r32,17, 9,v)

    #define     w32MadiReg_MdvLcnst0                           {\
            UNSG32 uMdvLcnst0_MdvLcnstGain_0                   :  9;\
            UNSG32 uMdvLcnst0_MdvLcnstGain_1                   :  9;\
            UNSG32 RSVDxA4_b18                                 : 14;\
          }
    union { UNSG32 u32MadiReg_MdvLcnst0;
            struct w32MadiReg_MdvLcnst0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvLcnst1_MdvLcnstGain_2(r32)       _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_MdvLcnst1_MdvLcnstGain_2(r32,v)     _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_MdvLcnst1_MdvLcnstGain_2(r16)       _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_MdvLcnst1_MdvLcnstGain_2(r16,v)     _BFSET_(r16, 8, 0,v)

    #define   GET32MadiReg_MdvLcnst1_MdvLcnstGain_3(r32)       _BFGET_(r32,17, 9)
    #define   SET32MadiReg_MdvLcnst1_MdvLcnstGain_3(r32,v)     _BFSET_(r32,17, 9,v)

    #define     w32MadiReg_MdvLcnst1                           {\
            UNSG32 uMdvLcnst1_MdvLcnstGain_2                   :  9;\
            UNSG32 uMdvLcnst1_MdvLcnstGain_3                   :  9;\
            UNSG32 RSVDxA8_b18                                 : 14;\
          }
    union { UNSG32 u32MadiReg_MdvLcnst1;
            struct w32MadiReg_MdvLcnst1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvLcnst2_MdvLcnstValue_0(r32)      _BFGET_(r32, 4, 0)
    #define   SET32MadiReg_MdvLcnst2_MdvLcnstValue_0(r32,v)    _BFSET_(r32, 4, 0,v)
    #define   GET16MadiReg_MdvLcnst2_MdvLcnstValue_0(r16)      _BFGET_(r16, 4, 0)
    #define   SET16MadiReg_MdvLcnst2_MdvLcnstValue_0(r16,v)    _BFSET_(r16, 4, 0,v)

    #define   GET32MadiReg_MdvLcnst2_MdvLcnstValue_1(r32)      _BFGET_(r32, 9, 5)
    #define   SET32MadiReg_MdvLcnst2_MdvLcnstValue_1(r32,v)    _BFSET_(r32, 9, 5,v)
    #define   GET16MadiReg_MdvLcnst2_MdvLcnstValue_1(r16)      _BFGET_(r16, 9, 5)
    #define   SET16MadiReg_MdvLcnst2_MdvLcnstValue_1(r16,v)    _BFSET_(r16, 9, 5,v)

    #define   GET32MadiReg_MdvLcnst2_MdvLcnstValue_2(r32)      _BFGET_(r32,14,10)
    #define   SET32MadiReg_MdvLcnst2_MdvLcnstValue_2(r32,v)    _BFSET_(r32,14,10,v)
    #define   GET16MadiReg_MdvLcnst2_MdvLcnstValue_2(r16)      _BFGET_(r16,14,10)
    #define   SET16MadiReg_MdvLcnst2_MdvLcnstValue_2(r16,v)    _BFSET_(r16,14,10,v)

    #define   GET32MadiReg_MdvLcnst2_MdvLcnstValue_3(r32)      _BFGET_(r32,19,15)
    #define   SET32MadiReg_MdvLcnst2_MdvLcnstValue_3(r32,v)    _BFSET_(r32,19,15,v)

    #define     w32MadiReg_MdvLcnst2                           {\
            UNSG32 uMdvLcnst2_MdvLcnstValue_0                  :  5;\
            UNSG32 uMdvLcnst2_MdvLcnstValue_1                  :  5;\
            UNSG32 uMdvLcnst2_MdvLcnstValue_2                  :  5;\
            UNSG32 uMdvLcnst2_MdvLcnstValue_3                  :  5;\
            UNSG32 RSVDxAC_b20                                 : 12;\
          }
    union { UNSG32 u32MadiReg_MdvLcnst2;
            struct w32MadiReg_MdvLcnst2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvLcnst3_MdvLcnstEnhSel_0(r32)     _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_MdvLcnst3_MdvLcnstEnhSel_0(r32,v)   _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_MdvLcnst3_MdvLcnstEnhSel_0(r16)     _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_MdvLcnst3_MdvLcnstEnhSel_0(r16,v)   _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_MdvLcnst3_MdvLcnstEnhSel_1(r32)     _BFGET_(r32, 1, 1)
    #define   SET32MadiReg_MdvLcnst3_MdvLcnstEnhSel_1(r32,v)   _BFSET_(r32, 1, 1,v)
    #define   GET16MadiReg_MdvLcnst3_MdvLcnstEnhSel_1(r16)     _BFGET_(r16, 1, 1)
    #define   SET16MadiReg_MdvLcnst3_MdvLcnstEnhSel_1(r16,v)   _BFSET_(r16, 1, 1,v)

    #define   GET32MadiReg_MdvLcnst3_MdvLcnstEnhSel_2(r32)     _BFGET_(r32, 2, 2)
    #define   SET32MadiReg_MdvLcnst3_MdvLcnstEnhSel_2(r32,v)   _BFSET_(r32, 2, 2,v)
    #define   GET16MadiReg_MdvLcnst3_MdvLcnstEnhSel_2(r16)     _BFGET_(r16, 2, 2)
    #define   SET16MadiReg_MdvLcnst3_MdvLcnstEnhSel_2(r16,v)   _BFSET_(r16, 2, 2,v)

    #define     w32MadiReg_MdvLcnst3                           {\
            UNSG32 uMdvLcnst3_MdvLcnstEnhSel_0                 :  1;\
            UNSG32 uMdvLcnst3_MdvLcnstEnhSel_1                 :  1;\
            UNSG32 uMdvLcnst3_MdvLcnstEnhSel_2                 :  1;\
            UNSG32 RSVDxB0_b3                                  : 29;\
          }
    union { UNSG32 u32MadiReg_MdvLcnst3;
            struct w32MadiReg_MdvLcnst3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_VTFCoef0_VTFCoef_0(r32)             _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_VTFCoef0_VTFCoef_0(r32,v)           _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_VTFCoef0_VTFCoef_0(r16)             _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_VTFCoef0_VTFCoef_0(r16,v)           _BFSET_(r16, 8, 0,v)

    #define   GET32MadiReg_VTFCoef0_VTFCoef_1(r32)             _BFGET_(r32,17, 9)
    #define   SET32MadiReg_VTFCoef0_VTFCoef_1(r32,v)           _BFSET_(r32,17, 9,v)

    #define   GET32MadiReg_VTFCoef0_VTFCoef_2(r32)             _BFGET_(r32,26,18)
    #define   SET32MadiReg_VTFCoef0_VTFCoef_2(r32,v)           _BFSET_(r32,26,18,v)
    #define   GET16MadiReg_VTFCoef0_VTFCoef_2(r16)             _BFGET_(r16,10, 2)
    #define   SET16MadiReg_VTFCoef0_VTFCoef_2(r16,v)           _BFSET_(r16,10, 2,v)

    #define     w32MadiReg_VTFCoef0                            {\
            UNSG32 sVTFCoef0_VTFCoef_0                         :  9;\
            UNSG32 sVTFCoef0_VTFCoef_1                         :  9;\
            UNSG32 sVTFCoef0_VTFCoef_2                         :  9;\
            UNSG32 RSVDxB4_b27                                 :  5;\
          }
    union { UNSG32 u32MadiReg_VTFCoef0;
            struct w32MadiReg_VTFCoef0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_VTFCoef1_VTFCoef_3(r32)             _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_VTFCoef1_VTFCoef_3(r32,v)           _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_VTFCoef1_VTFCoef_3(r16)             _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_VTFCoef1_VTFCoef_3(r16,v)           _BFSET_(r16, 8, 0,v)

    #define   GET32MadiReg_VTFCoef1_VTFCoef_4(r32)             _BFGET_(r32,17, 9)
    #define   SET32MadiReg_VTFCoef1_VTFCoef_4(r32,v)           _BFSET_(r32,17, 9,v)

    #define   GET32MadiReg_VTFCoef1_VTFCoef_5(r32)             _BFGET_(r32,26,18)
    #define   SET32MadiReg_VTFCoef1_VTFCoef_5(r32,v)           _BFSET_(r32,26,18,v)
    #define   GET16MadiReg_VTFCoef1_VTFCoef_5(r16)             _BFGET_(r16,10, 2)
    #define   SET16MadiReg_VTFCoef1_VTFCoef_5(r16,v)           _BFSET_(r16,10, 2,v)

    #define     w32MadiReg_VTFCoef1                            {\
            UNSG32 sVTFCoef1_VTFCoef_3                         :  9;\
            UNSG32 sVTFCoef1_VTFCoef_4                         :  9;\
            UNSG32 sVTFCoef1_VTFCoef_5                         :  9;\
            UNSG32 RSVDxB8_b27                                 :  5;\
          }
    union { UNSG32 u32MadiReg_VTFCoef1;
            struct w32MadiReg_VTFCoef1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_VTFCoef2_VTFCoef_6(r32)             _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_VTFCoef2_VTFCoef_6(r32,v)           _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_VTFCoef2_VTFCoef_6(r16)             _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_VTFCoef2_VTFCoef_6(r16,v)           _BFSET_(r16, 8, 0,v)

    #define     w32MadiReg_VTFCoef2                            {\
            UNSG32 sVTFCoef2_VTFCoef_6                         :  9;\
            UNSG32 RSVDxBC_b9                                  : 23;\
          }
    union { UNSG32 u32MadiReg_VTFCoef2;
            struct w32MadiReg_VTFCoef2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_C420VTFCoef0_C420VTFCoef_0(r32)     _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_C420VTFCoef0_C420VTFCoef_0(r32,v)   _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_C420VTFCoef0_C420VTFCoef_0(r16)     _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_C420VTFCoef0_C420VTFCoef_0(r16,v)   _BFSET_(r16, 8, 0,v)

    #define   GET32MadiReg_C420VTFCoef0_C420VTFCoef_1(r32)     _BFGET_(r32,17, 9)
    #define   SET32MadiReg_C420VTFCoef0_C420VTFCoef_1(r32,v)   _BFSET_(r32,17, 9,v)

    #define   GET32MadiReg_C420VTFCoef0_C420VTFCoef_2(r32)     _BFGET_(r32,26,18)
    #define   SET32MadiReg_C420VTFCoef0_C420VTFCoef_2(r32,v)   _BFSET_(r32,26,18,v)
    #define   GET16MadiReg_C420VTFCoef0_C420VTFCoef_2(r16)     _BFGET_(r16,10, 2)
    #define   SET16MadiReg_C420VTFCoef0_C420VTFCoef_2(r16,v)   _BFSET_(r16,10, 2,v)

    #define     w32MadiReg_C420VTFCoef0                        {\
            UNSG32 sC420VTFCoef0_C420VTFCoef_0                 :  9;\
            UNSG32 sC420VTFCoef0_C420VTFCoef_1                 :  9;\
            UNSG32 sC420VTFCoef0_C420VTFCoef_2                 :  9;\
            UNSG32 RSVDxC0_b27                                 :  5;\
          }
    union { UNSG32 u32MadiReg_C420VTFCoef0;
            struct w32MadiReg_C420VTFCoef0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_C420VTFCoef1_C420VTFCoef_3(r32)     _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_C420VTFCoef1_C420VTFCoef_3(r32,v)   _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_C420VTFCoef1_C420VTFCoef_3(r16)     _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_C420VTFCoef1_C420VTFCoef_3(r16,v)   _BFSET_(r16, 8, 0,v)

    #define   GET32MadiReg_C420VTFCoef1_C420VTFCoef_4(r32)     _BFGET_(r32,17, 9)
    #define   SET32MadiReg_C420VTFCoef1_C420VTFCoef_4(r32,v)   _BFSET_(r32,17, 9,v)

    #define   GET32MadiReg_C420VTFCoef1_C420VTFCoef_5(r32)     _BFGET_(r32,26,18)
    #define   SET32MadiReg_C420VTFCoef1_C420VTFCoef_5(r32,v)   _BFSET_(r32,26,18,v)
    #define   GET16MadiReg_C420VTFCoef1_C420VTFCoef_5(r16)     _BFGET_(r16,10, 2)
    #define   SET16MadiReg_C420VTFCoef1_C420VTFCoef_5(r16,v)   _BFSET_(r16,10, 2,v)

    #define     w32MadiReg_C420VTFCoef1                        {\
            UNSG32 sC420VTFCoef1_C420VTFCoef_3                 :  9;\
            UNSG32 sC420VTFCoef1_C420VTFCoef_4                 :  9;\
            UNSG32 sC420VTFCoef1_C420VTFCoef_5                 :  9;\
            UNSG32 RSVDxC4_b27                                 :  5;\
          }
    union { UNSG32 u32MadiReg_C420VTFCoef1;
            struct w32MadiReg_C420VTFCoef1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_C420VTFCoef2_C420VTFCoef_6(r32)     _BFGET_(r32, 8, 0)
    #define   SET32MadiReg_C420VTFCoef2_C420VTFCoef_6(r32,v)   _BFSET_(r32, 8, 0,v)
    #define   GET16MadiReg_C420VTFCoef2_C420VTFCoef_6(r16)     _BFGET_(r16, 8, 0)
    #define   SET16MadiReg_C420VTFCoef2_C420VTFCoef_6(r16,v)   _BFSET_(r16, 8, 0,v)

    #define     w32MadiReg_C420VTFCoef2                        {\
            UNSG32 sC420VTFCoef2_C420VTFCoef_6                 :  9;\
            UNSG32 RSVDxC8_b9                                  : 23;\
          }
    union { UNSG32 u32MadiReg_C420VTFCoef2;
            struct w32MadiReg_C420VTFCoef2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_C420Mode_C420InMode(r32)            _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_C420Mode_C420InMode(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_C420Mode_C420InMode(r16)            _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_C420Mode_C420InMode(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32MadiReg_C420Mode_C420OutMode(r32)           _BFGET_(r32, 1, 1)
    #define   SET32MadiReg_C420Mode_C420OutMode(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16MadiReg_C420Mode_C420OutMode(r16)           _BFGET_(r16, 1, 1)
    #define   SET16MadiReg_C420Mode_C420OutMode(r16,v)         _BFSET_(r16, 1, 1,v)

    #define     w32MadiReg_C420Mode                            {\
            UNSG32 uC420Mode_C420InMode                        :  1;\
            UNSG32 uC420Mode_C420OutMode                       :  1;\
            UNSG32 RSVDxCC_b2                                  : 30;\
          }
    union { UNSG32 u32MadiReg_C420Mode;
            struct w32MadiReg_C420Mode;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_IntOutOnly_IntOutOnly(r32)          _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_IntOutOnly_IntOutOnly(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_IntOutOnly_IntOutOnly(r16)          _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_IntOutOnly_IntOutOnly(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32MadiReg_IntOutOnly                          {\
            UNSG32 uIntOutOnly_IntOutOnly                      :  1;\
            UNSG32 RSVDxD0_b1                                  : 31;\
          }
    union { UNSG32 u32MadiReg_IntOutOnly;
            struct w32MadiReg_IntOutOnly;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly(r32) _BFGET_(r32, 0, 0)
    #define   SET32MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly(r16) _BFGET_(r16, 0, 0)
    #define   SET16MadiReg_ChromaMdvUseOnly_ChromaMdvUseOnly(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32MadiReg_ChromaMdvUseOnly                    {\
            UNSG32 uChromaMdvUseOnly_ChromaMdvUseOnly          :  1;\
            UNSG32 RSVDxD4_b1                                  : 31;\
          }
    union { UNSG32 u32MadiReg_ChromaMdvUseOnly;
            struct w32MadiReg_ChromaMdvUseOnly;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_MdvMin_MdvMinSt_0(r32)              _BFGET_(r32, 7, 0)
    #define   SET32MadiReg_MdvMin_MdvMinSt_0(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16MadiReg_MdvMin_MdvMinSt_0(r16)              _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_MdvMin_MdvMinSt_0(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_MdvMin_MdvMinSt_1(r32)              _BFGET_(r32,15, 8)
    #define   SET32MadiReg_MdvMin_MdvMinSt_1(r32,v)            _BFSET_(r32,15, 8,v)
    #define   GET16MadiReg_MdvMin_MdvMinSt_1(r16)              _BFGET_(r16,15, 8)
    #define   SET16MadiReg_MdvMin_MdvMinSt_1(r16,v)            _BFSET_(r16,15, 8,v)

    #define   GET32MadiReg_MdvMin_MdvMinThr_0(r32)             _BFGET_(r32,23,16)
    #define   SET32MadiReg_MdvMin_MdvMinThr_0(r32,v)           _BFSET_(r32,23,16,v)
    #define   GET16MadiReg_MdvMin_MdvMinThr_0(r16)             _BFGET_(r16, 7, 0)
    #define   SET16MadiReg_MdvMin_MdvMinThr_0(r16,v)           _BFSET_(r16, 7, 0,v)

    #define   GET32MadiReg_MdvMin_MdvMinThr_1(r32)             _BFGET_(r32,31,24)
    #define   SET32MadiReg_MdvMin_MdvMinThr_1(r32,v)           _BFSET_(r32,31,24,v)
    #define   GET16MadiReg_MdvMin_MdvMinThr_1(r16)             _BFGET_(r16,15, 8)
    #define   SET16MadiReg_MdvMin_MdvMinThr_1(r16,v)           _BFSET_(r16,15, 8,v)

    #define     w32MadiReg_MdvMin                              {\
            UNSG32 uMdvMin_MdvMinSt_0                          :  8;\
            UNSG32 uMdvMin_MdvMinSt_1                          :  8;\
            UNSG32 uMdvMin_MdvMinThr_0                         :  8;\
            UNSG32 uMdvMin_MdvMinThr_1                         :  8;\
          }
    union { UNSG32 u32MadiReg_MdvMin;
            struct w32MadiReg_MdvMin;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_GAccShiftBits_GhfAccShiftBits(r32)  _BFGET_(r32, 1, 0)
    #define   SET32MadiReg_GAccShiftBits_GhfAccShiftBits(r32,v) _BFSET_(r32, 1, 0,v)
    #define   GET16MadiReg_GAccShiftBits_GhfAccShiftBits(r16)  _BFGET_(r16, 1, 0)
    #define   SET16MadiReg_GAccShiftBits_GhfAccShiftBits(r16,v) _BFSET_(r16, 1, 0,v)

    #define   GET32MadiReg_GAccShiftBits_GosdAccShiftBits(r32) _BFGET_(r32, 3, 2)
    #define   SET32MadiReg_GAccShiftBits_GosdAccShiftBits(r32,v) _BFSET_(r32, 3, 2,v)
    #define   GET16MadiReg_GAccShiftBits_GosdAccShiftBits(r16) _BFGET_(r16, 3, 2)
    #define   SET16MadiReg_GAccShiftBits_GosdAccShiftBits(r16,v) _BFSET_(r16, 3, 2,v)

    #define   GET32MadiReg_GAccShiftBits_GrpdAccShiftBits(r32) _BFGET_(r32, 5, 4)
    #define   SET32MadiReg_GAccShiftBits_GrpdAccShiftBits(r32,v) _BFSET_(r32, 5, 4,v)
    #define   GET16MadiReg_GAccShiftBits_GrpdAccShiftBits(r16) _BFGET_(r16, 5, 4)
    #define   SET16MadiReg_GAccShiftBits_GrpdAccShiftBits(r16,v) _BFSET_(r16, 5, 4,v)

    #define   GET32MadiReg_GAccShiftBits_GdiAccShiftBits(r32)  _BFGET_(r32, 7, 6)
    #define   SET32MadiReg_GAccShiftBits_GdiAccShiftBits(r32,v) _BFSET_(r32, 7, 6,v)
    #define   GET16MadiReg_GAccShiftBits_GdiAccShiftBits(r16)  _BFGET_(r16, 7, 6)
    #define   SET16MadiReg_GAccShiftBits_GdiAccShiftBits(r16,v) _BFSET_(r16, 7, 6,v)

    #define     w32MadiReg_GAccShiftBits                       {\
            UNSG32 uGAccShiftBits_GhfAccShiftBits              :  2;\
            UNSG32 uGAccShiftBits_GosdAccShiftBits             :  2;\
            UNSG32 uGAccShiftBits_GrpdAccShiftBits             :  2;\
            UNSG32 uGAccShiftBits_GdiAccShiftBits              :  2;\
            UNSG32 RSVDxDC_b8                                  : 24;\
          }
    union { UNSG32 u32MadiReg_GAccShiftBits;
            struct w32MadiReg_GAccShiftBits;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MadiReg_YUV8BitIn_YUV8BitIn(r32)            _BFGET_(r32, 1, 0)
    #define   SET32MadiReg_YUV8BitIn_YUV8BitIn(r32,v)          _BFSET_(r32, 1, 0,v)
    #define   GET16MadiReg_YUV8BitIn_YUV8BitIn(r16)            _BFGET_(r16, 1, 0)
    #define   SET16MadiReg_YUV8BitIn_YUV8BitIn(r16,v)          _BFSET_(r16, 1, 0,v)

    #define     w32MadiReg_YUV8BitIn                           {\
            UNSG32 uYUV8BitIn_YUV8BitIn                        :  2;\
            UNSG32 RSVDxE0_b2                                  : 30;\
          }
    union { UNSG32 u32MadiReg_YUV8BitIn;
            struct w32MadiReg_YUV8BitIn;
          };
    ///////////////////////////////////////////////////////////
    } SIE_MadiReg;

    typedef union  T32MadiReg_Edge0
          { UNSG32 u32;
            struct w32MadiReg_Edge0;
                 } T32MadiReg_Edge0;
    typedef union  T32MadiReg_Edge1
          { UNSG32 u32;
            struct w32MadiReg_Edge1;
                 } T32MadiReg_Edge1;
    typedef union  T32MadiReg_Cnst
          { UNSG32 u32;
            struct w32MadiReg_Cnst;
                 } T32MadiReg_Cnst;
    typedef union  T32MadiReg_MdvCnst
          { UNSG32 u32;
            struct w32MadiReg_MdvCnst;
                 } T32MadiReg_MdvCnst;
    typedef union  T32MadiReg_LamdNoise
          { UNSG32 u32;
            struct w32MadiReg_LamdNoise;
                 } T32MadiReg_LamdNoise;
    typedef union  T32MadiReg_LasdNoise
          { UNSG32 u32;
            struct w32MadiReg_LasdNoise;
                 } T32MadiReg_LasdNoise;
    typedef union  T32MadiReg_LAMD
          { UNSG32 u32;
            struct w32MadiReg_LAMD;
                 } T32MadiReg_LAMD;
    typedef union  T32MadiReg_LASD
          { UNSG32 u32;
            struct w32MadiReg_LASD;
                 } T32MadiReg_LASD;
    typedef union  T32MadiReg_SOSD0
          { UNSG32 u32;
            struct w32MadiReg_SOSD0;
                 } T32MadiReg_SOSD0;
    typedef union  T32MadiReg_SOSD1
          { UNSG32 u32;
            struct w32MadiReg_SOSD1;
                 } T32MadiReg_SOSD1;
    typedef union  T32MadiReg_LAMDGain
          { UNSG32 u32;
            struct w32MadiReg_LAMDGain;
                 } T32MadiReg_LAMDGain;
    typedef union  T32MadiReg_LASDGain
          { UNSG32 u32;
            struct w32MadiReg_LASDGain;
                 } T32MadiReg_LASDGain;
    typedef union  T32MadiReg_Hf
          { UNSG32 u32;
            struct w32MadiReg_Hf;
                 } T32MadiReg_Hf;
    typedef union  T32MadiReg_Rpd
          { UNSG32 u32;
            struct w32MadiReg_Rpd;
                 } T32MadiReg_Rpd;
    typedef union  T32MadiReg_SdiSad
          { UNSG32 u32;
            struct w32MadiReg_SdiSad;
                 } T32MadiReg_SdiSad;
    typedef union  T32MadiReg_DiagByps
          { UNSG32 u32;
            struct w32MadiReg_DiagByps;
                 } T32MadiReg_DiagByps;
    typedef union  T32MadiReg_SdiNoise
          { UNSG32 u32;
            struct w32MadiReg_SdiNoise;
                 } T32MadiReg_SdiNoise;
    typedef union  T32MadiReg_Sdi0
          { UNSG32 u32;
            struct w32MadiReg_Sdi0;
                 } T32MadiReg_Sdi0;
    typedef union  T32MadiReg_Sdi1
          { UNSG32 u32;
            struct w32MadiReg_Sdi1;
                 } T32MadiReg_Sdi1;
    typedef union  T32MadiReg_Sdi2
          { UNSG32 u32;
            struct w32MadiReg_Sdi2;
                 } T32MadiReg_Sdi2;
    typedef union  T32MadiReg_ShiftBit
          { UNSG32 u32;
            struct w32MadiReg_ShiftBit;
                 } T32MadiReg_ShiftBit;
    typedef union  T32MadiReg_Sdi3
          { UNSG32 u32;
            struct w32MadiReg_Sdi3;
                 } T32MadiReg_Sdi3;
    typedef union  T32MadiReg_Sdi4
          { UNSG32 u32;
            struct w32MadiReg_Sdi4;
                 } T32MadiReg_Sdi4;
    typedef union  T32MadiReg_Sdi5
          { UNSG32 u32;
            struct w32MadiReg_Sdi5;
                 } T32MadiReg_Sdi5;
    typedef union  T32MadiReg_Sdi6
          { UNSG32 u32;
            struct w32MadiReg_Sdi6;
                 } T32MadiReg_Sdi6;
    typedef union  T32MadiReg_Angle
          { UNSG32 u32;
            struct w32MadiReg_Angle;
                 } T32MadiReg_Angle;
    typedef union  T32MadiReg_MotDet
          { UNSG32 u32;
            struct w32MadiReg_MotDet;
                 } T32MadiReg_MotDet;
    typedef union  T32MadiReg_HVLine
          { UNSG32 u32;
            struct w32MadiReg_HVLine;
                 } T32MadiReg_HVLine;
    typedef union  T32MadiReg_MdvYiir
          { UNSG32 u32;
            struct w32MadiReg_MdvYiir;
                 } T32MadiReg_MdvYiir;
    typedef union  T32MadiReg_C420A
          { UNSG32 u32;
            struct w32MadiReg_C420A;
                 } T32MadiReg_C420A;
    typedef union  T32MadiReg_C420B
          { UNSG32 u32;
            struct w32MadiReg_C420B;
                 } T32MadiReg_C420B;
    typedef union  T32MadiReg_MdvFilterSel
          { UNSG32 u32;
            struct w32MadiReg_MdvFilterSel;
                 } T32MadiReg_MdvFilterSel;
    typedef union  T32MadiReg_LcnstGain
          { UNSG32 u32;
            struct w32MadiReg_LcnstGain;
                 } T32MadiReg_LcnstGain;
    typedef union  T32MadiReg_YUVBlendGain
          { UNSG32 u32;
            struct w32MadiReg_YUVBlendGain;
                 } T32MadiReg_YUVBlendGain;
    typedef union  T32MadiReg_YUVMdvBlendGain
          { UNSG32 u32;
            struct w32MadiReg_YUVMdvBlendGain;
                 } T32MadiReg_YUVMdvBlendGain;
    typedef union  T32MadiReg_YMdvGain
          { UNSG32 u32;
            struct w32MadiReg_YMdvGain;
                 } T32MadiReg_YMdvGain;
    typedef union  T32MadiReg_YMdvGain1
          { UNSG32 u32;
            struct w32MadiReg_YMdvGain1;
                 } T32MadiReg_YMdvGain1;
    typedef union  T32MadiReg_YMdvOffset
          { UNSG32 u32;
            struct w32MadiReg_YMdvOffset;
                 } T32MadiReg_YMdvOffset;
    typedef union  T32MadiReg_UVMdvGain
          { UNSG32 u32;
            struct w32MadiReg_UVMdvGain;
                 } T32MadiReg_UVMdvGain;
    typedef union  T32MadiReg_Impulse
          { UNSG32 u32;
            struct w32MadiReg_Impulse;
                 } T32MadiReg_Impulse;
    typedef union  T32MadiReg_Nr
          { UNSG32 u32;
            struct w32MadiReg_Nr;
                 } T32MadiReg_Nr;
    typedef union  T32MadiReg_MdvLcnst0
          { UNSG32 u32;
            struct w32MadiReg_MdvLcnst0;
                 } T32MadiReg_MdvLcnst0;
    typedef union  T32MadiReg_MdvLcnst1
          { UNSG32 u32;
            struct w32MadiReg_MdvLcnst1;
                 } T32MadiReg_MdvLcnst1;
    typedef union  T32MadiReg_MdvLcnst2
          { UNSG32 u32;
            struct w32MadiReg_MdvLcnst2;
                 } T32MadiReg_MdvLcnst2;
    typedef union  T32MadiReg_MdvLcnst3
          { UNSG32 u32;
            struct w32MadiReg_MdvLcnst3;
                 } T32MadiReg_MdvLcnst3;
    typedef union  T32MadiReg_VTFCoef0
          { UNSG32 u32;
            struct w32MadiReg_VTFCoef0;
                 } T32MadiReg_VTFCoef0;
    typedef union  T32MadiReg_VTFCoef1
          { UNSG32 u32;
            struct w32MadiReg_VTFCoef1;
                 } T32MadiReg_VTFCoef1;
    typedef union  T32MadiReg_VTFCoef2
          { UNSG32 u32;
            struct w32MadiReg_VTFCoef2;
                 } T32MadiReg_VTFCoef2;
    typedef union  T32MadiReg_C420VTFCoef0
          { UNSG32 u32;
            struct w32MadiReg_C420VTFCoef0;
                 } T32MadiReg_C420VTFCoef0;
    typedef union  T32MadiReg_C420VTFCoef1
          { UNSG32 u32;
            struct w32MadiReg_C420VTFCoef1;
                 } T32MadiReg_C420VTFCoef1;
    typedef union  T32MadiReg_C420VTFCoef2
          { UNSG32 u32;
            struct w32MadiReg_C420VTFCoef2;
                 } T32MadiReg_C420VTFCoef2;
    typedef union  T32MadiReg_C420Mode
          { UNSG32 u32;
            struct w32MadiReg_C420Mode;
                 } T32MadiReg_C420Mode;
    typedef union  T32MadiReg_IntOutOnly
          { UNSG32 u32;
            struct w32MadiReg_IntOutOnly;
                 } T32MadiReg_IntOutOnly;
    typedef union  T32MadiReg_ChromaMdvUseOnly
          { UNSG32 u32;
            struct w32MadiReg_ChromaMdvUseOnly;
                 } T32MadiReg_ChromaMdvUseOnly;
    typedef union  T32MadiReg_MdvMin
          { UNSG32 u32;
            struct w32MadiReg_MdvMin;
                 } T32MadiReg_MdvMin;
    typedef union  T32MadiReg_GAccShiftBits
          { UNSG32 u32;
            struct w32MadiReg_GAccShiftBits;
                 } T32MadiReg_GAccShiftBits;
    typedef union  T32MadiReg_YUV8BitIn
          { UNSG32 u32;
            struct w32MadiReg_YUV8BitIn;
                 } T32MadiReg_YUV8BitIn;
    ///////////////////////////////////////////////////////////

    typedef union  TMadiReg_Edge0
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Edge0;
                   };
                 } TMadiReg_Edge0;
    typedef union  TMadiReg_Edge1
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Edge1;
                   };
                 } TMadiReg_Edge1;
    typedef union  TMadiReg_Cnst
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Cnst;
                   };
                 } TMadiReg_Cnst;
    typedef union  TMadiReg_MdvCnst
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvCnst;
                   };
                 } TMadiReg_MdvCnst;
    typedef union  TMadiReg_LamdNoise
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_LamdNoise;
                   };
                 } TMadiReg_LamdNoise;
    typedef union  TMadiReg_LasdNoise
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_LasdNoise;
                   };
                 } TMadiReg_LasdNoise;
    typedef union  TMadiReg_LAMD
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_LAMD;
                   };
                 } TMadiReg_LAMD;
    typedef union  TMadiReg_LASD
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_LASD;
                   };
                 } TMadiReg_LASD;
    typedef union  TMadiReg_SOSD0
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_SOSD0;
                   };
                 } TMadiReg_SOSD0;
    typedef union  TMadiReg_SOSD1
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_SOSD1;
                   };
                 } TMadiReg_SOSD1;
    typedef union  TMadiReg_LAMDGain
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_LAMDGain;
                   };
                 } TMadiReg_LAMDGain;
    typedef union  TMadiReg_LASDGain
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_LASDGain;
                   };
                 } TMadiReg_LASDGain;
    typedef union  TMadiReg_Hf
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Hf;
                   };
                 } TMadiReg_Hf;
    typedef union  TMadiReg_Rpd
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Rpd;
                   };
                 } TMadiReg_Rpd;
    typedef union  TMadiReg_SdiSad
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_SdiSad;
                   };
                 } TMadiReg_SdiSad;
    typedef union  TMadiReg_DiagByps
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_DiagByps;
                   };
                 } TMadiReg_DiagByps;
    typedef union  TMadiReg_SdiNoise
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_SdiNoise;
                   };
                 } TMadiReg_SdiNoise;
    typedef union  TMadiReg_Sdi0
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Sdi0;
                   };
                 } TMadiReg_Sdi0;
    typedef union  TMadiReg_Sdi1
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Sdi1;
                   };
                 } TMadiReg_Sdi1;
    typedef union  TMadiReg_Sdi2
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Sdi2;
                   };
                 } TMadiReg_Sdi2;
    typedef union  TMadiReg_ShiftBit
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_ShiftBit;
                   };
                 } TMadiReg_ShiftBit;
    typedef union  TMadiReg_Sdi3
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Sdi3;
                   };
                 } TMadiReg_Sdi3;
    typedef union  TMadiReg_Sdi4
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Sdi4;
                   };
                 } TMadiReg_Sdi4;
    typedef union  TMadiReg_Sdi5
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Sdi5;
                   };
                 } TMadiReg_Sdi5;
    typedef union  TMadiReg_Sdi6
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Sdi6;
                   };
                 } TMadiReg_Sdi6;
    typedef union  TMadiReg_Angle
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Angle;
                   };
                 } TMadiReg_Angle;
    typedef union  TMadiReg_MotDet
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MotDet;
                   };
                 } TMadiReg_MotDet;
    typedef union  TMadiReg_HVLine
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_HVLine;
                   };
                 } TMadiReg_HVLine;
    typedef union  TMadiReg_MdvYiir
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvYiir;
                   };
                 } TMadiReg_MdvYiir;
    typedef union  TMadiReg_C420A
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_C420A;
                   };
                 } TMadiReg_C420A;
    typedef union  TMadiReg_C420B
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_C420B;
                   };
                 } TMadiReg_C420B;
    typedef union  TMadiReg_MdvFilterSel
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvFilterSel;
                   };
                 } TMadiReg_MdvFilterSel;
    typedef union  TMadiReg_LcnstGain
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_LcnstGain;
                   };
                 } TMadiReg_LcnstGain;
    typedef union  TMadiReg_YUVBlendGain
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_YUVBlendGain;
                   };
                 } TMadiReg_YUVBlendGain;
    typedef union  TMadiReg_YUVMdvBlendGain
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_YUVMdvBlendGain;
                   };
                 } TMadiReg_YUVMdvBlendGain;
    typedef union  TMadiReg_YMdvGain
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_YMdvGain;
                   };
                 } TMadiReg_YMdvGain;
    typedef union  TMadiReg_YMdvGain1
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_YMdvGain1;
                   };
                 } TMadiReg_YMdvGain1;
    typedef union  TMadiReg_YMdvOffset
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_YMdvOffset;
                   };
                 } TMadiReg_YMdvOffset;
    typedef union  TMadiReg_UVMdvGain
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_UVMdvGain;
                   };
                 } TMadiReg_UVMdvGain;
    typedef union  TMadiReg_Impulse
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Impulse;
                   };
                 } TMadiReg_Impulse;
    typedef union  TMadiReg_Nr
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_Nr;
                   };
                 } TMadiReg_Nr;
    typedef union  TMadiReg_MdvLcnst0
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvLcnst0;
                   };
                 } TMadiReg_MdvLcnst0;
    typedef union  TMadiReg_MdvLcnst1
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvLcnst1;
                   };
                 } TMadiReg_MdvLcnst1;
    typedef union  TMadiReg_MdvLcnst2
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvLcnst2;
                   };
                 } TMadiReg_MdvLcnst2;
    typedef union  TMadiReg_MdvLcnst3
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvLcnst3;
                   };
                 } TMadiReg_MdvLcnst3;
    typedef union  TMadiReg_VTFCoef0
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_VTFCoef0;
                   };
                 } TMadiReg_VTFCoef0;
    typedef union  TMadiReg_VTFCoef1
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_VTFCoef1;
                   };
                 } TMadiReg_VTFCoef1;
    typedef union  TMadiReg_VTFCoef2
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_VTFCoef2;
                   };
                 } TMadiReg_VTFCoef2;
    typedef union  TMadiReg_C420VTFCoef0
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_C420VTFCoef0;
                   };
                 } TMadiReg_C420VTFCoef0;
    typedef union  TMadiReg_C420VTFCoef1
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_C420VTFCoef1;
                   };
                 } TMadiReg_C420VTFCoef1;
    typedef union  TMadiReg_C420VTFCoef2
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_C420VTFCoef2;
                   };
                 } TMadiReg_C420VTFCoef2;
    typedef union  TMadiReg_C420Mode
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_C420Mode;
                   };
                 } TMadiReg_C420Mode;
    typedef union  TMadiReg_IntOutOnly
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_IntOutOnly;
                   };
                 } TMadiReg_IntOutOnly;
    typedef union  TMadiReg_ChromaMdvUseOnly
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_ChromaMdvUseOnly;
                   };
                 } TMadiReg_ChromaMdvUseOnly;
    typedef union  TMadiReg_MdvMin
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_MdvMin;
                   };
                 } TMadiReg_MdvMin;
    typedef union  TMadiReg_GAccShiftBits
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_GAccShiftBits;
                   };
                 } TMadiReg_GAccShiftBits;
    typedef union  TMadiReg_YUV8BitIn
          { UNSG32 u32[1];
            struct {
            struct w32MadiReg_YUV8BitIn;
                   };
                 } TMadiReg_YUV8BitIn;

    ///////////////////////////////////////////////////////////
     SIGN32 MadiReg_drvrd(SIE_MadiReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 MadiReg_drvwr(SIE_MadiReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void MadiReg_reset(SIE_MadiReg *p);
     SIGN32 MadiReg_cmp  (SIE_MadiReg *p, SIE_MadiReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define MadiReg_check(p,pie,pfx,hLOG) MadiReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define MadiReg_print(p,    pfx,hLOG) MadiReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: MadiReg
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE FmdReg                  biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 FieldDifThr          (P)
///               %unsigned 8  FieldDifThr_0             0x2D
///                                    ###
///                                    * Threshold control of field input difference. Used for field base motion adaptive control in film mode processing. 4 elements are due to global contrast adaptation
///                                    ###
///               %unsigned 8  FieldDifThr_1             0x3C
///                                    ###
///                                    * Threshold control of field input difference. Used for field base motion adaptive control in film mode processing. 4 elements are due to global contrast adaptation
///                                    ###
///               %unsigned 8  FieldDifThr_2             0x2D
///                                    ###
///                                    * Threshold control of field input difference. Used for field base motion adaptive control in film mode processing. 4 elements are due to global contrast adaptation
///                                    ###
///               %unsigned 8  FieldDifThr_3             0x3C
///                                    ###
///                                    * Threshold control of field input difference. Used for field base motion adaptive control in film mode processing. 4 elements are due to global contrast adaptation
///                                    ###
///     @ 0x00004 FmdHmeGain0          (P)
///               %unsigned 8  FmdHmeGain_0              0x46
///                                    ###
///                                    * The gain control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeGain_1              0x45
///                                    ###
///                                    * The gain control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeGain_2              0x44
///                                    ###
///                                    * The gain control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeGain_3              0x43
///                                    ###
///                                    * The gain control in block matching for HME in film mode detector
///                                    ###
///     @ 0x00008 FmdHmeGain1          (P)
///               %unsigned 8  FmdHmeGain_4              0x42
///                                    ###
///                                    * The gain control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeGain_5              0x41
///                                    ###
///                                    * The gain control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeGain_6              0x3D
///                                    ###
///                                    * The gain control in block matching for HME in film mode detector
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0000C FmdHmeOff0           (P)
///               %unsigned 8  FmdHmeOff_0               0x0
///                                    ###
///                                    * The offset control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeOff_1               0x0
///                                    ###
///                                    * The offset control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeOff_2               0x0
///                                    ###
///                                    * The offset control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeOff_3               0x0
///                                    ###
///                                    * The offset control in block matching for HME in film mode detector
///                                    ###
///     @ 0x00010 FmdHmeOff1           (P)
///               %unsigned 8  FmdHmeOff_4               0x0
///                                    ###
///                                    * The offset control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeOff_5               0x0
///                                    ###
///                                    * The offset control in block matching for HME in film mode detector
///                                    ###
///               %unsigned 8  FmdHmeOff_6               0x0
///                                    ###
///                                    * The offset control in block matching for HME in film mode detector
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00014 FmdHmeThr            (P)
///               %unsigned 4  FmdHmeNoiseThr            0x8
///                                    ###
///                                    * A threshold control to determine the local minima for HME in FMD
///                                    ###
///               %unsigned 3  FmdHmeDifThr              0x2
///                                    ###
///                                    * A maximum threshold value allowing MV difference between two adjacent pixels. The threshold is used to drive the median filter in case of local minima.
///                                    ###
///               %unsigned 8  FmdHmeLowCnstThr          0x11
///                                    ###
///                                    * The low contrast threshold controls for FMD, in which MV is unknown.
///                                    ###
///               %unsigned 8  FmdStillThr               0xD
///                                    ###
///                                    * A threshold control for horizontal static line detection
///                                    ###
///               %%        9          # Stuffing bits...
///     @ 0x00018 FmdGhmvShiftBit      (P)
///               %unsigned 4  FmdGhmvShiftBit           0x0
///                                    ###
///                                    * Global hmv accumulator output bit shifted control before sending to F/W
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x0001C FmdScrTextFixLineDly0 (P)
///               %unsigned 10 FmdScrTextFixLineDly_0    0x6
///                                    ###
///                                    * The number of lines difference between scrolling text fix and detection
///                                    ###
///               %unsigned 10 FmdScrTextFixLineDly_1    0x172
///                                    ###
///                                    * The approximate location range of horizontal scrolling text
///                                    ###
///               %unsigned 10 FmdScrTextFixLineDly_2    0x17C
///               %%        2          # Stuffing bits...
///     @ 0x00020 FmdScrTextFixLineDly1 (P)
///               %unsigned 10 FmdScrTextFixLineDly_3    0x320
///               %unsigned 10 FmdScrTextFixLineDly_4    0x46
///               %%        12         # Stuffing bits...
///     @ 0x00024 FmdHWEn              (P)
///               %unsigned 1  FmdHWEn                   0x0
///                                    ###
///                                    * FMD/FMP HW Enable Control
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00028 ChromaUseMadiOnly    (P)
///               %unsigned 1  ChromaUseMadiOnly         0x0
///                                    ###
///                                    * FMP enable for Chroma (1=off, 0 =on)
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0002C Fmdhmvoff            (P)
///               %unsigned 8  Fmdhmvoff                 0x32
///                                    ###
///                                    * HMV local line accumulator output offset control
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00030 FmdLmvThr            (P)
///               %unsigned 3  FmdLmvThr                 0x5
///                                    ###
///                                    * Global large vector detector threshold control
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00034 Fmdhmvshiftbits      (P)
///               %unsigned 4  Fmdhmvshiftbits_0         0x6
///                                    ###
///                                    * HMV local line accumulator output shift bit controls
///                                    ###
///               %unsigned 4  Fmdhmvshiftbits_1         0x4
///                                    ###
///                                    * HMV local line accumulator output shift bit controls
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00038 FmdhmeThr0           (P)
///               %unsigned 8  FmdhmvThr_0               0x14
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///               %unsigned 8  FmdhmvThr_1               0x1E
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///               %unsigned 8  FmdhmvThr_2               0xA
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///               %unsigned 8  FmdhmvThr_3               0x0
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///     @ 0x0003C FmdhmeThr1           (P)
///               %unsigned 8  FmdhmvThr_4               0x8
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///               %unsigned 8  FmdhmvThr_5               0xA
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///               %unsigned 8  FmdhmvThr_6               0x16
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///               %unsigned 8  FmdhmvThr_7               0x16
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///     @ 0x00040 FmdhmeThr2           (P)
///               %unsigned 8  FmdhmvThr_8               0xC
///                                    ###
///                                    * HMV local line confidence level threshold control under global contrast adaptation
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00044 FmdmdvThr0           (P)
///               %unsigned 6  FmdmdvThr_0               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %unsigned 6  FmdmdvThr_1               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %unsigned 6  FmdmdvThr_2               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %unsigned 6  FmdmdvThr_3               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00048 FmdmdvThr1           (P)
///               %unsigned 6  FmdmdvThr_4               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %unsigned 6  FmdmdvThr_5               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %unsigned 6  FmdmdvThr_6               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %unsigned 6  FmdmdvThr_7               0x28
///                                    ###
///                                    * Local motion value threshold controls
///                                    ###
///               %%        8          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      76B, bits:     362b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_FmdReg
#define h_FmdReg (){}

    #define     RA_FmdReg_FieldDifThr                          0x0000

    #define     BA_FmdReg_FieldDifThr_FieldDifThr_0            0x0000
    #define     B16FmdReg_FieldDifThr_FieldDifThr_0            0x0000
    #define   LSb32FmdReg_FieldDifThr_FieldDifThr_0               0
    #define   LSb16FmdReg_FieldDifThr_FieldDifThr_0               0
    #define       bFmdReg_FieldDifThr_FieldDifThr_0            8
    #define   MSK32FmdReg_FieldDifThr_FieldDifThr_0               0x000000FF

    #define     BA_FmdReg_FieldDifThr_FieldDifThr_1            0x0001
    #define     B16FmdReg_FieldDifThr_FieldDifThr_1            0x0000
    #define   LSb32FmdReg_FieldDifThr_FieldDifThr_1               8
    #define   LSb16FmdReg_FieldDifThr_FieldDifThr_1               8
    #define       bFmdReg_FieldDifThr_FieldDifThr_1            8
    #define   MSK32FmdReg_FieldDifThr_FieldDifThr_1               0x0000FF00

    #define     BA_FmdReg_FieldDifThr_FieldDifThr_2            0x0002
    #define     B16FmdReg_FieldDifThr_FieldDifThr_2            0x0002
    #define   LSb32FmdReg_FieldDifThr_FieldDifThr_2               16
    #define   LSb16FmdReg_FieldDifThr_FieldDifThr_2               0
    #define       bFmdReg_FieldDifThr_FieldDifThr_2            8
    #define   MSK32FmdReg_FieldDifThr_FieldDifThr_2               0x00FF0000

    #define     BA_FmdReg_FieldDifThr_FieldDifThr_3            0x0003
    #define     B16FmdReg_FieldDifThr_FieldDifThr_3            0x0002
    #define   LSb32FmdReg_FieldDifThr_FieldDifThr_3               24
    #define   LSb16FmdReg_FieldDifThr_FieldDifThr_3               8
    #define       bFmdReg_FieldDifThr_FieldDifThr_3            8
    #define   MSK32FmdReg_FieldDifThr_FieldDifThr_3               0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdHmeGain0                          0x0004

    #define     BA_FmdReg_FmdHmeGain0_FmdHmeGain_0             0x0004
    #define     B16FmdReg_FmdHmeGain0_FmdHmeGain_0             0x0004
    #define   LSb32FmdReg_FmdHmeGain0_FmdHmeGain_0                0
    #define   LSb16FmdReg_FmdHmeGain0_FmdHmeGain_0                0
    #define       bFmdReg_FmdHmeGain0_FmdHmeGain_0             8
    #define   MSK32FmdReg_FmdHmeGain0_FmdHmeGain_0                0x000000FF

    #define     BA_FmdReg_FmdHmeGain0_FmdHmeGain_1             0x0005
    #define     B16FmdReg_FmdHmeGain0_FmdHmeGain_1             0x0004
    #define   LSb32FmdReg_FmdHmeGain0_FmdHmeGain_1                8
    #define   LSb16FmdReg_FmdHmeGain0_FmdHmeGain_1                8
    #define       bFmdReg_FmdHmeGain0_FmdHmeGain_1             8
    #define   MSK32FmdReg_FmdHmeGain0_FmdHmeGain_1                0x0000FF00

    #define     BA_FmdReg_FmdHmeGain0_FmdHmeGain_2             0x0006
    #define     B16FmdReg_FmdHmeGain0_FmdHmeGain_2             0x0006
    #define   LSb32FmdReg_FmdHmeGain0_FmdHmeGain_2                16
    #define   LSb16FmdReg_FmdHmeGain0_FmdHmeGain_2                0
    #define       bFmdReg_FmdHmeGain0_FmdHmeGain_2             8
    #define   MSK32FmdReg_FmdHmeGain0_FmdHmeGain_2                0x00FF0000

    #define     BA_FmdReg_FmdHmeGain0_FmdHmeGain_3             0x0007
    #define     B16FmdReg_FmdHmeGain0_FmdHmeGain_3             0x0006
    #define   LSb32FmdReg_FmdHmeGain0_FmdHmeGain_3                24
    #define   LSb16FmdReg_FmdHmeGain0_FmdHmeGain_3                8
    #define       bFmdReg_FmdHmeGain0_FmdHmeGain_3             8
    #define   MSK32FmdReg_FmdHmeGain0_FmdHmeGain_3                0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdHmeGain1                          0x0008

    #define     BA_FmdReg_FmdHmeGain1_FmdHmeGain_4             0x0008
    #define     B16FmdReg_FmdHmeGain1_FmdHmeGain_4             0x0008
    #define   LSb32FmdReg_FmdHmeGain1_FmdHmeGain_4                0
    #define   LSb16FmdReg_FmdHmeGain1_FmdHmeGain_4                0
    #define       bFmdReg_FmdHmeGain1_FmdHmeGain_4             8
    #define   MSK32FmdReg_FmdHmeGain1_FmdHmeGain_4                0x000000FF

    #define     BA_FmdReg_FmdHmeGain1_FmdHmeGain_5             0x0009
    #define     B16FmdReg_FmdHmeGain1_FmdHmeGain_5             0x0008
    #define   LSb32FmdReg_FmdHmeGain1_FmdHmeGain_5                8
    #define   LSb16FmdReg_FmdHmeGain1_FmdHmeGain_5                8
    #define       bFmdReg_FmdHmeGain1_FmdHmeGain_5             8
    #define   MSK32FmdReg_FmdHmeGain1_FmdHmeGain_5                0x0000FF00

    #define     BA_FmdReg_FmdHmeGain1_FmdHmeGain_6             0x000A
    #define     B16FmdReg_FmdHmeGain1_FmdHmeGain_6             0x000A
    #define   LSb32FmdReg_FmdHmeGain1_FmdHmeGain_6                16
    #define   LSb16FmdReg_FmdHmeGain1_FmdHmeGain_6                0
    #define       bFmdReg_FmdHmeGain1_FmdHmeGain_6             8
    #define   MSK32FmdReg_FmdHmeGain1_FmdHmeGain_6                0x00FF0000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdHmeOff0                           0x000C

    #define     BA_FmdReg_FmdHmeOff0_FmdHmeOff_0               0x000C
    #define     B16FmdReg_FmdHmeOff0_FmdHmeOff_0               0x000C
    #define   LSb32FmdReg_FmdHmeOff0_FmdHmeOff_0                  0
    #define   LSb16FmdReg_FmdHmeOff0_FmdHmeOff_0                  0
    #define       bFmdReg_FmdHmeOff0_FmdHmeOff_0               8
    #define   MSK32FmdReg_FmdHmeOff0_FmdHmeOff_0                  0x000000FF

    #define     BA_FmdReg_FmdHmeOff0_FmdHmeOff_1               0x000D
    #define     B16FmdReg_FmdHmeOff0_FmdHmeOff_1               0x000C
    #define   LSb32FmdReg_FmdHmeOff0_FmdHmeOff_1                  8
    #define   LSb16FmdReg_FmdHmeOff0_FmdHmeOff_1                  8
    #define       bFmdReg_FmdHmeOff0_FmdHmeOff_1               8
    #define   MSK32FmdReg_FmdHmeOff0_FmdHmeOff_1                  0x0000FF00

    #define     BA_FmdReg_FmdHmeOff0_FmdHmeOff_2               0x000E
    #define     B16FmdReg_FmdHmeOff0_FmdHmeOff_2               0x000E
    #define   LSb32FmdReg_FmdHmeOff0_FmdHmeOff_2                  16
    #define   LSb16FmdReg_FmdHmeOff0_FmdHmeOff_2                  0
    #define       bFmdReg_FmdHmeOff0_FmdHmeOff_2               8
    #define   MSK32FmdReg_FmdHmeOff0_FmdHmeOff_2                  0x00FF0000

    #define     BA_FmdReg_FmdHmeOff0_FmdHmeOff_3               0x000F
    #define     B16FmdReg_FmdHmeOff0_FmdHmeOff_3               0x000E
    #define   LSb32FmdReg_FmdHmeOff0_FmdHmeOff_3                  24
    #define   LSb16FmdReg_FmdHmeOff0_FmdHmeOff_3                  8
    #define       bFmdReg_FmdHmeOff0_FmdHmeOff_3               8
    #define   MSK32FmdReg_FmdHmeOff0_FmdHmeOff_3                  0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdHmeOff1                           0x0010

    #define     BA_FmdReg_FmdHmeOff1_FmdHmeOff_4               0x0010
    #define     B16FmdReg_FmdHmeOff1_FmdHmeOff_4               0x0010
    #define   LSb32FmdReg_FmdHmeOff1_FmdHmeOff_4                  0
    #define   LSb16FmdReg_FmdHmeOff1_FmdHmeOff_4                  0
    #define       bFmdReg_FmdHmeOff1_FmdHmeOff_4               8
    #define   MSK32FmdReg_FmdHmeOff1_FmdHmeOff_4                  0x000000FF

    #define     BA_FmdReg_FmdHmeOff1_FmdHmeOff_5               0x0011
    #define     B16FmdReg_FmdHmeOff1_FmdHmeOff_5               0x0010
    #define   LSb32FmdReg_FmdHmeOff1_FmdHmeOff_5                  8
    #define   LSb16FmdReg_FmdHmeOff1_FmdHmeOff_5                  8
    #define       bFmdReg_FmdHmeOff1_FmdHmeOff_5               8
    #define   MSK32FmdReg_FmdHmeOff1_FmdHmeOff_5                  0x0000FF00

    #define     BA_FmdReg_FmdHmeOff1_FmdHmeOff_6               0x0012
    #define     B16FmdReg_FmdHmeOff1_FmdHmeOff_6               0x0012
    #define   LSb32FmdReg_FmdHmeOff1_FmdHmeOff_6                  16
    #define   LSb16FmdReg_FmdHmeOff1_FmdHmeOff_6                  0
    #define       bFmdReg_FmdHmeOff1_FmdHmeOff_6               8
    #define   MSK32FmdReg_FmdHmeOff1_FmdHmeOff_6                  0x00FF0000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdHmeThr                            0x0014

    #define     BA_FmdReg_FmdHmeThr_FmdHmeNoiseThr             0x0014
    #define     B16FmdReg_FmdHmeThr_FmdHmeNoiseThr             0x0014
    #define   LSb32FmdReg_FmdHmeThr_FmdHmeNoiseThr                0
    #define   LSb16FmdReg_FmdHmeThr_FmdHmeNoiseThr                0
    #define       bFmdReg_FmdHmeThr_FmdHmeNoiseThr             4
    #define   MSK32FmdReg_FmdHmeThr_FmdHmeNoiseThr                0x0000000F

    #define     BA_FmdReg_FmdHmeThr_FmdHmeDifThr               0x0014
    #define     B16FmdReg_FmdHmeThr_FmdHmeDifThr               0x0014
    #define   LSb32FmdReg_FmdHmeThr_FmdHmeDifThr                  4
    #define   LSb16FmdReg_FmdHmeThr_FmdHmeDifThr                  4
    #define       bFmdReg_FmdHmeThr_FmdHmeDifThr               3
    #define   MSK32FmdReg_FmdHmeThr_FmdHmeDifThr                  0x00000070

    #define     BA_FmdReg_FmdHmeThr_FmdHmeLowCnstThr           0x0014
    #define     B16FmdReg_FmdHmeThr_FmdHmeLowCnstThr           0x0014
    #define   LSb32FmdReg_FmdHmeThr_FmdHmeLowCnstThr              7
    #define   LSb16FmdReg_FmdHmeThr_FmdHmeLowCnstThr              7
    #define       bFmdReg_FmdHmeThr_FmdHmeLowCnstThr           8
    #define   MSK32FmdReg_FmdHmeThr_FmdHmeLowCnstThr              0x00007F80

    #define     BA_FmdReg_FmdHmeThr_FmdStillThr                0x0015
    #define     B16FmdReg_FmdHmeThr_FmdStillThr                0x0014
    #define   LSb32FmdReg_FmdHmeThr_FmdStillThr                   15
    #define   LSb16FmdReg_FmdHmeThr_FmdStillThr                   15
    #define       bFmdReg_FmdHmeThr_FmdStillThr                8
    #define   MSK32FmdReg_FmdHmeThr_FmdStillThr                   0x007F8000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdGhmvShiftBit                      0x0018

    #define     BA_FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit      0x0018
    #define     B16FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit      0x0018
    #define   LSb32FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit         0
    #define   LSb16FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit         0
    #define       bFmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit      4
    #define   MSK32FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit         0x0000000F
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdScrTextFixLineDly0                0x001C

    #define     BA_FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0 0x001C
    #define     B16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0 0x001C
    #define   LSb32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0    0
    #define   LSb16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0    0
    #define       bFmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0 10
    #define   MSK32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0    0x000003FF

    #define     BA_FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1 0x001D
    #define     B16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1 0x001C
    #define   LSb32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1    10
    #define   LSb16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1    10
    #define       bFmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1 10
    #define   MSK32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1    0x000FFC00

    #define     BA_FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2 0x001E
    #define     B16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2 0x001E
    #define   LSb32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2    20
    #define   LSb16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2    4
    #define       bFmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2 10
    #define   MSK32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2    0x3FF00000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdScrTextFixLineDly1                0x0020

    #define     BA_FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3 0x0020
    #define     B16FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3 0x0020
    #define   LSb32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3    0
    #define   LSb16FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3    0
    #define       bFmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3 10
    #define   MSK32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3    0x000003FF

    #define     BA_FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4 0x0021
    #define     B16FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4 0x0020
    #define   LSb32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4    10
    #define   LSb16FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4    10
    #define       bFmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4 10
    #define   MSK32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4    0x000FFC00
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdHWEn                              0x0024

    #define     BA_FmdReg_FmdHWEn_FmdHWEn                      0x0024
    #define     B16FmdReg_FmdHWEn_FmdHWEn                      0x0024
    #define   LSb32FmdReg_FmdHWEn_FmdHWEn                         0
    #define   LSb16FmdReg_FmdHWEn_FmdHWEn                         0
    #define       bFmdReg_FmdHWEn_FmdHWEn                      1
    #define   MSK32FmdReg_FmdHWEn_FmdHWEn                         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_ChromaUseMadiOnly                    0x0028

    #define     BA_FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly  0x0028
    #define     B16FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly  0x0028
    #define   LSb32FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly     0
    #define   LSb16FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly     0
    #define       bFmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly  1
    #define   MSK32FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly     0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_Fmdhmvoff                            0x002C

    #define     BA_FmdReg_Fmdhmvoff_Fmdhmvoff                  0x002C
    #define     B16FmdReg_Fmdhmvoff_Fmdhmvoff                  0x002C
    #define   LSb32FmdReg_Fmdhmvoff_Fmdhmvoff                     0
    #define   LSb16FmdReg_Fmdhmvoff_Fmdhmvoff                     0
    #define       bFmdReg_Fmdhmvoff_Fmdhmvoff                  8
    #define   MSK32FmdReg_Fmdhmvoff_Fmdhmvoff                     0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdLmvThr                            0x0030

    #define     BA_FmdReg_FmdLmvThr_FmdLmvThr                  0x0030
    #define     B16FmdReg_FmdLmvThr_FmdLmvThr                  0x0030
    #define   LSb32FmdReg_FmdLmvThr_FmdLmvThr                     0
    #define   LSb16FmdReg_FmdLmvThr_FmdLmvThr                     0
    #define       bFmdReg_FmdLmvThr_FmdLmvThr                  3
    #define   MSK32FmdReg_FmdLmvThr_FmdLmvThr                     0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_Fmdhmvshiftbits                      0x0034

    #define     BA_FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0    0x0034
    #define     B16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0    0x0034
    #define   LSb32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0       0
    #define   LSb16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0       0
    #define       bFmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0    4
    #define   MSK32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0       0x0000000F

    #define     BA_FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1    0x0034
    #define     B16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1    0x0034
    #define   LSb32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1       4
    #define   LSb16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1       4
    #define       bFmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1    4
    #define   MSK32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1       0x000000F0
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdhmeThr0                           0x0038

    #define     BA_FmdReg_FmdhmeThr0_FmdhmvThr_0               0x0038
    #define     B16FmdReg_FmdhmeThr0_FmdhmvThr_0               0x0038
    #define   LSb32FmdReg_FmdhmeThr0_FmdhmvThr_0                  0
    #define   LSb16FmdReg_FmdhmeThr0_FmdhmvThr_0                  0
    #define       bFmdReg_FmdhmeThr0_FmdhmvThr_0               8
    #define   MSK32FmdReg_FmdhmeThr0_FmdhmvThr_0                  0x000000FF

    #define     BA_FmdReg_FmdhmeThr0_FmdhmvThr_1               0x0039
    #define     B16FmdReg_FmdhmeThr0_FmdhmvThr_1               0x0038
    #define   LSb32FmdReg_FmdhmeThr0_FmdhmvThr_1                  8
    #define   LSb16FmdReg_FmdhmeThr0_FmdhmvThr_1                  8
    #define       bFmdReg_FmdhmeThr0_FmdhmvThr_1               8
    #define   MSK32FmdReg_FmdhmeThr0_FmdhmvThr_1                  0x0000FF00

    #define     BA_FmdReg_FmdhmeThr0_FmdhmvThr_2               0x003A
    #define     B16FmdReg_FmdhmeThr0_FmdhmvThr_2               0x003A
    #define   LSb32FmdReg_FmdhmeThr0_FmdhmvThr_2                  16
    #define   LSb16FmdReg_FmdhmeThr0_FmdhmvThr_2                  0
    #define       bFmdReg_FmdhmeThr0_FmdhmvThr_2               8
    #define   MSK32FmdReg_FmdhmeThr0_FmdhmvThr_2                  0x00FF0000

    #define     BA_FmdReg_FmdhmeThr0_FmdhmvThr_3               0x003B
    #define     B16FmdReg_FmdhmeThr0_FmdhmvThr_3               0x003A
    #define   LSb32FmdReg_FmdhmeThr0_FmdhmvThr_3                  24
    #define   LSb16FmdReg_FmdhmeThr0_FmdhmvThr_3                  8
    #define       bFmdReg_FmdhmeThr0_FmdhmvThr_3               8
    #define   MSK32FmdReg_FmdhmeThr0_FmdhmvThr_3                  0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdhmeThr1                           0x003C

    #define     BA_FmdReg_FmdhmeThr1_FmdhmvThr_4               0x003C
    #define     B16FmdReg_FmdhmeThr1_FmdhmvThr_4               0x003C
    #define   LSb32FmdReg_FmdhmeThr1_FmdhmvThr_4                  0
    #define   LSb16FmdReg_FmdhmeThr1_FmdhmvThr_4                  0
    #define       bFmdReg_FmdhmeThr1_FmdhmvThr_4               8
    #define   MSK32FmdReg_FmdhmeThr1_FmdhmvThr_4                  0x000000FF

    #define     BA_FmdReg_FmdhmeThr1_FmdhmvThr_5               0x003D
    #define     B16FmdReg_FmdhmeThr1_FmdhmvThr_5               0x003C
    #define   LSb32FmdReg_FmdhmeThr1_FmdhmvThr_5                  8
    #define   LSb16FmdReg_FmdhmeThr1_FmdhmvThr_5                  8
    #define       bFmdReg_FmdhmeThr1_FmdhmvThr_5               8
    #define   MSK32FmdReg_FmdhmeThr1_FmdhmvThr_5                  0x0000FF00

    #define     BA_FmdReg_FmdhmeThr1_FmdhmvThr_6               0x003E
    #define     B16FmdReg_FmdhmeThr1_FmdhmvThr_6               0x003E
    #define   LSb32FmdReg_FmdhmeThr1_FmdhmvThr_6                  16
    #define   LSb16FmdReg_FmdhmeThr1_FmdhmvThr_6                  0
    #define       bFmdReg_FmdhmeThr1_FmdhmvThr_6               8
    #define   MSK32FmdReg_FmdhmeThr1_FmdhmvThr_6                  0x00FF0000

    #define     BA_FmdReg_FmdhmeThr1_FmdhmvThr_7               0x003F
    #define     B16FmdReg_FmdhmeThr1_FmdhmvThr_7               0x003E
    #define   LSb32FmdReg_FmdhmeThr1_FmdhmvThr_7                  24
    #define   LSb16FmdReg_FmdhmeThr1_FmdhmvThr_7                  8
    #define       bFmdReg_FmdhmeThr1_FmdhmvThr_7               8
    #define   MSK32FmdReg_FmdhmeThr1_FmdhmvThr_7                  0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdhmeThr2                           0x0040

    #define     BA_FmdReg_FmdhmeThr2_FmdhmvThr_8               0x0040
    #define     B16FmdReg_FmdhmeThr2_FmdhmvThr_8               0x0040
    #define   LSb32FmdReg_FmdhmeThr2_FmdhmvThr_8                  0
    #define   LSb16FmdReg_FmdhmeThr2_FmdhmvThr_8                  0
    #define       bFmdReg_FmdhmeThr2_FmdhmvThr_8               8
    #define   MSK32FmdReg_FmdhmeThr2_FmdhmvThr_8                  0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdmdvThr0                           0x0044

    #define     BA_FmdReg_FmdmdvThr0_FmdmdvThr_0               0x0044
    #define     B16FmdReg_FmdmdvThr0_FmdmdvThr_0               0x0044
    #define   LSb32FmdReg_FmdmdvThr0_FmdmdvThr_0                  0
    #define   LSb16FmdReg_FmdmdvThr0_FmdmdvThr_0                  0
    #define       bFmdReg_FmdmdvThr0_FmdmdvThr_0               6
    #define   MSK32FmdReg_FmdmdvThr0_FmdmdvThr_0                  0x0000003F

    #define     BA_FmdReg_FmdmdvThr0_FmdmdvThr_1               0x0044
    #define     B16FmdReg_FmdmdvThr0_FmdmdvThr_1               0x0044
    #define   LSb32FmdReg_FmdmdvThr0_FmdmdvThr_1                  6
    #define   LSb16FmdReg_FmdmdvThr0_FmdmdvThr_1                  6
    #define       bFmdReg_FmdmdvThr0_FmdmdvThr_1               6
    #define   MSK32FmdReg_FmdmdvThr0_FmdmdvThr_1                  0x00000FC0

    #define     BA_FmdReg_FmdmdvThr0_FmdmdvThr_2               0x0045
    #define     B16FmdReg_FmdmdvThr0_FmdmdvThr_2               0x0044
    #define   LSb32FmdReg_FmdmdvThr0_FmdmdvThr_2                  12
    #define   LSb16FmdReg_FmdmdvThr0_FmdmdvThr_2                  12
    #define       bFmdReg_FmdmdvThr0_FmdmdvThr_2               6
    #define   MSK32FmdReg_FmdmdvThr0_FmdmdvThr_2                  0x0003F000

    #define     BA_FmdReg_FmdmdvThr0_FmdmdvThr_3               0x0046
    #define     B16FmdReg_FmdmdvThr0_FmdmdvThr_3               0x0046
    #define   LSb32FmdReg_FmdmdvThr0_FmdmdvThr_3                  18
    #define   LSb16FmdReg_FmdmdvThr0_FmdmdvThr_3                  2
    #define       bFmdReg_FmdmdvThr0_FmdmdvThr_3               6
    #define   MSK32FmdReg_FmdmdvThr0_FmdmdvThr_3                  0x00FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_FmdReg_FmdmdvThr1                           0x0048

    #define     BA_FmdReg_FmdmdvThr1_FmdmdvThr_4               0x0048
    #define     B16FmdReg_FmdmdvThr1_FmdmdvThr_4               0x0048
    #define   LSb32FmdReg_FmdmdvThr1_FmdmdvThr_4                  0
    #define   LSb16FmdReg_FmdmdvThr1_FmdmdvThr_4                  0
    #define       bFmdReg_FmdmdvThr1_FmdmdvThr_4               6
    #define   MSK32FmdReg_FmdmdvThr1_FmdmdvThr_4                  0x0000003F

    #define     BA_FmdReg_FmdmdvThr1_FmdmdvThr_5               0x0048
    #define     B16FmdReg_FmdmdvThr1_FmdmdvThr_5               0x0048
    #define   LSb32FmdReg_FmdmdvThr1_FmdmdvThr_5                  6
    #define   LSb16FmdReg_FmdmdvThr1_FmdmdvThr_5                  6
    #define       bFmdReg_FmdmdvThr1_FmdmdvThr_5               6
    #define   MSK32FmdReg_FmdmdvThr1_FmdmdvThr_5                  0x00000FC0

    #define     BA_FmdReg_FmdmdvThr1_FmdmdvThr_6               0x0049
    #define     B16FmdReg_FmdmdvThr1_FmdmdvThr_6               0x0048
    #define   LSb32FmdReg_FmdmdvThr1_FmdmdvThr_6                  12
    #define   LSb16FmdReg_FmdmdvThr1_FmdmdvThr_6                  12
    #define       bFmdReg_FmdmdvThr1_FmdmdvThr_6               6
    #define   MSK32FmdReg_FmdmdvThr1_FmdmdvThr_6                  0x0003F000

    #define     BA_FmdReg_FmdmdvThr1_FmdmdvThr_7               0x004A
    #define     B16FmdReg_FmdmdvThr1_FmdmdvThr_7               0x004A
    #define   LSb32FmdReg_FmdmdvThr1_FmdmdvThr_7                  18
    #define   LSb16FmdReg_FmdmdvThr1_FmdmdvThr_7                  2
    #define       bFmdReg_FmdmdvThr1_FmdmdvThr_7               6
    #define   MSK32FmdReg_FmdmdvThr1_FmdmdvThr_7                  0x00FC0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_FmdReg {
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FieldDifThr_FieldDifThr_0(r32)       _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FieldDifThr_FieldDifThr_0(r32,v)     _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FieldDifThr_FieldDifThr_0(r16)       _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FieldDifThr_FieldDifThr_0(r16,v)     _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FieldDifThr_FieldDifThr_1(r32)       _BFGET_(r32,15, 8)
    #define   SET32FmdReg_FieldDifThr_FieldDifThr_1(r32,v)     _BFSET_(r32,15, 8,v)
    #define   GET16FmdReg_FieldDifThr_FieldDifThr_1(r16)       _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FieldDifThr_FieldDifThr_1(r16,v)     _BFSET_(r16,15, 8,v)

    #define   GET32FmdReg_FieldDifThr_FieldDifThr_2(r32)       _BFGET_(r32,23,16)
    #define   SET32FmdReg_FieldDifThr_FieldDifThr_2(r32,v)     _BFSET_(r32,23,16,v)
    #define   GET16FmdReg_FieldDifThr_FieldDifThr_2(r16)       _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FieldDifThr_FieldDifThr_2(r16,v)     _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FieldDifThr_FieldDifThr_3(r32)       _BFGET_(r32,31,24)
    #define   SET32FmdReg_FieldDifThr_FieldDifThr_3(r32,v)     _BFSET_(r32,31,24,v)
    #define   GET16FmdReg_FieldDifThr_FieldDifThr_3(r16)       _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FieldDifThr_FieldDifThr_3(r16,v)     _BFSET_(r16,15, 8,v)

    #define     w32FmdReg_FieldDifThr                          {\
            UNSG32 uFieldDifThr_FieldDifThr_0                  :  8;\
            UNSG32 uFieldDifThr_FieldDifThr_1                  :  8;\
            UNSG32 uFieldDifThr_FieldDifThr_2                  :  8;\
            UNSG32 uFieldDifThr_FieldDifThr_3                  :  8;\
          }
    union { UNSG32 u32FmdReg_FieldDifThr;
            struct w32FmdReg_FieldDifThr;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdHmeGain0_FmdHmeGain_0(r32)        _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FmdHmeGain0_FmdHmeGain_0(r32,v)      _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FmdHmeGain0_FmdHmeGain_0(r16)        _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeGain0_FmdHmeGain_0(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdHmeGain0_FmdHmeGain_1(r32)        _BFGET_(r32,15, 8)
    #define   SET32FmdReg_FmdHmeGain0_FmdHmeGain_1(r32,v)      _BFSET_(r32,15, 8,v)
    #define   GET16FmdReg_FmdHmeGain0_FmdHmeGain_1(r16)        _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdHmeGain0_FmdHmeGain_1(r16,v)      _BFSET_(r16,15, 8,v)

    #define   GET32FmdReg_FmdHmeGain0_FmdHmeGain_2(r32)        _BFGET_(r32,23,16)
    #define   SET32FmdReg_FmdHmeGain0_FmdHmeGain_2(r32,v)      _BFSET_(r32,23,16,v)
    #define   GET16FmdReg_FmdHmeGain0_FmdHmeGain_2(r16)        _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeGain0_FmdHmeGain_2(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdHmeGain0_FmdHmeGain_3(r32)        _BFGET_(r32,31,24)
    #define   SET32FmdReg_FmdHmeGain0_FmdHmeGain_3(r32,v)      _BFSET_(r32,31,24,v)
    #define   GET16FmdReg_FmdHmeGain0_FmdHmeGain_3(r16)        _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdHmeGain0_FmdHmeGain_3(r16,v)      _BFSET_(r16,15, 8,v)

    #define     w32FmdReg_FmdHmeGain0                          {\
            UNSG32 uFmdHmeGain0_FmdHmeGain_0                   :  8;\
            UNSG32 uFmdHmeGain0_FmdHmeGain_1                   :  8;\
            UNSG32 uFmdHmeGain0_FmdHmeGain_2                   :  8;\
            UNSG32 uFmdHmeGain0_FmdHmeGain_3                   :  8;\
          }
    union { UNSG32 u32FmdReg_FmdHmeGain0;
            struct w32FmdReg_FmdHmeGain0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdHmeGain1_FmdHmeGain_4(r32)        _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FmdHmeGain1_FmdHmeGain_4(r32,v)      _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FmdHmeGain1_FmdHmeGain_4(r16)        _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeGain1_FmdHmeGain_4(r16,v)      _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdHmeGain1_FmdHmeGain_5(r32)        _BFGET_(r32,15, 8)
    #define   SET32FmdReg_FmdHmeGain1_FmdHmeGain_5(r32,v)      _BFSET_(r32,15, 8,v)
    #define   GET16FmdReg_FmdHmeGain1_FmdHmeGain_5(r16)        _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdHmeGain1_FmdHmeGain_5(r16,v)      _BFSET_(r16,15, 8,v)

    #define   GET32FmdReg_FmdHmeGain1_FmdHmeGain_6(r32)        _BFGET_(r32,23,16)
    #define   SET32FmdReg_FmdHmeGain1_FmdHmeGain_6(r32,v)      _BFSET_(r32,23,16,v)
    #define   GET16FmdReg_FmdHmeGain1_FmdHmeGain_6(r16)        _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeGain1_FmdHmeGain_6(r16,v)      _BFSET_(r16, 7, 0,v)

    #define     w32FmdReg_FmdHmeGain1                          {\
            UNSG32 uFmdHmeGain1_FmdHmeGain_4                   :  8;\
            UNSG32 uFmdHmeGain1_FmdHmeGain_5                   :  8;\
            UNSG32 uFmdHmeGain1_FmdHmeGain_6                   :  8;\
            UNSG32 RSVDx8_b24                                  :  8;\
          }
    union { UNSG32 u32FmdReg_FmdHmeGain1;
            struct w32FmdReg_FmdHmeGain1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdHmeOff0_FmdHmeOff_0(r32)          _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FmdHmeOff0_FmdHmeOff_0(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FmdHmeOff0_FmdHmeOff_0(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeOff0_FmdHmeOff_0(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdHmeOff0_FmdHmeOff_1(r32)          _BFGET_(r32,15, 8)
    #define   SET32FmdReg_FmdHmeOff0_FmdHmeOff_1(r32,v)        _BFSET_(r32,15, 8,v)
    #define   GET16FmdReg_FmdHmeOff0_FmdHmeOff_1(r16)          _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdHmeOff0_FmdHmeOff_1(r16,v)        _BFSET_(r16,15, 8,v)

    #define   GET32FmdReg_FmdHmeOff0_FmdHmeOff_2(r32)          _BFGET_(r32,23,16)
    #define   SET32FmdReg_FmdHmeOff0_FmdHmeOff_2(r32,v)        _BFSET_(r32,23,16,v)
    #define   GET16FmdReg_FmdHmeOff0_FmdHmeOff_2(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeOff0_FmdHmeOff_2(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdHmeOff0_FmdHmeOff_3(r32)          _BFGET_(r32,31,24)
    #define   SET32FmdReg_FmdHmeOff0_FmdHmeOff_3(r32,v)        _BFSET_(r32,31,24,v)
    #define   GET16FmdReg_FmdHmeOff0_FmdHmeOff_3(r16)          _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdHmeOff0_FmdHmeOff_3(r16,v)        _BFSET_(r16,15, 8,v)

    #define     w32FmdReg_FmdHmeOff0                           {\
            UNSG32 uFmdHmeOff0_FmdHmeOff_0                     :  8;\
            UNSG32 uFmdHmeOff0_FmdHmeOff_1                     :  8;\
            UNSG32 uFmdHmeOff0_FmdHmeOff_2                     :  8;\
            UNSG32 uFmdHmeOff0_FmdHmeOff_3                     :  8;\
          }
    union { UNSG32 u32FmdReg_FmdHmeOff0;
            struct w32FmdReg_FmdHmeOff0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdHmeOff1_FmdHmeOff_4(r32)          _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FmdHmeOff1_FmdHmeOff_4(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FmdHmeOff1_FmdHmeOff_4(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeOff1_FmdHmeOff_4(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdHmeOff1_FmdHmeOff_5(r32)          _BFGET_(r32,15, 8)
    #define   SET32FmdReg_FmdHmeOff1_FmdHmeOff_5(r32,v)        _BFSET_(r32,15, 8,v)
    #define   GET16FmdReg_FmdHmeOff1_FmdHmeOff_5(r16)          _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdHmeOff1_FmdHmeOff_5(r16,v)        _BFSET_(r16,15, 8,v)

    #define   GET32FmdReg_FmdHmeOff1_FmdHmeOff_6(r32)          _BFGET_(r32,23,16)
    #define   SET32FmdReg_FmdHmeOff1_FmdHmeOff_6(r32,v)        _BFSET_(r32,23,16,v)
    #define   GET16FmdReg_FmdHmeOff1_FmdHmeOff_6(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdHmeOff1_FmdHmeOff_6(r16,v)        _BFSET_(r16, 7, 0,v)

    #define     w32FmdReg_FmdHmeOff1                           {\
            UNSG32 uFmdHmeOff1_FmdHmeOff_4                     :  8;\
            UNSG32 uFmdHmeOff1_FmdHmeOff_5                     :  8;\
            UNSG32 uFmdHmeOff1_FmdHmeOff_6                     :  8;\
            UNSG32 RSVDx10_b24                                 :  8;\
          }
    union { UNSG32 u32FmdReg_FmdHmeOff1;
            struct w32FmdReg_FmdHmeOff1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdHmeThr_FmdHmeNoiseThr(r32)        _BFGET_(r32, 3, 0)
    #define   SET32FmdReg_FmdHmeThr_FmdHmeNoiseThr(r32,v)      _BFSET_(r32, 3, 0,v)
    #define   GET16FmdReg_FmdHmeThr_FmdHmeNoiseThr(r16)        _BFGET_(r16, 3, 0)
    #define   SET16FmdReg_FmdHmeThr_FmdHmeNoiseThr(r16,v)      _BFSET_(r16, 3, 0,v)

    #define   GET32FmdReg_FmdHmeThr_FmdHmeDifThr(r32)          _BFGET_(r32, 6, 4)
    #define   SET32FmdReg_FmdHmeThr_FmdHmeDifThr(r32,v)        _BFSET_(r32, 6, 4,v)
    #define   GET16FmdReg_FmdHmeThr_FmdHmeDifThr(r16)          _BFGET_(r16, 6, 4)
    #define   SET16FmdReg_FmdHmeThr_FmdHmeDifThr(r16,v)        _BFSET_(r16, 6, 4,v)

    #define   GET32FmdReg_FmdHmeThr_FmdHmeLowCnstThr(r32)      _BFGET_(r32,14, 7)
    #define   SET32FmdReg_FmdHmeThr_FmdHmeLowCnstThr(r32,v)    _BFSET_(r32,14, 7,v)
    #define   GET16FmdReg_FmdHmeThr_FmdHmeLowCnstThr(r16)      _BFGET_(r16,14, 7)
    #define   SET16FmdReg_FmdHmeThr_FmdHmeLowCnstThr(r16,v)    _BFSET_(r16,14, 7,v)

    #define   GET32FmdReg_FmdHmeThr_FmdStillThr(r32)           _BFGET_(r32,22,15)
    #define   SET32FmdReg_FmdHmeThr_FmdStillThr(r32,v)         _BFSET_(r32,22,15,v)

    #define     w32FmdReg_FmdHmeThr                            {\
            UNSG32 uFmdHmeThr_FmdHmeNoiseThr                   :  4;\
            UNSG32 uFmdHmeThr_FmdHmeDifThr                     :  3;\
            UNSG32 uFmdHmeThr_FmdHmeLowCnstThr                 :  8;\
            UNSG32 uFmdHmeThr_FmdStillThr                      :  8;\
            UNSG32 RSVDx14_b23                                 :  9;\
          }
    union { UNSG32 u32FmdReg_FmdHmeThr;
            struct w32FmdReg_FmdHmeThr;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit(r32) _BFGET_(r32, 3, 0)
    #define   SET32FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit(r32,v) _BFSET_(r32, 3, 0,v)
    #define   GET16FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit(r16) _BFGET_(r16, 3, 0)
    #define   SET16FmdReg_FmdGhmvShiftBit_FmdGhmvShiftBit(r16,v) _BFSET_(r16, 3, 0,v)

    #define     w32FmdReg_FmdGhmvShiftBit                      {\
            UNSG32 uFmdGhmvShiftBit_FmdGhmvShiftBit            :  4;\
            UNSG32 RSVDx18_b4                                  : 28;\
          }
    union { UNSG32 u32FmdReg_FmdGhmvShiftBit;
            struct w32FmdReg_FmdGhmvShiftBit;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0(r32) _BFGET_(r32, 9, 0)
    #define   SET32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0(r32,v) _BFSET_(r32, 9, 0,v)
    #define   GET16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0(r16) _BFGET_(r16, 9, 0)
    #define   SET16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_0(r16,v) _BFSET_(r16, 9, 0,v)

    #define   GET32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1(r32) _BFGET_(r32,19,10)
    #define   SET32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_1(r32,v) _BFSET_(r32,19,10,v)

    #define   GET32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2(r32) _BFGET_(r32,29,20)
    #define   SET32FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2(r32,v) _BFSET_(r32,29,20,v)
    #define   GET16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2(r16) _BFGET_(r16,13, 4)
    #define   SET16FmdReg_FmdScrTextFixLineDly0_FmdScrTextFixLineDly_2(r16,v) _BFSET_(r16,13, 4,v)

    #define     w32FmdReg_FmdScrTextFixLineDly0                {\
            UNSG32 uFmdScrTextFixLineDly0_FmdScrTextFixLineDly_0 : 10;\
            UNSG32 uFmdScrTextFixLineDly0_FmdScrTextFixLineDly_1 : 10;\
            UNSG32 uFmdScrTextFixLineDly0_FmdScrTextFixLineDly_2 : 10;\
            UNSG32 RSVDx1C_b30                                 :  2;\
          }
    union { UNSG32 u32FmdReg_FmdScrTextFixLineDly0;
            struct w32FmdReg_FmdScrTextFixLineDly0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3(r32) _BFGET_(r32, 9, 0)
    #define   SET32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3(r32,v) _BFSET_(r32, 9, 0,v)
    #define   GET16FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3(r16) _BFGET_(r16, 9, 0)
    #define   SET16FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_3(r16,v) _BFSET_(r16, 9, 0,v)

    #define   GET32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4(r32) _BFGET_(r32,19,10)
    #define   SET32FmdReg_FmdScrTextFixLineDly1_FmdScrTextFixLineDly_4(r32,v) _BFSET_(r32,19,10,v)

    #define     w32FmdReg_FmdScrTextFixLineDly1                {\
            UNSG32 uFmdScrTextFixLineDly1_FmdScrTextFixLineDly_3 : 10;\
            UNSG32 uFmdScrTextFixLineDly1_FmdScrTextFixLineDly_4 : 10;\
            UNSG32 RSVDx20_b20                                 : 12;\
          }
    union { UNSG32 u32FmdReg_FmdScrTextFixLineDly1;
            struct w32FmdReg_FmdScrTextFixLineDly1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdHWEn_FmdHWEn(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32FmdReg_FmdHWEn_FmdHWEn(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16FmdReg_FmdHWEn_FmdHWEn(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16FmdReg_FmdHWEn_FmdHWEn(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32FmdReg_FmdHWEn                              {\
            UNSG32 uFmdHWEn_FmdHWEn                            :  1;\
            UNSG32 RSVDx24_b1                                  : 31;\
          }
    union { UNSG32 u32FmdReg_FmdHWEn;
            struct w32FmdReg_FmdHWEn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly(r32) _BFGET_(r32, 0, 0)
    #define   SET32FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly(r16) _BFGET_(r16, 0, 0)
    #define   SET16FmdReg_ChromaUseMadiOnly_ChromaUseMadiOnly(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32FmdReg_ChromaUseMadiOnly                    {\
            UNSG32 uChromaUseMadiOnly_ChromaUseMadiOnly        :  1;\
            UNSG32 RSVDx28_b1                                  : 31;\
          }
    union { UNSG32 u32FmdReg_ChromaUseMadiOnly;
            struct w32FmdReg_ChromaUseMadiOnly;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_Fmdhmvoff_Fmdhmvoff(r32)             _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_Fmdhmvoff_Fmdhmvoff(r32,v)           _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_Fmdhmvoff_Fmdhmvoff(r16)             _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_Fmdhmvoff_Fmdhmvoff(r16,v)           _BFSET_(r16, 7, 0,v)

    #define     w32FmdReg_Fmdhmvoff                            {\
            UNSG32 uFmdhmvoff_Fmdhmvoff                        :  8;\
            UNSG32 RSVDx2C_b8                                  : 24;\
          }
    union { UNSG32 u32FmdReg_Fmdhmvoff;
            struct w32FmdReg_Fmdhmvoff;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdLmvThr_FmdLmvThr(r32)             _BFGET_(r32, 2, 0)
    #define   SET32FmdReg_FmdLmvThr_FmdLmvThr(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16FmdReg_FmdLmvThr_FmdLmvThr(r16)             _BFGET_(r16, 2, 0)
    #define   SET16FmdReg_FmdLmvThr_FmdLmvThr(r16,v)           _BFSET_(r16, 2, 0,v)

    #define     w32FmdReg_FmdLmvThr                            {\
            UNSG32 uFmdLmvThr_FmdLmvThr                        :  3;\
            UNSG32 RSVDx30_b3                                  : 29;\
          }
    union { UNSG32 u32FmdReg_FmdLmvThr;
            struct w32FmdReg_FmdLmvThr;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0(r32) _BFGET_(r32, 3, 0)
    #define   SET32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0(r32,v) _BFSET_(r32, 3, 0,v)
    #define   GET16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0(r16) _BFGET_(r16, 3, 0)
    #define   SET16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_0(r16,v) _BFSET_(r16, 3, 0,v)

    #define   GET32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1(r32) _BFGET_(r32, 7, 4)
    #define   SET32FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1(r32,v) _BFSET_(r32, 7, 4,v)
    #define   GET16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1(r16) _BFGET_(r16, 7, 4)
    #define   SET16FmdReg_Fmdhmvshiftbits_Fmdhmvshiftbits_1(r16,v) _BFSET_(r16, 7, 4,v)

    #define     w32FmdReg_Fmdhmvshiftbits                      {\
            UNSG32 uFmdhmvshiftbits_Fmdhmvshiftbits_0          :  4;\
            UNSG32 uFmdhmvshiftbits_Fmdhmvshiftbits_1          :  4;\
            UNSG32 RSVDx34_b8                                  : 24;\
          }
    union { UNSG32 u32FmdReg_Fmdhmvshiftbits;
            struct w32FmdReg_Fmdhmvshiftbits;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdhmeThr0_FmdhmvThr_0(r32)          _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FmdhmeThr0_FmdhmvThr_0(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FmdhmeThr0_FmdhmvThr_0(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdhmeThr0_FmdhmvThr_0(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdhmeThr0_FmdhmvThr_1(r32)          _BFGET_(r32,15, 8)
    #define   SET32FmdReg_FmdhmeThr0_FmdhmvThr_1(r32,v)        _BFSET_(r32,15, 8,v)
    #define   GET16FmdReg_FmdhmeThr0_FmdhmvThr_1(r16)          _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdhmeThr0_FmdhmvThr_1(r16,v)        _BFSET_(r16,15, 8,v)

    #define   GET32FmdReg_FmdhmeThr0_FmdhmvThr_2(r32)          _BFGET_(r32,23,16)
    #define   SET32FmdReg_FmdhmeThr0_FmdhmvThr_2(r32,v)        _BFSET_(r32,23,16,v)
    #define   GET16FmdReg_FmdhmeThr0_FmdhmvThr_2(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdhmeThr0_FmdhmvThr_2(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdhmeThr0_FmdhmvThr_3(r32)          _BFGET_(r32,31,24)
    #define   SET32FmdReg_FmdhmeThr0_FmdhmvThr_3(r32,v)        _BFSET_(r32,31,24,v)
    #define   GET16FmdReg_FmdhmeThr0_FmdhmvThr_3(r16)          _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdhmeThr0_FmdhmvThr_3(r16,v)        _BFSET_(r16,15, 8,v)

    #define     w32FmdReg_FmdhmeThr0                           {\
            UNSG32 uFmdhmeThr0_FmdhmvThr_0                     :  8;\
            UNSG32 uFmdhmeThr0_FmdhmvThr_1                     :  8;\
            UNSG32 uFmdhmeThr0_FmdhmvThr_2                     :  8;\
            UNSG32 uFmdhmeThr0_FmdhmvThr_3                     :  8;\
          }
    union { UNSG32 u32FmdReg_FmdhmeThr0;
            struct w32FmdReg_FmdhmeThr0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdhmeThr1_FmdhmvThr_4(r32)          _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FmdhmeThr1_FmdhmvThr_4(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FmdhmeThr1_FmdhmvThr_4(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdhmeThr1_FmdhmvThr_4(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdhmeThr1_FmdhmvThr_5(r32)          _BFGET_(r32,15, 8)
    #define   SET32FmdReg_FmdhmeThr1_FmdhmvThr_5(r32,v)        _BFSET_(r32,15, 8,v)
    #define   GET16FmdReg_FmdhmeThr1_FmdhmvThr_5(r16)          _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdhmeThr1_FmdhmvThr_5(r16,v)        _BFSET_(r16,15, 8,v)

    #define   GET32FmdReg_FmdhmeThr1_FmdhmvThr_6(r32)          _BFGET_(r32,23,16)
    #define   SET32FmdReg_FmdhmeThr1_FmdhmvThr_6(r32,v)        _BFSET_(r32,23,16,v)
    #define   GET16FmdReg_FmdhmeThr1_FmdhmvThr_6(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdhmeThr1_FmdhmvThr_6(r16,v)        _BFSET_(r16, 7, 0,v)

    #define   GET32FmdReg_FmdhmeThr1_FmdhmvThr_7(r32)          _BFGET_(r32,31,24)
    #define   SET32FmdReg_FmdhmeThr1_FmdhmvThr_7(r32,v)        _BFSET_(r32,31,24,v)
    #define   GET16FmdReg_FmdhmeThr1_FmdhmvThr_7(r16)          _BFGET_(r16,15, 8)
    #define   SET16FmdReg_FmdhmeThr1_FmdhmvThr_7(r16,v)        _BFSET_(r16,15, 8,v)

    #define     w32FmdReg_FmdhmeThr1                           {\
            UNSG32 uFmdhmeThr1_FmdhmvThr_4                     :  8;\
            UNSG32 uFmdhmeThr1_FmdhmvThr_5                     :  8;\
            UNSG32 uFmdhmeThr1_FmdhmvThr_6                     :  8;\
            UNSG32 uFmdhmeThr1_FmdhmvThr_7                     :  8;\
          }
    union { UNSG32 u32FmdReg_FmdhmeThr1;
            struct w32FmdReg_FmdhmeThr1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdhmeThr2_FmdhmvThr_8(r32)          _BFGET_(r32, 7, 0)
    #define   SET32FmdReg_FmdhmeThr2_FmdhmvThr_8(r32,v)        _BFSET_(r32, 7, 0,v)
    #define   GET16FmdReg_FmdhmeThr2_FmdhmvThr_8(r16)          _BFGET_(r16, 7, 0)
    #define   SET16FmdReg_FmdhmeThr2_FmdhmvThr_8(r16,v)        _BFSET_(r16, 7, 0,v)

    #define     w32FmdReg_FmdhmeThr2                           {\
            UNSG32 uFmdhmeThr2_FmdhmvThr_8                     :  8;\
            UNSG32 RSVDx40_b8                                  : 24;\
          }
    union { UNSG32 u32FmdReg_FmdhmeThr2;
            struct w32FmdReg_FmdhmeThr2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdmdvThr0_FmdmdvThr_0(r32)          _BFGET_(r32, 5, 0)
    #define   SET32FmdReg_FmdmdvThr0_FmdmdvThr_0(r32,v)        _BFSET_(r32, 5, 0,v)
    #define   GET16FmdReg_FmdmdvThr0_FmdmdvThr_0(r16)          _BFGET_(r16, 5, 0)
    #define   SET16FmdReg_FmdmdvThr0_FmdmdvThr_0(r16,v)        _BFSET_(r16, 5, 0,v)

    #define   GET32FmdReg_FmdmdvThr0_FmdmdvThr_1(r32)          _BFGET_(r32,11, 6)
    #define   SET32FmdReg_FmdmdvThr0_FmdmdvThr_1(r32,v)        _BFSET_(r32,11, 6,v)
    #define   GET16FmdReg_FmdmdvThr0_FmdmdvThr_1(r16)          _BFGET_(r16,11, 6)
    #define   SET16FmdReg_FmdmdvThr0_FmdmdvThr_1(r16,v)        _BFSET_(r16,11, 6,v)

    #define   GET32FmdReg_FmdmdvThr0_FmdmdvThr_2(r32)          _BFGET_(r32,17,12)
    #define   SET32FmdReg_FmdmdvThr0_FmdmdvThr_2(r32,v)        _BFSET_(r32,17,12,v)

    #define   GET32FmdReg_FmdmdvThr0_FmdmdvThr_3(r32)          _BFGET_(r32,23,18)
    #define   SET32FmdReg_FmdmdvThr0_FmdmdvThr_3(r32,v)        _BFSET_(r32,23,18,v)
    #define   GET16FmdReg_FmdmdvThr0_FmdmdvThr_3(r16)          _BFGET_(r16, 7, 2)
    #define   SET16FmdReg_FmdmdvThr0_FmdmdvThr_3(r16,v)        _BFSET_(r16, 7, 2,v)

    #define     w32FmdReg_FmdmdvThr0                           {\
            UNSG32 uFmdmdvThr0_FmdmdvThr_0                     :  6;\
            UNSG32 uFmdmdvThr0_FmdmdvThr_1                     :  6;\
            UNSG32 uFmdmdvThr0_FmdmdvThr_2                     :  6;\
            UNSG32 uFmdmdvThr0_FmdmdvThr_3                     :  6;\
            UNSG32 RSVDx44_b24                                 :  8;\
          }
    union { UNSG32 u32FmdReg_FmdmdvThr0;
            struct w32FmdReg_FmdmdvThr0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FmdReg_FmdmdvThr1_FmdmdvThr_4(r32)          _BFGET_(r32, 5, 0)
    #define   SET32FmdReg_FmdmdvThr1_FmdmdvThr_4(r32,v)        _BFSET_(r32, 5, 0,v)
    #define   GET16FmdReg_FmdmdvThr1_FmdmdvThr_4(r16)          _BFGET_(r16, 5, 0)
    #define   SET16FmdReg_FmdmdvThr1_FmdmdvThr_4(r16,v)        _BFSET_(r16, 5, 0,v)

    #define   GET32FmdReg_FmdmdvThr1_FmdmdvThr_5(r32)          _BFGET_(r32,11, 6)
    #define   SET32FmdReg_FmdmdvThr1_FmdmdvThr_5(r32,v)        _BFSET_(r32,11, 6,v)
    #define   GET16FmdReg_FmdmdvThr1_FmdmdvThr_5(r16)          _BFGET_(r16,11, 6)
    #define   SET16FmdReg_FmdmdvThr1_FmdmdvThr_5(r16,v)        _BFSET_(r16,11, 6,v)

    #define   GET32FmdReg_FmdmdvThr1_FmdmdvThr_6(r32)          _BFGET_(r32,17,12)
    #define   SET32FmdReg_FmdmdvThr1_FmdmdvThr_6(r32,v)        _BFSET_(r32,17,12,v)

    #define   GET32FmdReg_FmdmdvThr1_FmdmdvThr_7(r32)          _BFGET_(r32,23,18)
    #define   SET32FmdReg_FmdmdvThr1_FmdmdvThr_7(r32,v)        _BFSET_(r32,23,18,v)
    #define   GET16FmdReg_FmdmdvThr1_FmdmdvThr_7(r16)          _BFGET_(r16, 7, 2)
    #define   SET16FmdReg_FmdmdvThr1_FmdmdvThr_7(r16,v)        _BFSET_(r16, 7, 2,v)

    #define     w32FmdReg_FmdmdvThr1                           {\
            UNSG32 uFmdmdvThr1_FmdmdvThr_4                     :  6;\
            UNSG32 uFmdmdvThr1_FmdmdvThr_5                     :  6;\
            UNSG32 uFmdmdvThr1_FmdmdvThr_6                     :  6;\
            UNSG32 uFmdmdvThr1_FmdmdvThr_7                     :  6;\
            UNSG32 RSVDx48_b24                                 :  8;\
          }
    union { UNSG32 u32FmdReg_FmdmdvThr1;
            struct w32FmdReg_FmdmdvThr1;
          };
    ///////////////////////////////////////////////////////////
    } SIE_FmdReg;

    typedef union  T32FmdReg_FieldDifThr
          { UNSG32 u32;
            struct w32FmdReg_FieldDifThr;
                 } T32FmdReg_FieldDifThr;
    typedef union  T32FmdReg_FmdHmeGain0
          { UNSG32 u32;
            struct w32FmdReg_FmdHmeGain0;
                 } T32FmdReg_FmdHmeGain0;
    typedef union  T32FmdReg_FmdHmeGain1
          { UNSG32 u32;
            struct w32FmdReg_FmdHmeGain1;
                 } T32FmdReg_FmdHmeGain1;
    typedef union  T32FmdReg_FmdHmeOff0
          { UNSG32 u32;
            struct w32FmdReg_FmdHmeOff0;
                 } T32FmdReg_FmdHmeOff0;
    typedef union  T32FmdReg_FmdHmeOff1
          { UNSG32 u32;
            struct w32FmdReg_FmdHmeOff1;
                 } T32FmdReg_FmdHmeOff1;
    typedef union  T32FmdReg_FmdHmeThr
          { UNSG32 u32;
            struct w32FmdReg_FmdHmeThr;
                 } T32FmdReg_FmdHmeThr;
    typedef union  T32FmdReg_FmdGhmvShiftBit
          { UNSG32 u32;
            struct w32FmdReg_FmdGhmvShiftBit;
                 } T32FmdReg_FmdGhmvShiftBit;
    typedef union  T32FmdReg_FmdScrTextFixLineDly0
          { UNSG32 u32;
            struct w32FmdReg_FmdScrTextFixLineDly0;
                 } T32FmdReg_FmdScrTextFixLineDly0;
    typedef union  T32FmdReg_FmdScrTextFixLineDly1
          { UNSG32 u32;
            struct w32FmdReg_FmdScrTextFixLineDly1;
                 } T32FmdReg_FmdScrTextFixLineDly1;
    typedef union  T32FmdReg_FmdHWEn
          { UNSG32 u32;
            struct w32FmdReg_FmdHWEn;
                 } T32FmdReg_FmdHWEn;
    typedef union  T32FmdReg_ChromaUseMadiOnly
          { UNSG32 u32;
            struct w32FmdReg_ChromaUseMadiOnly;
                 } T32FmdReg_ChromaUseMadiOnly;
    typedef union  T32FmdReg_Fmdhmvoff
          { UNSG32 u32;
            struct w32FmdReg_Fmdhmvoff;
                 } T32FmdReg_Fmdhmvoff;
    typedef union  T32FmdReg_FmdLmvThr
          { UNSG32 u32;
            struct w32FmdReg_FmdLmvThr;
                 } T32FmdReg_FmdLmvThr;
    typedef union  T32FmdReg_Fmdhmvshiftbits
          { UNSG32 u32;
            struct w32FmdReg_Fmdhmvshiftbits;
                 } T32FmdReg_Fmdhmvshiftbits;
    typedef union  T32FmdReg_FmdhmeThr0
          { UNSG32 u32;
            struct w32FmdReg_FmdhmeThr0;
                 } T32FmdReg_FmdhmeThr0;
    typedef union  T32FmdReg_FmdhmeThr1
          { UNSG32 u32;
            struct w32FmdReg_FmdhmeThr1;
                 } T32FmdReg_FmdhmeThr1;
    typedef union  T32FmdReg_FmdhmeThr2
          { UNSG32 u32;
            struct w32FmdReg_FmdhmeThr2;
                 } T32FmdReg_FmdhmeThr2;
    typedef union  T32FmdReg_FmdmdvThr0
          { UNSG32 u32;
            struct w32FmdReg_FmdmdvThr0;
                 } T32FmdReg_FmdmdvThr0;
    typedef union  T32FmdReg_FmdmdvThr1
          { UNSG32 u32;
            struct w32FmdReg_FmdmdvThr1;
                 } T32FmdReg_FmdmdvThr1;
    ///////////////////////////////////////////////////////////

    typedef union  TFmdReg_FieldDifThr
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FieldDifThr;
                   };
                 } TFmdReg_FieldDifThr;
    typedef union  TFmdReg_FmdHmeGain0
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdHmeGain0;
                   };
                 } TFmdReg_FmdHmeGain0;
    typedef union  TFmdReg_FmdHmeGain1
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdHmeGain1;
                   };
                 } TFmdReg_FmdHmeGain1;
    typedef union  TFmdReg_FmdHmeOff0
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdHmeOff0;
                   };
                 } TFmdReg_FmdHmeOff0;
    typedef union  TFmdReg_FmdHmeOff1
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdHmeOff1;
                   };
                 } TFmdReg_FmdHmeOff1;
    typedef union  TFmdReg_FmdHmeThr
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdHmeThr;
                   };
                 } TFmdReg_FmdHmeThr;
    typedef union  TFmdReg_FmdGhmvShiftBit
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdGhmvShiftBit;
                   };
                 } TFmdReg_FmdGhmvShiftBit;
    typedef union  TFmdReg_FmdScrTextFixLineDly0
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdScrTextFixLineDly0;
                   };
                 } TFmdReg_FmdScrTextFixLineDly0;
    typedef union  TFmdReg_FmdScrTextFixLineDly1
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdScrTextFixLineDly1;
                   };
                 } TFmdReg_FmdScrTextFixLineDly1;
    typedef union  TFmdReg_FmdHWEn
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdHWEn;
                   };
                 } TFmdReg_FmdHWEn;
    typedef union  TFmdReg_ChromaUseMadiOnly
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_ChromaUseMadiOnly;
                   };
                 } TFmdReg_ChromaUseMadiOnly;
    typedef union  TFmdReg_Fmdhmvoff
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_Fmdhmvoff;
                   };
                 } TFmdReg_Fmdhmvoff;
    typedef union  TFmdReg_FmdLmvThr
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdLmvThr;
                   };
                 } TFmdReg_FmdLmvThr;
    typedef union  TFmdReg_Fmdhmvshiftbits
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_Fmdhmvshiftbits;
                   };
                 } TFmdReg_Fmdhmvshiftbits;
    typedef union  TFmdReg_FmdhmeThr0
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdhmeThr0;
                   };
                 } TFmdReg_FmdhmeThr0;
    typedef union  TFmdReg_FmdhmeThr1
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdhmeThr1;
                   };
                 } TFmdReg_FmdhmeThr1;
    typedef union  TFmdReg_FmdhmeThr2
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdhmeThr2;
                   };
                 } TFmdReg_FmdhmeThr2;
    typedef union  TFmdReg_FmdmdvThr0
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdmdvThr0;
                   };
                 } TFmdReg_FmdmdvThr0;
    typedef union  TFmdReg_FmdmdvThr1
          { UNSG32 u32[1];
            struct {
            struct w32FmdReg_FmdmdvThr1;
                   };
                 } TFmdReg_FmdmdvThr1;

    ///////////////////////////////////////////////////////////
     SIGN32 FmdReg_drvrd(SIE_FmdReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 FmdReg_drvwr(SIE_FmdReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void FmdReg_reset(SIE_FmdReg *p);
     SIGN32 FmdReg_cmp  (SIE_FmdReg *p, SIE_FmdReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define FmdReg_check(p,pie,pfx,hLOG) FmdReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define FmdReg_print(p,    pfx,hLOG) FmdReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: FmdReg
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: DeIntCore.h
////////////////////////////////////////////////////////////

