//////
/// don't edit! auto-generated by docc: bcmCR5.h
////////////////////////////////////////////////////////////
#ifndef bcmCR5_h
#define bcmCR5_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE OneReg                                   (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 OneReg               (RW)
///               %unsigned 8  Byte0                     0x0
///               %unsigned 8  Byte1                     0x0
///               %unsigned 8  Byte2                     0x0
///               %unsigned 8  Byte3                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_OneReg
#define h_OneReg (){}

    #define     RA_OneReg_OneReg                               0x0000

    #define     BA_OneReg_OneReg_Byte0                         0x0000
    #define     B16OneReg_OneReg_Byte0                         0x0000
    #define   LSb32OneReg_OneReg_Byte0                            0
    #define   LSb16OneReg_OneReg_Byte0                            0
    #define       bOneReg_OneReg_Byte0                         8
    #define   MSK32OneReg_OneReg_Byte0                            0x000000FF

    #define     BA_OneReg_OneReg_Byte1                         0x0001
    #define     B16OneReg_OneReg_Byte1                         0x0000
    #define   LSb32OneReg_OneReg_Byte1                            8
    #define   LSb16OneReg_OneReg_Byte1                            8
    #define       bOneReg_OneReg_Byte1                         8
    #define   MSK32OneReg_OneReg_Byte1                            0x0000FF00

    #define     BA_OneReg_OneReg_Byte2                         0x0002
    #define     B16OneReg_OneReg_Byte2                         0x0002
    #define   LSb32OneReg_OneReg_Byte2                            16
    #define   LSb16OneReg_OneReg_Byte2                            0
    #define       bOneReg_OneReg_Byte2                         8
    #define   MSK32OneReg_OneReg_Byte2                            0x00FF0000

    #define     BA_OneReg_OneReg_Byte3                         0x0003
    #define     B16OneReg_OneReg_Byte3                         0x0002
    #define   LSb32OneReg_OneReg_Byte3                            24
    #define   LSb16OneReg_OneReg_Byte3                            8
    #define       bOneReg_OneReg_Byte3                         8
    #define   MSK32OneReg_OneReg_Byte3                            0xFF000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_OneReg {
    ///////////////////////////////////////////////////////////
    #define   GET32OneReg_OneReg_Byte0(r32)                    _BFGET_(r32, 7, 0)
    #define   SET32OneReg_OneReg_Byte0(r32,v)                  _BFSET_(r32, 7, 0,v)
    #define   GET16OneReg_OneReg_Byte0(r16)                    _BFGET_(r16, 7, 0)
    #define   SET16OneReg_OneReg_Byte0(r16,v)                  _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_OneReg_Byte1(r32)                    _BFGET_(r32,15, 8)
    #define   SET32OneReg_OneReg_Byte1(r32,v)                  _BFSET_(r32,15, 8,v)
    #define   GET16OneReg_OneReg_Byte1(r16)                    _BFGET_(r16,15, 8)
    #define   SET16OneReg_OneReg_Byte1(r16,v)                  _BFSET_(r16,15, 8,v)

    #define   GET32OneReg_OneReg_Byte2(r32)                    _BFGET_(r32,23,16)
    #define   SET32OneReg_OneReg_Byte2(r32,v)                  _BFSET_(r32,23,16,v)
    #define   GET16OneReg_OneReg_Byte2(r16)                    _BFGET_(r16, 7, 0)
    #define   SET16OneReg_OneReg_Byte2(r16,v)                  _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_OneReg_Byte3(r32)                    _BFGET_(r32,31,24)
    #define   SET32OneReg_OneReg_Byte3(r32,v)                  _BFSET_(r32,31,24,v)
    #define   GET16OneReg_OneReg_Byte3(r16)                    _BFGET_(r16,15, 8)
    #define   SET16OneReg_OneReg_Byte3(r16,v)                  _BFSET_(r16,15, 8,v)

    #define     w32OneReg_OneReg                               {\
            UNSG32 uOneReg_Byte0                               :  8;\
            UNSG32 uOneReg_Byte1                               :  8;\
            UNSG32 uOneReg_Byte2                               :  8;\
            UNSG32 uOneReg_Byte3                               :  8;\
          }
    union { UNSG32 u32OneReg_OneReg;
            struct w32OneReg_OneReg;
          };
    ///////////////////////////////////////////////////////////
    } SIE_OneReg;

    typedef union  T32OneReg_OneReg
          { UNSG32 u32;
            struct w32OneReg_OneReg;
                 } T32OneReg_OneReg;
    ///////////////////////////////////////////////////////////

    typedef union  TOneReg_OneReg
          { UNSG32 u32[1];
            struct {
            struct w32OneReg_OneReg;
                   };
                 } TOneReg_OneReg;

    ///////////////////////////////////////////////////////////
     SIGN32 OneReg_drvrd(SIE_OneReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 OneReg_drvwr(SIE_OneReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void OneReg_reset(SIE_OneReg *p);
     SIGN32 OneReg_cmp  (SIE_OneReg *p, SIE_OneReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define OneReg_check(p,pie,pfx,hLOG) OneReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define OneReg_print(p,    pfx,hLOG) OneReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: OneReg
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE OneReg_RO                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 OneReg_RO            (R-)
///               %unsigned 8  Byte0                     0x0
///               %unsigned 8  Byte1                     0x0
///               %unsigned 8  Byte2                     0x0
///               %unsigned 8  Byte3                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_OneReg_RO
#define h_OneReg_RO (){}

    #define     RA_OneReg_RO_OneReg_RO                         0x0000

    #define     BA_OneReg_RO_OneReg_RO_Byte0                   0x0000
    #define     B16OneReg_RO_OneReg_RO_Byte0                   0x0000
    #define   LSb32OneReg_RO_OneReg_RO_Byte0                      0
    #define   LSb16OneReg_RO_OneReg_RO_Byte0                      0
    #define       bOneReg_RO_OneReg_RO_Byte0                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte0                      0x000000FF

    #define     BA_OneReg_RO_OneReg_RO_Byte1                   0x0001
    #define     B16OneReg_RO_OneReg_RO_Byte1                   0x0000
    #define   LSb32OneReg_RO_OneReg_RO_Byte1                      8
    #define   LSb16OneReg_RO_OneReg_RO_Byte1                      8
    #define       bOneReg_RO_OneReg_RO_Byte1                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte1                      0x0000FF00

    #define     BA_OneReg_RO_OneReg_RO_Byte2                   0x0002
    #define     B16OneReg_RO_OneReg_RO_Byte2                   0x0002
    #define   LSb32OneReg_RO_OneReg_RO_Byte2                      16
    #define   LSb16OneReg_RO_OneReg_RO_Byte2                      0
    #define       bOneReg_RO_OneReg_RO_Byte2                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte2                      0x00FF0000

    #define     BA_OneReg_RO_OneReg_RO_Byte3                   0x0003
    #define     B16OneReg_RO_OneReg_RO_Byte3                   0x0002
    #define   LSb32OneReg_RO_OneReg_RO_Byte3                      24
    #define   LSb16OneReg_RO_OneReg_RO_Byte3                      8
    #define       bOneReg_RO_OneReg_RO_Byte3                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte3                      0xFF000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_OneReg_RO {
    ///////////////////////////////////////////////////////////
    #define   GET32OneReg_RO_OneReg_RO_Byte0(r32)              _BFGET_(r32, 7, 0)
    #define   SET32OneReg_RO_OneReg_RO_Byte0(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte0(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_RO_OneReg_RO_Byte0(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte1(r32)              _BFGET_(r32,15, 8)
    #define   SET32OneReg_RO_OneReg_RO_Byte1(r32,v)            _BFSET_(r32,15, 8,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte1(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_RO_OneReg_RO_Byte1(r16,v)            _BFSET_(r16,15, 8,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte2(r32)              _BFGET_(r32,23,16)
    #define   SET32OneReg_RO_OneReg_RO_Byte2(r32,v)            _BFSET_(r32,23,16,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte2(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_RO_OneReg_RO_Byte2(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte3(r32)              _BFGET_(r32,31,24)
    #define   SET32OneReg_RO_OneReg_RO_Byte3(r32,v)            _BFSET_(r32,31,24,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte3(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_RO_OneReg_RO_Byte3(r16,v)            _BFSET_(r16,15, 8,v)

    #define     w32OneReg_RO_OneReg_RO                         {\
            UNSG32 uOneReg_RO_Byte0                            :  8;\
            UNSG32 uOneReg_RO_Byte1                            :  8;\
            UNSG32 uOneReg_RO_Byte2                            :  8;\
            UNSG32 uOneReg_RO_Byte3                            :  8;\
          }
    union { UNSG32 u32OneReg_RO_OneReg_RO;
            struct w32OneReg_RO_OneReg_RO;
          };
    ///////////////////////////////////////////////////////////
    } SIE_OneReg_RO;

    typedef union  T32OneReg_RO_OneReg_RO
          { UNSG32 u32;
            struct w32OneReg_RO_OneReg_RO;
                 } T32OneReg_RO_OneReg_RO;
    ///////////////////////////////////////////////////////////

    typedef union  TOneReg_RO_OneReg_RO
          { UNSG32 u32[1];
            struct {
            struct w32OneReg_RO_OneReg_RO;
                   };
                 } TOneReg_RO_OneReg_RO;

    ///////////////////////////////////////////////////////////
     SIGN32 OneReg_RO_drvrd(SIE_OneReg_RO *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 OneReg_RO_drvwr(SIE_OneReg_RO *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void OneReg_RO_reset(SIE_OneReg_RO *p);
     SIGN32 OneReg_RO_cmp  (SIE_OneReg_RO *p, SIE_OneReg_RO *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define OneReg_RO_check(p,pie,pfx,hLOG) OneReg_RO_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define OneReg_RO_print(p,    pfx,hLOG) OneReg_RO_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: OneReg_RO
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE WTM                                      (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SIDECHANNEL          (P)
///               %unsigned 1  SIDECHANNEL               0x0
///               %%        31         # Stuffing bits...
///     @ 0x00004 PWRMONITOR           (P)
///               %unsigned 1  PWRMONITOR                0x0
///               %%        31         # Stuffing bits...
///     @ 0x00008 ECPEN                (P)
///               %unsigned 1  ECPEN                     0x1
///               %%        31         # Stuffing bits...
///     @ 0x0000C LCS                  (P)
///               %unsigned 32 LCS                       0x0
///     @ 0x00010                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00020 MONITOROUT           (P)
///               %unsigned 16 MONITOROUT                
///               %%        16         # Stuffing bits...
///     @ 0x00024 TRUSTLEVEL           (P)
///               %unsigned 8  TRUSTLEVEL                
///               %%        24         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      40B, bits:      59b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_WTM
#define h_WTM (){}

    #define     RA_WTM_SIDECHANNEL                             0x0000

    #define     BA_WTM_SIDECHANNEL_SIDECHANNEL                 0x0000
    #define     B16WTM_SIDECHANNEL_SIDECHANNEL                 0x0000
    #define   LSb32WTM_SIDECHANNEL_SIDECHANNEL                    0
    #define   LSb16WTM_SIDECHANNEL_SIDECHANNEL                    0
    #define       bWTM_SIDECHANNEL_SIDECHANNEL                 1
    #define   MSK32WTM_SIDECHANNEL_SIDECHANNEL                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_WTM_PWRMONITOR                              0x0004

    #define     BA_WTM_PWRMONITOR_PWRMONITOR                   0x0004
    #define     B16WTM_PWRMONITOR_PWRMONITOR                   0x0004
    #define   LSb32WTM_PWRMONITOR_PWRMONITOR                      0
    #define   LSb16WTM_PWRMONITOR_PWRMONITOR                      0
    #define       bWTM_PWRMONITOR_PWRMONITOR                   1
    #define   MSK32WTM_PWRMONITOR_PWRMONITOR                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_WTM_ECPEN                                   0x0008

    #define     BA_WTM_ECPEN_ECPEN                             0x0008
    #define     B16WTM_ECPEN_ECPEN                             0x0008
    #define   LSb32WTM_ECPEN_ECPEN                                0
    #define   LSb16WTM_ECPEN_ECPEN                                0
    #define       bWTM_ECPEN_ECPEN                             1
    #define   MSK32WTM_ECPEN_ECPEN                                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_WTM_LCS                                     0x000C

    #define     BA_WTM_LCS_LCS                                 0x000C
    #define     B16WTM_LCS_LCS                                 0x000C
    #define   LSb32WTM_LCS_LCS                                    0
    #define   LSb16WTM_LCS_LCS                                    0
    #define       bWTM_LCS_LCS                                 32
    #define   MSK32WTM_LCS_LCS                                    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_WTM_MONITOROUT                              0x0020

    #define     BA_WTM_MONITOROUT_MONITOROUT                   0x0020
    #define     B16WTM_MONITOROUT_MONITOROUT                   0x0020
    #define   LSb32WTM_MONITOROUT_MONITOROUT                      0
    #define   LSb16WTM_MONITOROUT_MONITOROUT                      0
    #define       bWTM_MONITOROUT_MONITOROUT                   16
    #define   MSK32WTM_MONITOROUT_MONITOROUT                      0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_WTM_TRUSTLEVEL                              0x0024

    #define     BA_WTM_TRUSTLEVEL_TRUSTLEVEL                   0x0024
    #define     B16WTM_TRUSTLEVEL_TRUSTLEVEL                   0x0024
    #define   LSb32WTM_TRUSTLEVEL_TRUSTLEVEL                      0
    #define   LSb16WTM_TRUSTLEVEL_TRUSTLEVEL                      0
    #define       bWTM_TRUSTLEVEL_TRUSTLEVEL                   8
    #define   MSK32WTM_TRUSTLEVEL_TRUSTLEVEL                      0x000000FF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_WTM {
    ///////////////////////////////////////////////////////////
    #define   GET32WTM_SIDECHANNEL_SIDECHANNEL(r32)            _BFGET_(r32, 0, 0)
    #define   SET32WTM_SIDECHANNEL_SIDECHANNEL(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16WTM_SIDECHANNEL_SIDECHANNEL(r16)            _BFGET_(r16, 0, 0)
    #define   SET16WTM_SIDECHANNEL_SIDECHANNEL(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32WTM_SIDECHANNEL                             {\
            UNSG32 uSIDECHANNEL_SIDECHANNEL                    :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32WTM_SIDECHANNEL;
            struct w32WTM_SIDECHANNEL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32WTM_PWRMONITOR_PWRMONITOR(r32)              _BFGET_(r32, 0, 0)
    #define   SET32WTM_PWRMONITOR_PWRMONITOR(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16WTM_PWRMONITOR_PWRMONITOR(r16)              _BFGET_(r16, 0, 0)
    #define   SET16WTM_PWRMONITOR_PWRMONITOR(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32WTM_PWRMONITOR                              {\
            UNSG32 uPWRMONITOR_PWRMONITOR                      :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32WTM_PWRMONITOR;
            struct w32WTM_PWRMONITOR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32WTM_ECPEN_ECPEN(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32WTM_ECPEN_ECPEN(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16WTM_ECPEN_ECPEN(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16WTM_ECPEN_ECPEN(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32WTM_ECPEN                                   {\
            UNSG32 uECPEN_ECPEN                                :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32WTM_ECPEN;
            struct w32WTM_ECPEN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32WTM_LCS_LCS(r32)                            _BFGET_(r32,31, 0)
    #define   SET32WTM_LCS_LCS(r32,v)                          _BFSET_(r32,31, 0,v)

    #define     w32WTM_LCS                                     {\
            UNSG32 uLCS_LCS                                    : 32;\
          }
    union { UNSG32 u32WTM_LCS;
            struct w32WTM_LCS;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx10                                     [16];
    ///////////////////////////////////////////////////////////
    #define   GET32WTM_MONITOROUT_MONITOROUT(r32)              _BFGET_(r32,15, 0)
    #define   SET32WTM_MONITOROUT_MONITOROUT(r32,v)            _BFSET_(r32,15, 0,v)
    #define   GET16WTM_MONITOROUT_MONITOROUT(r16)              _BFGET_(r16,15, 0)
    #define   SET16WTM_MONITOROUT_MONITOROUT(r16,v)            _BFSET_(r16,15, 0,v)

    #define     w32WTM_MONITOROUT                              {\
            UNSG32 uMONITOROUT_MONITOROUT                      : 16;\
            UNSG32 RSVDx20_b16                                 : 16;\
          }
    union { UNSG32 u32WTM_MONITOROUT;
            struct w32WTM_MONITOROUT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32WTM_TRUSTLEVEL_TRUSTLEVEL(r32)              _BFGET_(r32, 7, 0)
    #define   SET32WTM_TRUSTLEVEL_TRUSTLEVEL(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16WTM_TRUSTLEVEL_TRUSTLEVEL(r16)              _BFGET_(r16, 7, 0)
    #define   SET16WTM_TRUSTLEVEL_TRUSTLEVEL(r16,v)            _BFSET_(r16, 7, 0,v)

    #define     w32WTM_TRUSTLEVEL                              {\
            UNSG32 uTRUSTLEVEL_TRUSTLEVEL                      :  8;\
            UNSG32 RSVDx24_b8                                  : 24;\
          }
    union { UNSG32 u32WTM_TRUSTLEVEL;
            struct w32WTM_TRUSTLEVEL;
          };
    ///////////////////////////////////////////////////////////
    } SIE_WTM;

    typedef union  T32WTM_SIDECHANNEL
          { UNSG32 u32;
            struct w32WTM_SIDECHANNEL;
                 } T32WTM_SIDECHANNEL;
    typedef union  T32WTM_PWRMONITOR
          { UNSG32 u32;
            struct w32WTM_PWRMONITOR;
                 } T32WTM_PWRMONITOR;
    typedef union  T32WTM_ECPEN
          { UNSG32 u32;
            struct w32WTM_ECPEN;
                 } T32WTM_ECPEN;
    typedef union  T32WTM_LCS
          { UNSG32 u32;
            struct w32WTM_LCS;
                 } T32WTM_LCS;
    typedef union  T32WTM_MONITOROUT
          { UNSG32 u32;
            struct w32WTM_MONITOROUT;
                 } T32WTM_MONITOROUT;
    typedef union  T32WTM_TRUSTLEVEL
          { UNSG32 u32;
            struct w32WTM_TRUSTLEVEL;
                 } T32WTM_TRUSTLEVEL;
    ///////////////////////////////////////////////////////////

    typedef union  TWTM_SIDECHANNEL
          { UNSG32 u32[1];
            struct {
            struct w32WTM_SIDECHANNEL;
                   };
                 } TWTM_SIDECHANNEL;
    typedef union  TWTM_PWRMONITOR
          { UNSG32 u32[1];
            struct {
            struct w32WTM_PWRMONITOR;
                   };
                 } TWTM_PWRMONITOR;
    typedef union  TWTM_ECPEN
          { UNSG32 u32[1];
            struct {
            struct w32WTM_ECPEN;
                   };
                 } TWTM_ECPEN;
    typedef union  TWTM_LCS
          { UNSG32 u32[1];
            struct {
            struct w32WTM_LCS;
                   };
                 } TWTM_LCS;
    typedef union  TWTM_MONITOROUT
          { UNSG32 u32[1];
            struct {
            struct w32WTM_MONITOROUT;
                   };
                 } TWTM_MONITOROUT;
    typedef union  TWTM_TRUSTLEVEL
          { UNSG32 u32[1];
            struct {
            struct w32WTM_TRUSTLEVEL;
                   };
                 } TWTM_TRUSTLEVEL;

    ///////////////////////////////////////////////////////////
     SIGN32 WTM_drvrd(SIE_WTM *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 WTM_drvwr(SIE_WTM *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void WTM_reset(SIE_WTM *p);
     SIGN32 WTM_cmp  (SIE_WTM *p, SIE_WTM *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define WTM_check(p,pie,pfx,hLOG) WTM_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define WTM_print(p,    pfx,hLOG) WTM_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: WTM
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE CR5                                      (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ACLKENM              (P)
///               %unsigned 1  ACLKENM                   0x1
///                                    ###
///                                    * Clock enable for the AXI master port
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00004 PCLKENDBG            (P)
///               %unsigned 1  PCLKENDBG                 0x1
///                                    ###
///                                    * Clock enable for PCLKDBG
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 PRESETDBGn           (P)
///               %unsigned 1  PRESETDBGn                0x1
///                                    ###
///                                    * Reset debug logic.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C nCPUHALT             (P)
///               %unsigned 1  nCPUHALT                  0x1
///                                    ###
///                                    * Processor halt after reset.
///                                    * 0: halt
///                                    * 1: not halt
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00010 VINITHI              (P)
///               %unsigned 1  VINITHI                   0x0
///                                    ###
///                                    * Reset V-bit value. When HIGH indicates HIVECS mode at reset.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00014 CFGEE                (P)
///               %unsigned 1  CFGEE                     0x0
///                                    ###
///                                    * Reset EE-bit value. When HIGH indicates the implementation
///                                    * uses BE-8 mode for exceptions at reset.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00018 CFGIE                (P)
///               %unsigned 1  CFGIE                     0x0
///                                    ###
///                                    * Instruction side endianness, reflected in the IE-bit. When HIGH
///                                    * indicates that big endian instruction fetch is used.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0001C TEINIT               (P)
///               %unsigned 1  TEINIT                    0x0
///                                    ###
///                                    * Reset TE-bit value. Determines exception handling state at reset.
///                                    * When set to:
///                                    * 0 = ARM
///                                    * 1 = Thumb.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00020 CFGNMFI              (P)
///               %unsigned 1  CFGNMFI                   0x0
///                                    ###
///                                    * When HIGH, enable non-maskable Fast Interrupts. Reflected in
///                                    * the NMFI bit.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00024 INTSYNCEN            (P)
///               %unsigned 1  INTSYNCEN                 0x1
///                                    ###
///                                    * Tie HIGH if the interrupt inputs are asynchronous to CLKIN.
///                                    * Tie LOW if the interrupt inputs are synchronous to CLKIN.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00028 IRQADDRVSYNCEN       (P)
///               %unsigned 1  IRQADDRVSYNCEN            0x0
///                                    ###
///                                    * Tie HIGH if the IRQADDRV input from the VIC is
///                                    * asynchronous to CLKIN.
///                                    * Tie LOW if the IRQADDRV input from the VIC is
///                                    * synchronous to CLKIN.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0002C DBGNOCLKSTOP         (P)
///               %unsigned 1  DBGNOCLKSTOP              0x0
///                                    ###
///                                    * Processor does not stop the clocks when entering WFI state.a
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00030 IRQADDRV             (P)
///               %unsigned 1  IRQADDRV                  0x0
///                                    ###
///                                    * Indicates IRQADDR is valid.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00034 IRQADDR              (P)
///               %unsigned 32 IRQADDR                   0x0
///                                    ###
///                                    * IRQADDR[31:2] used
///                                    ###
///     @ 0x00038 DBGEN                (P)
///               %unsigned 1  DBGEN                     0x1
///                                    ###
///                                    * Debug enable
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0003C NIDEN                (P)
///               %unsigned 1  NIDEN                     0x1
///                                    ###
///                                    * Non-invasive debug enable
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00040 EDBGRQ               (P)
///               %unsigned 1  EDBGRQ                    0x0
///                                    ###
///                                    * External debug request
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00044 DBGROMADDR           (P)
///               %unsigned 32 DBGROMADDR                0xF6800000
///                                    ###
///                                    * Debug ROM physical address
///                                    * [31:12] used
///                                    * Per JIRA[BG5CTPZ1-75, set the reset value to MEMMAP_CORESIGHT_REG_BASE
///                                    ###
///     @ 0x00048 DBGROMADDRV          (P)
///               %unsigned 1  DBGROMADDRV               0x1
///                                    ###
///                                    * Debug ROM physical address valid
///                                    * Per JIRA[BG5CTPZ1-75, set the reset value to 1 valid
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0004C DBGSELFADDR          (P)
///               %unsigned 32 DBGSELFADDR               0x0
///                                    ###
///                                    * Debug self-address offset
///                                    * [31:12] used
///                                    ###
///     @ 0x00050 DBGSELFADDRV         (P)
///               %unsigned 1  DBGSELFADDRV              0x0
///                                    ###
///                                    * Debug self-address offset valid
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00054 DBGRESTART           (P)
///               %unsigned 1  DBGRESTART                0x0
///                                    ###
///                                    * External restart request
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00058 PARITYLEVEL          (P)
///               %unsigned 1  PARITYLEVEL               0x0
///                                    ###
///                                    * Selects between odd and even parity for caches and buses.
///                                    * Tie LOW for even parity
///                                    * Tie HIGH for odd parity.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0005C GROUPID              (P)
///               %unsigned 4  GROUPID                   0x0
///                                    ###
///                                    * ID of Cortex-R5 processor group (reflected in MPIDR).
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00060 LOCZRAMA             (P)
///               %unsigned 1  LOCZRAMA                  0x0
///                                    ###
///                                    * When HIGH indicates ATCM initial base address is zero and BTCM base address is
///                                    * implementation-defined.
///                                    * When LOW indicates BTCM initial base address is zero and ATCM base address is
///                                    * implementation-defined.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00064 PARECCENRAM          (P)
///               %unsigned 3  PARECCENRAM               0x0
///                                    ###
///                                    * TCMs ECC check enable. Tie each bit HIGH to enable ECC checking on the appropriate
///                                    * TCM at reset. The bit allocations are as follows:
///                                    * [2] = B1TCMa
///                                    * [1] = B0TCMa
///                                    * [0] = ATCM.
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00068 ERRENRAM             (P)
///               %unsigned 3  ERRENRAM                  0x0
///                                    ###
///                                    * TCMs external error enable. Tie each bit high to enable the external error signals for each
///                                    * TCM at reset. The bit allocations are as follows:
///                                    * [2] = B1TCM
///                                    * [1] = B0TCM
///                                    * [0] = ATCM.
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x0006C INITPPX              (P)
///               %unsigned 1  INITPPX                   0x0
///                                    ###
///                                    * AXI peripheral interface is enabled out-of-reset
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00070 INITPPH              (P)
///               %unsigned 1  INITPPH                   0x0
///                                    ###
///                                    * AHB peripheral interface is enabled out-of-reset
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00074 PPXBASE              (P)
///               %unsigned 32 PPXBASE                   0x0
///                                    ###
///                                    * Base address of AXI peripheral interface. Must be size aligned.
///                                    ###
///     @ 0x00078 PPXSIZE              (P)
///               %unsigned 5  PPXSIZE                   0x0
///                                    ###
///                                    * Size of AXI peripheral interface.
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x0007C PPVBASE              (P)
///               %unsigned 32 PPVBASE                   0x0
///                                    ###
///                                    * Base address of virtual-AXI peripheral interface. Must be within AXI PP and size-aligned.
///                                    * The virtual AXI peripheral interface region must be the same size or smaller than the AXI
///                                    * peripheral interface.
///                                    ###
///     @ 0x00080 PPVSIZE              (P)
///               %unsigned 5  PPVSIZE                   0x0
///                                    ###
///                                    * Size of virtual-AXI peripheral interface.
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x00084 EVENTI               (P)
///               %unsigned 1  EVENTI                    0x0
///               %%        31         # Stuffing bits...
///     @ 0x00088 nCR5RESET            (P)
///               %unsigned 1  nCR5RESET                 0x0
///               %%        31         # Stuffing bits...
///     @ 0x0008C WFIPIPESTOPPED       (P)
///               %unsigned 1  WFIPIPESTOPPED            
///                                    ###
///                                    * When LOW, this indicates the CPU is in standby mode because of a WFI instruction. The
///                                    * CPU pipeline is inactive.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00090 WFEPIPESTOPPED       (P)
///               %unsigned 1  WFEPIPESTOPPED            
///                                    ###
///                                    * When LOW, this indicates that the CPU is in standby mode because of a WFE instruction.
///                                    * The CPU pipeline is inactive..
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00094 CLKSTOPPED           (P)
///               %unsigned 1  CLKSTOPPED                
///                                    ###
///                                    * When LOW, this indicates clock has been stopped because processor is in Standby Mode.
///                                    * It is never asserted without one of WFIPIPESTOPPEDm or WFEPIPESTOPPEDm.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00098 PMUIRQ               (P)
///               %unsigned 1  PMUIRQ                    
///               %%        31         # Stuffing bits...
///     @ 0x0009C EVENTO               (P)
///               %unsigned 1  EVENTO                    
///               %%        31         # Stuffing bits...
///     @ 0x000A0 DBGACK               (P)
///               %unsigned 1  DBGACK                    
///                                    ###
///                                    * Debug acknowledge
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000A4 DBGRSTREQ            (P)
///               %unsigned 1  DBGRSTREQ                 
///                                    ###
///                                    * Request reset from debug logic
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000A8 DBGTRIGGER           (P)
///               %unsigned 1  DBGTRIGGER                
///                                    ###
///                                    * External debug request taken
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000AC COMMRX               (P)
///               %unsigned 1  COMMRX                    
///                                    ###
///                                    * DBGDTRRX full
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000B0 COMMTX               (P)
///               %unsigned 1  COMMTX                    
///                                    ###
///                                    * DBGDTRTX empty
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000B4 DBGRESTARTED         (P)
///               %unsigned 1  DBGRESTARTED              
///                                    ###
///                                    * Handshake for DBGRESTART
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000B8 DBGNOPWRDWN          (P)
///               %unsigned 1  DBGNOPWRDWN               
///                                    ###
///                                    * No power down request
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     188B, bits:     217b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_CR5
#define h_CR5 (){}

    #define     RA_CR5_ACLKENM                                 0x0000

    #define     BA_CR5_ACLKENM_ACLKENM                         0x0000
    #define     B16CR5_ACLKENM_ACLKENM                         0x0000
    #define   LSb32CR5_ACLKENM_ACLKENM                            0
    #define   LSb16CR5_ACLKENM_ACLKENM                            0
    #define       bCR5_ACLKENM_ACLKENM                         1
    #define   MSK32CR5_ACLKENM_ACLKENM                            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PCLKENDBG                               0x0004

    #define     BA_CR5_PCLKENDBG_PCLKENDBG                     0x0004
    #define     B16CR5_PCLKENDBG_PCLKENDBG                     0x0004
    #define   LSb32CR5_PCLKENDBG_PCLKENDBG                        0
    #define   LSb16CR5_PCLKENDBG_PCLKENDBG                        0
    #define       bCR5_PCLKENDBG_PCLKENDBG                     1
    #define   MSK32CR5_PCLKENDBG_PCLKENDBG                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PRESETDBGn                              0x0008

    #define     BA_CR5_PRESETDBGn_PRESETDBGn                   0x0008
    #define     B16CR5_PRESETDBGn_PRESETDBGn                   0x0008
    #define   LSb32CR5_PRESETDBGn_PRESETDBGn                      0
    #define   LSb16CR5_PRESETDBGn_PRESETDBGn                      0
    #define       bCR5_PRESETDBGn_PRESETDBGn                   1
    #define   MSK32CR5_PRESETDBGn_PRESETDBGn                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_nCPUHALT                                0x000C

    #define     BA_CR5_nCPUHALT_nCPUHALT                       0x000C
    #define     B16CR5_nCPUHALT_nCPUHALT                       0x000C
    #define   LSb32CR5_nCPUHALT_nCPUHALT                          0
    #define   LSb16CR5_nCPUHALT_nCPUHALT                          0
    #define       bCR5_nCPUHALT_nCPUHALT                       1
    #define   MSK32CR5_nCPUHALT_nCPUHALT                          0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_VINITHI                                 0x0010

    #define     BA_CR5_VINITHI_VINITHI                         0x0010
    #define     B16CR5_VINITHI_VINITHI                         0x0010
    #define   LSb32CR5_VINITHI_VINITHI                            0
    #define   LSb16CR5_VINITHI_VINITHI                            0
    #define       bCR5_VINITHI_VINITHI                         1
    #define   MSK32CR5_VINITHI_VINITHI                            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_CFGEE                                   0x0014

    #define     BA_CR5_CFGEE_CFGEE                             0x0014
    #define     B16CR5_CFGEE_CFGEE                             0x0014
    #define   LSb32CR5_CFGEE_CFGEE                                0
    #define   LSb16CR5_CFGEE_CFGEE                                0
    #define       bCR5_CFGEE_CFGEE                             1
    #define   MSK32CR5_CFGEE_CFGEE                                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_CFGIE                                   0x0018

    #define     BA_CR5_CFGIE_CFGIE                             0x0018
    #define     B16CR5_CFGIE_CFGIE                             0x0018
    #define   LSb32CR5_CFGIE_CFGIE                                0
    #define   LSb16CR5_CFGIE_CFGIE                                0
    #define       bCR5_CFGIE_CFGIE                             1
    #define   MSK32CR5_CFGIE_CFGIE                                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_TEINIT                                  0x001C

    #define     BA_CR5_TEINIT_TEINIT                           0x001C
    #define     B16CR5_TEINIT_TEINIT                           0x001C
    #define   LSb32CR5_TEINIT_TEINIT                              0
    #define   LSb16CR5_TEINIT_TEINIT                              0
    #define       bCR5_TEINIT_TEINIT                           1
    #define   MSK32CR5_TEINIT_TEINIT                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_CFGNMFI                                 0x0020

    #define     BA_CR5_CFGNMFI_CFGNMFI                         0x0020
    #define     B16CR5_CFGNMFI_CFGNMFI                         0x0020
    #define   LSb32CR5_CFGNMFI_CFGNMFI                            0
    #define   LSb16CR5_CFGNMFI_CFGNMFI                            0
    #define       bCR5_CFGNMFI_CFGNMFI                         1
    #define   MSK32CR5_CFGNMFI_CFGNMFI                            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_INTSYNCEN                               0x0024

    #define     BA_CR5_INTSYNCEN_INTSYNCEN                     0x0024
    #define     B16CR5_INTSYNCEN_INTSYNCEN                     0x0024
    #define   LSb32CR5_INTSYNCEN_INTSYNCEN                        0
    #define   LSb16CR5_INTSYNCEN_INTSYNCEN                        0
    #define       bCR5_INTSYNCEN_INTSYNCEN                     1
    #define   MSK32CR5_INTSYNCEN_INTSYNCEN                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_IRQADDRVSYNCEN                          0x0028

    #define     BA_CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN           0x0028
    #define     B16CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN           0x0028
    #define   LSb32CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN              0
    #define   LSb16CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN              0
    #define       bCR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN           1
    #define   MSK32CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGNOCLKSTOP                            0x002C

    #define     BA_CR5_DBGNOCLKSTOP_DBGNOCLKSTOP               0x002C
    #define     B16CR5_DBGNOCLKSTOP_DBGNOCLKSTOP               0x002C
    #define   LSb32CR5_DBGNOCLKSTOP_DBGNOCLKSTOP                  0
    #define   LSb16CR5_DBGNOCLKSTOP_DBGNOCLKSTOP                  0
    #define       bCR5_DBGNOCLKSTOP_DBGNOCLKSTOP               1
    #define   MSK32CR5_DBGNOCLKSTOP_DBGNOCLKSTOP                  0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_IRQADDRV                                0x0030

    #define     BA_CR5_IRQADDRV_IRQADDRV                       0x0030
    #define     B16CR5_IRQADDRV_IRQADDRV                       0x0030
    #define   LSb32CR5_IRQADDRV_IRQADDRV                          0
    #define   LSb16CR5_IRQADDRV_IRQADDRV                          0
    #define       bCR5_IRQADDRV_IRQADDRV                       1
    #define   MSK32CR5_IRQADDRV_IRQADDRV                          0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_IRQADDR                                 0x0034

    #define     BA_CR5_IRQADDR_IRQADDR                         0x0034
    #define     B16CR5_IRQADDR_IRQADDR                         0x0034
    #define   LSb32CR5_IRQADDR_IRQADDR                            0
    #define   LSb16CR5_IRQADDR_IRQADDR                            0
    #define       bCR5_IRQADDR_IRQADDR                         32
    #define   MSK32CR5_IRQADDR_IRQADDR                            0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGEN                                   0x0038

    #define     BA_CR5_DBGEN_DBGEN                             0x0038
    #define     B16CR5_DBGEN_DBGEN                             0x0038
    #define   LSb32CR5_DBGEN_DBGEN                                0
    #define   LSb16CR5_DBGEN_DBGEN                                0
    #define       bCR5_DBGEN_DBGEN                             1
    #define   MSK32CR5_DBGEN_DBGEN                                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_NIDEN                                   0x003C

    #define     BA_CR5_NIDEN_NIDEN                             0x003C
    #define     B16CR5_NIDEN_NIDEN                             0x003C
    #define   LSb32CR5_NIDEN_NIDEN                                0
    #define   LSb16CR5_NIDEN_NIDEN                                0
    #define       bCR5_NIDEN_NIDEN                             1
    #define   MSK32CR5_NIDEN_NIDEN                                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_EDBGRQ                                  0x0040

    #define     BA_CR5_EDBGRQ_EDBGRQ                           0x0040
    #define     B16CR5_EDBGRQ_EDBGRQ                           0x0040
    #define   LSb32CR5_EDBGRQ_EDBGRQ                              0
    #define   LSb16CR5_EDBGRQ_EDBGRQ                              0
    #define       bCR5_EDBGRQ_EDBGRQ                           1
    #define   MSK32CR5_EDBGRQ_EDBGRQ                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGROMADDR                              0x0044

    #define     BA_CR5_DBGROMADDR_DBGROMADDR                   0x0044
    #define     B16CR5_DBGROMADDR_DBGROMADDR                   0x0044
    #define   LSb32CR5_DBGROMADDR_DBGROMADDR                      0
    #define   LSb16CR5_DBGROMADDR_DBGROMADDR                      0
    #define       bCR5_DBGROMADDR_DBGROMADDR                   32
    #define   MSK32CR5_DBGROMADDR_DBGROMADDR                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGROMADDRV                             0x0048

    #define     BA_CR5_DBGROMADDRV_DBGROMADDRV                 0x0048
    #define     B16CR5_DBGROMADDRV_DBGROMADDRV                 0x0048
    #define   LSb32CR5_DBGROMADDRV_DBGROMADDRV                    0
    #define   LSb16CR5_DBGROMADDRV_DBGROMADDRV                    0
    #define       bCR5_DBGROMADDRV_DBGROMADDRV                 1
    #define   MSK32CR5_DBGROMADDRV_DBGROMADDRV                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGSELFADDR                             0x004C

    #define     BA_CR5_DBGSELFADDR_DBGSELFADDR                 0x004C
    #define     B16CR5_DBGSELFADDR_DBGSELFADDR                 0x004C
    #define   LSb32CR5_DBGSELFADDR_DBGSELFADDR                    0
    #define   LSb16CR5_DBGSELFADDR_DBGSELFADDR                    0
    #define       bCR5_DBGSELFADDR_DBGSELFADDR                 32
    #define   MSK32CR5_DBGSELFADDR_DBGSELFADDR                    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGSELFADDRV                            0x0050

    #define     BA_CR5_DBGSELFADDRV_DBGSELFADDRV               0x0050
    #define     B16CR5_DBGSELFADDRV_DBGSELFADDRV               0x0050
    #define   LSb32CR5_DBGSELFADDRV_DBGSELFADDRV                  0
    #define   LSb16CR5_DBGSELFADDRV_DBGSELFADDRV                  0
    #define       bCR5_DBGSELFADDRV_DBGSELFADDRV               1
    #define   MSK32CR5_DBGSELFADDRV_DBGSELFADDRV                  0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGRESTART                              0x0054

    #define     BA_CR5_DBGRESTART_DBGRESTART                   0x0054
    #define     B16CR5_DBGRESTART_DBGRESTART                   0x0054
    #define   LSb32CR5_DBGRESTART_DBGRESTART                      0
    #define   LSb16CR5_DBGRESTART_DBGRESTART                      0
    #define       bCR5_DBGRESTART_DBGRESTART                   1
    #define   MSK32CR5_DBGRESTART_DBGRESTART                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PARITYLEVEL                             0x0058

    #define     BA_CR5_PARITYLEVEL_PARITYLEVEL                 0x0058
    #define     B16CR5_PARITYLEVEL_PARITYLEVEL                 0x0058
    #define   LSb32CR5_PARITYLEVEL_PARITYLEVEL                    0
    #define   LSb16CR5_PARITYLEVEL_PARITYLEVEL                    0
    #define       bCR5_PARITYLEVEL_PARITYLEVEL                 1
    #define   MSK32CR5_PARITYLEVEL_PARITYLEVEL                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_GROUPID                                 0x005C

    #define     BA_CR5_GROUPID_GROUPID                         0x005C
    #define     B16CR5_GROUPID_GROUPID                         0x005C
    #define   LSb32CR5_GROUPID_GROUPID                            0
    #define   LSb16CR5_GROUPID_GROUPID                            0
    #define       bCR5_GROUPID_GROUPID                         4
    #define   MSK32CR5_GROUPID_GROUPID                            0x0000000F
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_LOCZRAMA                                0x0060

    #define     BA_CR5_LOCZRAMA_LOCZRAMA                       0x0060
    #define     B16CR5_LOCZRAMA_LOCZRAMA                       0x0060
    #define   LSb32CR5_LOCZRAMA_LOCZRAMA                          0
    #define   LSb16CR5_LOCZRAMA_LOCZRAMA                          0
    #define       bCR5_LOCZRAMA_LOCZRAMA                       1
    #define   MSK32CR5_LOCZRAMA_LOCZRAMA                          0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PARECCENRAM                             0x0064

    #define     BA_CR5_PARECCENRAM_PARECCENRAM                 0x0064
    #define     B16CR5_PARECCENRAM_PARECCENRAM                 0x0064
    #define   LSb32CR5_PARECCENRAM_PARECCENRAM                    0
    #define   LSb16CR5_PARECCENRAM_PARECCENRAM                    0
    #define       bCR5_PARECCENRAM_PARECCENRAM                 3
    #define   MSK32CR5_PARECCENRAM_PARECCENRAM                    0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_ERRENRAM                                0x0068

    #define     BA_CR5_ERRENRAM_ERRENRAM                       0x0068
    #define     B16CR5_ERRENRAM_ERRENRAM                       0x0068
    #define   LSb32CR5_ERRENRAM_ERRENRAM                          0
    #define   LSb16CR5_ERRENRAM_ERRENRAM                          0
    #define       bCR5_ERRENRAM_ERRENRAM                       3
    #define   MSK32CR5_ERRENRAM_ERRENRAM                          0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_INITPPX                                 0x006C

    #define     BA_CR5_INITPPX_INITPPX                         0x006C
    #define     B16CR5_INITPPX_INITPPX                         0x006C
    #define   LSb32CR5_INITPPX_INITPPX                            0
    #define   LSb16CR5_INITPPX_INITPPX                            0
    #define       bCR5_INITPPX_INITPPX                         1
    #define   MSK32CR5_INITPPX_INITPPX                            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_INITPPH                                 0x0070

    #define     BA_CR5_INITPPH_INITPPH                         0x0070
    #define     B16CR5_INITPPH_INITPPH                         0x0070
    #define   LSb32CR5_INITPPH_INITPPH                            0
    #define   LSb16CR5_INITPPH_INITPPH                            0
    #define       bCR5_INITPPH_INITPPH                         1
    #define   MSK32CR5_INITPPH_INITPPH                            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PPXBASE                                 0x0074

    #define     BA_CR5_PPXBASE_PPXBASE                         0x0074
    #define     B16CR5_PPXBASE_PPXBASE                         0x0074
    #define   LSb32CR5_PPXBASE_PPXBASE                            0
    #define   LSb16CR5_PPXBASE_PPXBASE                            0
    #define       bCR5_PPXBASE_PPXBASE                         32
    #define   MSK32CR5_PPXBASE_PPXBASE                            0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PPXSIZE                                 0x0078

    #define     BA_CR5_PPXSIZE_PPXSIZE                         0x0078
    #define     B16CR5_PPXSIZE_PPXSIZE                         0x0078
    #define   LSb32CR5_PPXSIZE_PPXSIZE                            0
    #define   LSb16CR5_PPXSIZE_PPXSIZE                            0
    #define       bCR5_PPXSIZE_PPXSIZE                         5
    #define   MSK32CR5_PPXSIZE_PPXSIZE                            0x0000001F
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PPVBASE                                 0x007C

    #define     BA_CR5_PPVBASE_PPVBASE                         0x007C
    #define     B16CR5_PPVBASE_PPVBASE                         0x007C
    #define   LSb32CR5_PPVBASE_PPVBASE                            0
    #define   LSb16CR5_PPVBASE_PPVBASE                            0
    #define       bCR5_PPVBASE_PPVBASE                         32
    #define   MSK32CR5_PPVBASE_PPVBASE                            0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PPVSIZE                                 0x0080

    #define     BA_CR5_PPVSIZE_PPVSIZE                         0x0080
    #define     B16CR5_PPVSIZE_PPVSIZE                         0x0080
    #define   LSb32CR5_PPVSIZE_PPVSIZE                            0
    #define   LSb16CR5_PPVSIZE_PPVSIZE                            0
    #define       bCR5_PPVSIZE_PPVSIZE                         5
    #define   MSK32CR5_PPVSIZE_PPVSIZE                            0x0000001F
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_EVENTI                                  0x0084

    #define     BA_CR5_EVENTI_EVENTI                           0x0084
    #define     B16CR5_EVENTI_EVENTI                           0x0084
    #define   LSb32CR5_EVENTI_EVENTI                              0
    #define   LSb16CR5_EVENTI_EVENTI                              0
    #define       bCR5_EVENTI_EVENTI                           1
    #define   MSK32CR5_EVENTI_EVENTI                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_nCR5RESET                               0x0088

    #define     BA_CR5_nCR5RESET_nCR5RESET                     0x0088
    #define     B16CR5_nCR5RESET_nCR5RESET                     0x0088
    #define   LSb32CR5_nCR5RESET_nCR5RESET                        0
    #define   LSb16CR5_nCR5RESET_nCR5RESET                        0
    #define       bCR5_nCR5RESET_nCR5RESET                     1
    #define   MSK32CR5_nCR5RESET_nCR5RESET                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_WFIPIPESTOPPED                          0x008C

    #define     BA_CR5_WFIPIPESTOPPED_WFIPIPESTOPPED           0x008C
    #define     B16CR5_WFIPIPESTOPPED_WFIPIPESTOPPED           0x008C
    #define   LSb32CR5_WFIPIPESTOPPED_WFIPIPESTOPPED              0
    #define   LSb16CR5_WFIPIPESTOPPED_WFIPIPESTOPPED              0
    #define       bCR5_WFIPIPESTOPPED_WFIPIPESTOPPED           1
    #define   MSK32CR5_WFIPIPESTOPPED_WFIPIPESTOPPED              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_WFEPIPESTOPPED                          0x0090

    #define     BA_CR5_WFEPIPESTOPPED_WFEPIPESTOPPED           0x0090
    #define     B16CR5_WFEPIPESTOPPED_WFEPIPESTOPPED           0x0090
    #define   LSb32CR5_WFEPIPESTOPPED_WFEPIPESTOPPED              0
    #define   LSb16CR5_WFEPIPESTOPPED_WFEPIPESTOPPED              0
    #define       bCR5_WFEPIPESTOPPED_WFEPIPESTOPPED           1
    #define   MSK32CR5_WFEPIPESTOPPED_WFEPIPESTOPPED              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_CLKSTOPPED                              0x0094

    #define     BA_CR5_CLKSTOPPED_CLKSTOPPED                   0x0094
    #define     B16CR5_CLKSTOPPED_CLKSTOPPED                   0x0094
    #define   LSb32CR5_CLKSTOPPED_CLKSTOPPED                      0
    #define   LSb16CR5_CLKSTOPPED_CLKSTOPPED                      0
    #define       bCR5_CLKSTOPPED_CLKSTOPPED                   1
    #define   MSK32CR5_CLKSTOPPED_CLKSTOPPED                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_PMUIRQ                                  0x0098

    #define     BA_CR5_PMUIRQ_PMUIRQ                           0x0098
    #define     B16CR5_PMUIRQ_PMUIRQ                           0x0098
    #define   LSb32CR5_PMUIRQ_PMUIRQ                              0
    #define   LSb16CR5_PMUIRQ_PMUIRQ                              0
    #define       bCR5_PMUIRQ_PMUIRQ                           1
    #define   MSK32CR5_PMUIRQ_PMUIRQ                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_EVENTO                                  0x009C

    #define     BA_CR5_EVENTO_EVENTO                           0x009C
    #define     B16CR5_EVENTO_EVENTO                           0x009C
    #define   LSb32CR5_EVENTO_EVENTO                              0
    #define   LSb16CR5_EVENTO_EVENTO                              0
    #define       bCR5_EVENTO_EVENTO                           1
    #define   MSK32CR5_EVENTO_EVENTO                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGACK                                  0x00A0

    #define     BA_CR5_DBGACK_DBGACK                           0x00A0
    #define     B16CR5_DBGACK_DBGACK                           0x00A0
    #define   LSb32CR5_DBGACK_DBGACK                              0
    #define   LSb16CR5_DBGACK_DBGACK                              0
    #define       bCR5_DBGACK_DBGACK                           1
    #define   MSK32CR5_DBGACK_DBGACK                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGRSTREQ                               0x00A4

    #define     BA_CR5_DBGRSTREQ_DBGRSTREQ                     0x00A4
    #define     B16CR5_DBGRSTREQ_DBGRSTREQ                     0x00A4
    #define   LSb32CR5_DBGRSTREQ_DBGRSTREQ                        0
    #define   LSb16CR5_DBGRSTREQ_DBGRSTREQ                        0
    #define       bCR5_DBGRSTREQ_DBGRSTREQ                     1
    #define   MSK32CR5_DBGRSTREQ_DBGRSTREQ                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGTRIGGER                              0x00A8

    #define     BA_CR5_DBGTRIGGER_DBGTRIGGER                   0x00A8
    #define     B16CR5_DBGTRIGGER_DBGTRIGGER                   0x00A8
    #define   LSb32CR5_DBGTRIGGER_DBGTRIGGER                      0
    #define   LSb16CR5_DBGTRIGGER_DBGTRIGGER                      0
    #define       bCR5_DBGTRIGGER_DBGTRIGGER                   1
    #define   MSK32CR5_DBGTRIGGER_DBGTRIGGER                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_COMMRX                                  0x00AC

    #define     BA_CR5_COMMRX_COMMRX                           0x00AC
    #define     B16CR5_COMMRX_COMMRX                           0x00AC
    #define   LSb32CR5_COMMRX_COMMRX                              0
    #define   LSb16CR5_COMMRX_COMMRX                              0
    #define       bCR5_COMMRX_COMMRX                           1
    #define   MSK32CR5_COMMRX_COMMRX                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_COMMTX                                  0x00B0

    #define     BA_CR5_COMMTX_COMMTX                           0x00B0
    #define     B16CR5_COMMTX_COMMTX                           0x00B0
    #define   LSb32CR5_COMMTX_COMMTX                              0
    #define   LSb16CR5_COMMTX_COMMTX                              0
    #define       bCR5_COMMTX_COMMTX                           1
    #define   MSK32CR5_COMMTX_COMMTX                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGRESTARTED                            0x00B4

    #define     BA_CR5_DBGRESTARTED_DBGRESTARTED               0x00B4
    #define     B16CR5_DBGRESTARTED_DBGRESTARTED               0x00B4
    #define   LSb32CR5_DBGRESTARTED_DBGRESTARTED                  0
    #define   LSb16CR5_DBGRESTARTED_DBGRESTARTED                  0
    #define       bCR5_DBGRESTARTED_DBGRESTARTED               1
    #define   MSK32CR5_DBGRESTARTED_DBGRESTARTED                  0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_CR5_DBGNOPWRDWN                             0x00B8

    #define     BA_CR5_DBGNOPWRDWN_DBGNOPWRDWN                 0x00B8
    #define     B16CR5_DBGNOPWRDWN_DBGNOPWRDWN                 0x00B8
    #define   LSb32CR5_DBGNOPWRDWN_DBGNOPWRDWN                    0
    #define   LSb16CR5_DBGNOPWRDWN_DBGNOPWRDWN                    0
    #define       bCR5_DBGNOPWRDWN_DBGNOPWRDWN                 1
    #define   MSK32CR5_DBGNOPWRDWN_DBGNOPWRDWN                    0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_CR5 {
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_ACLKENM_ACLKENM(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32CR5_ACLKENM_ACLKENM(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_ACLKENM_ACLKENM(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16CR5_ACLKENM_ACLKENM(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define     w32CR5_ACLKENM                                 {\
            UNSG32 uACLKENM_ACLKENM                            :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32CR5_ACLKENM;
            struct w32CR5_ACLKENM;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PCLKENDBG_PCLKENDBG(r32)                _BFGET_(r32, 0, 0)
    #define   SET32CR5_PCLKENDBG_PCLKENDBG(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_PCLKENDBG_PCLKENDBG(r16)                _BFGET_(r16, 0, 0)
    #define   SET16CR5_PCLKENDBG_PCLKENDBG(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32CR5_PCLKENDBG                               {\
            UNSG32 uPCLKENDBG_PCLKENDBG                        :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32CR5_PCLKENDBG;
            struct w32CR5_PCLKENDBG;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PRESETDBGn_PRESETDBGn(r32)              _BFGET_(r32, 0, 0)
    #define   SET32CR5_PRESETDBGn_PRESETDBGn(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_PRESETDBGn_PRESETDBGn(r16)              _BFGET_(r16, 0, 0)
    #define   SET16CR5_PRESETDBGn_PRESETDBGn(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32CR5_PRESETDBGn                              {\
            UNSG32 uPRESETDBGn_PRESETDBGn                      :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32CR5_PRESETDBGn;
            struct w32CR5_PRESETDBGn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_nCPUHALT_nCPUHALT(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32CR5_nCPUHALT_nCPUHALT(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_nCPUHALT_nCPUHALT(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16CR5_nCPUHALT_nCPUHALT(r16,v)                _BFSET_(r16, 0, 0,v)

    #define     w32CR5_nCPUHALT                                {\
            UNSG32 unCPUHALT_nCPUHALT                          :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32CR5_nCPUHALT;
            struct w32CR5_nCPUHALT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_VINITHI_VINITHI(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32CR5_VINITHI_VINITHI(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_VINITHI_VINITHI(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16CR5_VINITHI_VINITHI(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define     w32CR5_VINITHI                                 {\
            UNSG32 uVINITHI_VINITHI                            :  1;\
            UNSG32 RSVDx10_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_VINITHI;
            struct w32CR5_VINITHI;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_CFGEE_CFGEE(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32CR5_CFGEE_CFGEE(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_CFGEE_CFGEE(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16CR5_CFGEE_CFGEE(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32CR5_CFGEE                                   {\
            UNSG32 uCFGEE_CFGEE                                :  1;\
            UNSG32 RSVDx14_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_CFGEE;
            struct w32CR5_CFGEE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_CFGIE_CFGIE(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32CR5_CFGIE_CFGIE(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_CFGIE_CFGIE(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16CR5_CFGIE_CFGIE(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32CR5_CFGIE                                   {\
            UNSG32 uCFGIE_CFGIE                                :  1;\
            UNSG32 RSVDx18_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_CFGIE;
            struct w32CR5_CFGIE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_TEINIT_TEINIT(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_TEINIT_TEINIT(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_TEINIT_TEINIT(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_TEINIT_TEINIT(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_TEINIT                                  {\
            UNSG32 uTEINIT_TEINIT                              :  1;\
            UNSG32 RSVDx1C_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_TEINIT;
            struct w32CR5_TEINIT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_CFGNMFI_CFGNMFI(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32CR5_CFGNMFI_CFGNMFI(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_CFGNMFI_CFGNMFI(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16CR5_CFGNMFI_CFGNMFI(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define     w32CR5_CFGNMFI                                 {\
            UNSG32 uCFGNMFI_CFGNMFI                            :  1;\
            UNSG32 RSVDx20_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_CFGNMFI;
            struct w32CR5_CFGNMFI;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_INTSYNCEN_INTSYNCEN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32CR5_INTSYNCEN_INTSYNCEN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_INTSYNCEN_INTSYNCEN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16CR5_INTSYNCEN_INTSYNCEN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32CR5_INTSYNCEN                               {\
            UNSG32 uINTSYNCEN_INTSYNCEN                        :  1;\
            UNSG32 RSVDx24_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_INTSYNCEN;
            struct w32CR5_INTSYNCEN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN(r32)      _BFGET_(r32, 0, 0)
    #define   SET32CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN(r16)      _BFGET_(r16, 0, 0)
    #define   SET16CR5_IRQADDRVSYNCEN_IRQADDRVSYNCEN(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_IRQADDRVSYNCEN                          {\
            UNSG32 uIRQADDRVSYNCEN_IRQADDRVSYNCEN              :  1;\
            UNSG32 RSVDx28_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_IRQADDRVSYNCEN;
            struct w32CR5_IRQADDRVSYNCEN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGNOCLKSTOP_DBGNOCLKSTOP(r32)          _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGNOCLKSTOP_DBGNOCLKSTOP(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGNOCLKSTOP_DBGNOCLKSTOP(r16)          _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGNOCLKSTOP_DBGNOCLKSTOP(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGNOCLKSTOP                            {\
            UNSG32 uDBGNOCLKSTOP_DBGNOCLKSTOP                  :  1;\
            UNSG32 RSVDx2C_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGNOCLKSTOP;
            struct w32CR5_DBGNOCLKSTOP;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_IRQADDRV_IRQADDRV(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32CR5_IRQADDRV_IRQADDRV(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_IRQADDRV_IRQADDRV(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16CR5_IRQADDRV_IRQADDRV(r16,v)                _BFSET_(r16, 0, 0,v)

    #define     w32CR5_IRQADDRV                                {\
            UNSG32 uIRQADDRV_IRQADDRV                          :  1;\
            UNSG32 RSVDx30_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_IRQADDRV;
            struct w32CR5_IRQADDRV;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_IRQADDR_IRQADDR(r32)                    _BFGET_(r32,31, 0)
    #define   SET32CR5_IRQADDR_IRQADDR(r32,v)                  _BFSET_(r32,31, 0,v)

    #define     w32CR5_IRQADDR                                 {\
            UNSG32 uIRQADDR_IRQADDR                            : 32;\
          }
    union { UNSG32 u32CR5_IRQADDR;
            struct w32CR5_IRQADDR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGEN_DBGEN(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGEN_DBGEN(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGEN_DBGEN(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGEN_DBGEN(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGEN                                   {\
            UNSG32 uDBGEN_DBGEN                                :  1;\
            UNSG32 RSVDx38_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGEN;
            struct w32CR5_DBGEN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_NIDEN_NIDEN(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32CR5_NIDEN_NIDEN(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_NIDEN_NIDEN(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16CR5_NIDEN_NIDEN(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define     w32CR5_NIDEN                                   {\
            UNSG32 uNIDEN_NIDEN                                :  1;\
            UNSG32 RSVDx3C_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_NIDEN;
            struct w32CR5_NIDEN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_EDBGRQ_EDBGRQ(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_EDBGRQ_EDBGRQ(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_EDBGRQ_EDBGRQ(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_EDBGRQ_EDBGRQ(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_EDBGRQ                                  {\
            UNSG32 uEDBGRQ_EDBGRQ                              :  1;\
            UNSG32 RSVDx40_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_EDBGRQ;
            struct w32CR5_EDBGRQ;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGROMADDR_DBGROMADDR(r32)              _BFGET_(r32,31, 0)
    #define   SET32CR5_DBGROMADDR_DBGROMADDR(r32,v)            _BFSET_(r32,31, 0,v)

    #define     w32CR5_DBGROMADDR                              {\
            UNSG32 uDBGROMADDR_DBGROMADDR                      : 32;\
          }
    union { UNSG32 u32CR5_DBGROMADDR;
            struct w32CR5_DBGROMADDR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGROMADDRV_DBGROMADDRV(r32)            _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGROMADDRV_DBGROMADDRV(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGROMADDRV_DBGROMADDRV(r16)            _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGROMADDRV_DBGROMADDRV(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGROMADDRV                             {\
            UNSG32 uDBGROMADDRV_DBGROMADDRV                    :  1;\
            UNSG32 RSVDx48_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGROMADDRV;
            struct w32CR5_DBGROMADDRV;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGSELFADDR_DBGSELFADDR(r32)            _BFGET_(r32,31, 0)
    #define   SET32CR5_DBGSELFADDR_DBGSELFADDR(r32,v)          _BFSET_(r32,31, 0,v)

    #define     w32CR5_DBGSELFADDR                             {\
            UNSG32 uDBGSELFADDR_DBGSELFADDR                    : 32;\
          }
    union { UNSG32 u32CR5_DBGSELFADDR;
            struct w32CR5_DBGSELFADDR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGSELFADDRV_DBGSELFADDRV(r32)          _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGSELFADDRV_DBGSELFADDRV(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGSELFADDRV_DBGSELFADDRV(r16)          _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGSELFADDRV_DBGSELFADDRV(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGSELFADDRV                            {\
            UNSG32 uDBGSELFADDRV_DBGSELFADDRV                  :  1;\
            UNSG32 RSVDx50_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGSELFADDRV;
            struct w32CR5_DBGSELFADDRV;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGRESTART_DBGRESTART(r32)              _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGRESTART_DBGRESTART(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGRESTART_DBGRESTART(r16)              _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGRESTART_DBGRESTART(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGRESTART                              {\
            UNSG32 uDBGRESTART_DBGRESTART                      :  1;\
            UNSG32 RSVDx54_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGRESTART;
            struct w32CR5_DBGRESTART;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PARITYLEVEL_PARITYLEVEL(r32)            _BFGET_(r32, 0, 0)
    #define   SET32CR5_PARITYLEVEL_PARITYLEVEL(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_PARITYLEVEL_PARITYLEVEL(r16)            _BFGET_(r16, 0, 0)
    #define   SET16CR5_PARITYLEVEL_PARITYLEVEL(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32CR5_PARITYLEVEL                             {\
            UNSG32 uPARITYLEVEL_PARITYLEVEL                    :  1;\
            UNSG32 RSVDx58_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_PARITYLEVEL;
            struct w32CR5_PARITYLEVEL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_GROUPID_GROUPID(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32CR5_GROUPID_GROUPID(r32,v)                  _BFSET_(r32, 3, 0,v)
    #define   GET16CR5_GROUPID_GROUPID(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16CR5_GROUPID_GROUPID(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define     w32CR5_GROUPID                                 {\
            UNSG32 uGROUPID_GROUPID                            :  4;\
            UNSG32 RSVDx5C_b4                                  : 28;\
          }
    union { UNSG32 u32CR5_GROUPID;
            struct w32CR5_GROUPID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_LOCZRAMA_LOCZRAMA(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32CR5_LOCZRAMA_LOCZRAMA(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_LOCZRAMA_LOCZRAMA(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16CR5_LOCZRAMA_LOCZRAMA(r16,v)                _BFSET_(r16, 0, 0,v)

    #define     w32CR5_LOCZRAMA                                {\
            UNSG32 uLOCZRAMA_LOCZRAMA                          :  1;\
            UNSG32 RSVDx60_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_LOCZRAMA;
            struct w32CR5_LOCZRAMA;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PARECCENRAM_PARECCENRAM(r32)            _BFGET_(r32, 2, 0)
    #define   SET32CR5_PARECCENRAM_PARECCENRAM(r32,v)          _BFSET_(r32, 2, 0,v)
    #define   GET16CR5_PARECCENRAM_PARECCENRAM(r16)            _BFGET_(r16, 2, 0)
    #define   SET16CR5_PARECCENRAM_PARECCENRAM(r16,v)          _BFSET_(r16, 2, 0,v)

    #define     w32CR5_PARECCENRAM                             {\
            UNSG32 uPARECCENRAM_PARECCENRAM                    :  3;\
            UNSG32 RSVDx64_b3                                  : 29;\
          }
    union { UNSG32 u32CR5_PARECCENRAM;
            struct w32CR5_PARECCENRAM;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_ERRENRAM_ERRENRAM(r32)                  _BFGET_(r32, 2, 0)
    #define   SET32CR5_ERRENRAM_ERRENRAM(r32,v)                _BFSET_(r32, 2, 0,v)
    #define   GET16CR5_ERRENRAM_ERRENRAM(r16)                  _BFGET_(r16, 2, 0)
    #define   SET16CR5_ERRENRAM_ERRENRAM(r16,v)                _BFSET_(r16, 2, 0,v)

    #define     w32CR5_ERRENRAM                                {\
            UNSG32 uERRENRAM_ERRENRAM                          :  3;\
            UNSG32 RSVDx68_b3                                  : 29;\
          }
    union { UNSG32 u32CR5_ERRENRAM;
            struct w32CR5_ERRENRAM;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_INITPPX_INITPPX(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32CR5_INITPPX_INITPPX(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_INITPPX_INITPPX(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16CR5_INITPPX_INITPPX(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define     w32CR5_INITPPX                                 {\
            UNSG32 uINITPPX_INITPPX                            :  1;\
            UNSG32 RSVDx6C_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_INITPPX;
            struct w32CR5_INITPPX;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_INITPPH_INITPPH(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32CR5_INITPPH_INITPPH(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_INITPPH_INITPPH(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16CR5_INITPPH_INITPPH(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define     w32CR5_INITPPH                                 {\
            UNSG32 uINITPPH_INITPPH                            :  1;\
            UNSG32 RSVDx70_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_INITPPH;
            struct w32CR5_INITPPH;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PPXBASE_PPXBASE(r32)                    _BFGET_(r32,31, 0)
    #define   SET32CR5_PPXBASE_PPXBASE(r32,v)                  _BFSET_(r32,31, 0,v)

    #define     w32CR5_PPXBASE                                 {\
            UNSG32 uPPXBASE_PPXBASE                            : 32;\
          }
    union { UNSG32 u32CR5_PPXBASE;
            struct w32CR5_PPXBASE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PPXSIZE_PPXSIZE(r32)                    _BFGET_(r32, 4, 0)
    #define   SET32CR5_PPXSIZE_PPXSIZE(r32,v)                  _BFSET_(r32, 4, 0,v)
    #define   GET16CR5_PPXSIZE_PPXSIZE(r16)                    _BFGET_(r16, 4, 0)
    #define   SET16CR5_PPXSIZE_PPXSIZE(r16,v)                  _BFSET_(r16, 4, 0,v)

    #define     w32CR5_PPXSIZE                                 {\
            UNSG32 uPPXSIZE_PPXSIZE                            :  5;\
            UNSG32 RSVDx78_b5                                  : 27;\
          }
    union { UNSG32 u32CR5_PPXSIZE;
            struct w32CR5_PPXSIZE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PPVBASE_PPVBASE(r32)                    _BFGET_(r32,31, 0)
    #define   SET32CR5_PPVBASE_PPVBASE(r32,v)                  _BFSET_(r32,31, 0,v)

    #define     w32CR5_PPVBASE                                 {\
            UNSG32 uPPVBASE_PPVBASE                            : 32;\
          }
    union { UNSG32 u32CR5_PPVBASE;
            struct w32CR5_PPVBASE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PPVSIZE_PPVSIZE(r32)                    _BFGET_(r32, 4, 0)
    #define   SET32CR5_PPVSIZE_PPVSIZE(r32,v)                  _BFSET_(r32, 4, 0,v)
    #define   GET16CR5_PPVSIZE_PPVSIZE(r16)                    _BFGET_(r16, 4, 0)
    #define   SET16CR5_PPVSIZE_PPVSIZE(r16,v)                  _BFSET_(r16, 4, 0,v)

    #define     w32CR5_PPVSIZE                                 {\
            UNSG32 uPPVSIZE_PPVSIZE                            :  5;\
            UNSG32 RSVDx80_b5                                  : 27;\
          }
    union { UNSG32 u32CR5_PPVSIZE;
            struct w32CR5_PPVSIZE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_EVENTI_EVENTI(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_EVENTI_EVENTI(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_EVENTI_EVENTI(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_EVENTI_EVENTI(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_EVENTI                                  {\
            UNSG32 uEVENTI_EVENTI                              :  1;\
            UNSG32 RSVDx84_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_EVENTI;
            struct w32CR5_EVENTI;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_nCR5RESET_nCR5RESET(r32)                _BFGET_(r32, 0, 0)
    #define   SET32CR5_nCR5RESET_nCR5RESET(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_nCR5RESET_nCR5RESET(r16)                _BFGET_(r16, 0, 0)
    #define   SET16CR5_nCR5RESET_nCR5RESET(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32CR5_nCR5RESET                               {\
            UNSG32 unCR5RESET_nCR5RESET                        :  1;\
            UNSG32 RSVDx88_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_nCR5RESET;
            struct w32CR5_nCR5RESET;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_WFIPIPESTOPPED_WFIPIPESTOPPED(r32)      _BFGET_(r32, 0, 0)
    #define   SET32CR5_WFIPIPESTOPPED_WFIPIPESTOPPED(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_WFIPIPESTOPPED_WFIPIPESTOPPED(r16)      _BFGET_(r16, 0, 0)
    #define   SET16CR5_WFIPIPESTOPPED_WFIPIPESTOPPED(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_WFIPIPESTOPPED                          {\
            UNSG32 uWFIPIPESTOPPED_WFIPIPESTOPPED              :  1;\
            UNSG32 RSVDx8C_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_WFIPIPESTOPPED;
            struct w32CR5_WFIPIPESTOPPED;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_WFEPIPESTOPPED_WFEPIPESTOPPED(r32)      _BFGET_(r32, 0, 0)
    #define   SET32CR5_WFEPIPESTOPPED_WFEPIPESTOPPED(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_WFEPIPESTOPPED_WFEPIPESTOPPED(r16)      _BFGET_(r16, 0, 0)
    #define   SET16CR5_WFEPIPESTOPPED_WFEPIPESTOPPED(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_WFEPIPESTOPPED                          {\
            UNSG32 uWFEPIPESTOPPED_WFEPIPESTOPPED              :  1;\
            UNSG32 RSVDx90_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_WFEPIPESTOPPED;
            struct w32CR5_WFEPIPESTOPPED;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_CLKSTOPPED_CLKSTOPPED(r32)              _BFGET_(r32, 0, 0)
    #define   SET32CR5_CLKSTOPPED_CLKSTOPPED(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_CLKSTOPPED_CLKSTOPPED(r16)              _BFGET_(r16, 0, 0)
    #define   SET16CR5_CLKSTOPPED_CLKSTOPPED(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32CR5_CLKSTOPPED                              {\
            UNSG32 uCLKSTOPPED_CLKSTOPPED                      :  1;\
            UNSG32 RSVDx94_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_CLKSTOPPED;
            struct w32CR5_CLKSTOPPED;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_PMUIRQ_PMUIRQ(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_PMUIRQ_PMUIRQ(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_PMUIRQ_PMUIRQ(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_PMUIRQ_PMUIRQ(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_PMUIRQ                                  {\
            UNSG32 uPMUIRQ_PMUIRQ                              :  1;\
            UNSG32 RSVDx98_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_PMUIRQ;
            struct w32CR5_PMUIRQ;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_EVENTO_EVENTO(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_EVENTO_EVENTO(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_EVENTO_EVENTO(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_EVENTO_EVENTO(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_EVENTO                                  {\
            UNSG32 uEVENTO_EVENTO                              :  1;\
            UNSG32 RSVDx9C_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_EVENTO;
            struct w32CR5_EVENTO;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGACK_DBGACK(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGACK_DBGACK(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGACK_DBGACK(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGACK_DBGACK(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGACK                                  {\
            UNSG32 uDBGACK_DBGACK                              :  1;\
            UNSG32 RSVDxA0_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGACK;
            struct w32CR5_DBGACK;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGRSTREQ_DBGRSTREQ(r32)                _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGRSTREQ_DBGRSTREQ(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGRSTREQ_DBGRSTREQ(r16)                _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGRSTREQ_DBGRSTREQ(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGRSTREQ                               {\
            UNSG32 uDBGRSTREQ_DBGRSTREQ                        :  1;\
            UNSG32 RSVDxA4_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGRSTREQ;
            struct w32CR5_DBGRSTREQ;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGTRIGGER_DBGTRIGGER(r32)              _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGTRIGGER_DBGTRIGGER(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGTRIGGER_DBGTRIGGER(r16)              _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGTRIGGER_DBGTRIGGER(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGTRIGGER                              {\
            UNSG32 uDBGTRIGGER_DBGTRIGGER                      :  1;\
            UNSG32 RSVDxA8_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGTRIGGER;
            struct w32CR5_DBGTRIGGER;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_COMMRX_COMMRX(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_COMMRX_COMMRX(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_COMMRX_COMMRX(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_COMMRX_COMMRX(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_COMMRX                                  {\
            UNSG32 uCOMMRX_COMMRX                              :  1;\
            UNSG32 RSVDxAC_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_COMMRX;
            struct w32CR5_COMMRX;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_COMMTX_COMMTX(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32CR5_COMMTX_COMMTX(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_COMMTX_COMMTX(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16CR5_COMMTX_COMMTX(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32CR5_COMMTX                                  {\
            UNSG32 uCOMMTX_COMMTX                              :  1;\
            UNSG32 RSVDxB0_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_COMMTX;
            struct w32CR5_COMMTX;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGRESTARTED_DBGRESTARTED(r32)          _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGRESTARTED_DBGRESTARTED(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGRESTARTED_DBGRESTARTED(r16)          _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGRESTARTED_DBGRESTARTED(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGRESTARTED                            {\
            UNSG32 uDBGRESTARTED_DBGRESTARTED                  :  1;\
            UNSG32 RSVDxB4_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGRESTARTED;
            struct w32CR5_DBGRESTARTED;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32CR5_DBGNOPWRDWN_DBGNOPWRDWN(r32)            _BFGET_(r32, 0, 0)
    #define   SET32CR5_DBGNOPWRDWN_DBGNOPWRDWN(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16CR5_DBGNOPWRDWN_DBGNOPWRDWN(r16)            _BFGET_(r16, 0, 0)
    #define   SET16CR5_DBGNOPWRDWN_DBGNOPWRDWN(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32CR5_DBGNOPWRDWN                             {\
            UNSG32 uDBGNOPWRDWN_DBGNOPWRDWN                    :  1;\
            UNSG32 RSVDxB8_b1                                  : 31;\
          }
    union { UNSG32 u32CR5_DBGNOPWRDWN;
            struct w32CR5_DBGNOPWRDWN;
          };
    ///////////////////////////////////////////////////////////
    } SIE_CR5;

    typedef union  T32CR5_ACLKENM
          { UNSG32 u32;
            struct w32CR5_ACLKENM;
                 } T32CR5_ACLKENM;
    typedef union  T32CR5_PCLKENDBG
          { UNSG32 u32;
            struct w32CR5_PCLKENDBG;
                 } T32CR5_PCLKENDBG;
    typedef union  T32CR5_PRESETDBGn
          { UNSG32 u32;
            struct w32CR5_PRESETDBGn;
                 } T32CR5_PRESETDBGn;
    typedef union  T32CR5_nCPUHALT
          { UNSG32 u32;
            struct w32CR5_nCPUHALT;
                 } T32CR5_nCPUHALT;
    typedef union  T32CR5_VINITHI
          { UNSG32 u32;
            struct w32CR5_VINITHI;
                 } T32CR5_VINITHI;
    typedef union  T32CR5_CFGEE
          { UNSG32 u32;
            struct w32CR5_CFGEE;
                 } T32CR5_CFGEE;
    typedef union  T32CR5_CFGIE
          { UNSG32 u32;
            struct w32CR5_CFGIE;
                 } T32CR5_CFGIE;
    typedef union  T32CR5_TEINIT
          { UNSG32 u32;
            struct w32CR5_TEINIT;
                 } T32CR5_TEINIT;
    typedef union  T32CR5_CFGNMFI
          { UNSG32 u32;
            struct w32CR5_CFGNMFI;
                 } T32CR5_CFGNMFI;
    typedef union  T32CR5_INTSYNCEN
          { UNSG32 u32;
            struct w32CR5_INTSYNCEN;
                 } T32CR5_INTSYNCEN;
    typedef union  T32CR5_IRQADDRVSYNCEN
          { UNSG32 u32;
            struct w32CR5_IRQADDRVSYNCEN;
                 } T32CR5_IRQADDRVSYNCEN;
    typedef union  T32CR5_DBGNOCLKSTOP
          { UNSG32 u32;
            struct w32CR5_DBGNOCLKSTOP;
                 } T32CR5_DBGNOCLKSTOP;
    typedef union  T32CR5_IRQADDRV
          { UNSG32 u32;
            struct w32CR5_IRQADDRV;
                 } T32CR5_IRQADDRV;
    typedef union  T32CR5_IRQADDR
          { UNSG32 u32;
            struct w32CR5_IRQADDR;
                 } T32CR5_IRQADDR;
    typedef union  T32CR5_DBGEN
          { UNSG32 u32;
            struct w32CR5_DBGEN;
                 } T32CR5_DBGEN;
    typedef union  T32CR5_NIDEN
          { UNSG32 u32;
            struct w32CR5_NIDEN;
                 } T32CR5_NIDEN;
    typedef union  T32CR5_EDBGRQ
          { UNSG32 u32;
            struct w32CR5_EDBGRQ;
                 } T32CR5_EDBGRQ;
    typedef union  T32CR5_DBGROMADDR
          { UNSG32 u32;
            struct w32CR5_DBGROMADDR;
                 } T32CR5_DBGROMADDR;
    typedef union  T32CR5_DBGROMADDRV
          { UNSG32 u32;
            struct w32CR5_DBGROMADDRV;
                 } T32CR5_DBGROMADDRV;
    typedef union  T32CR5_DBGSELFADDR
          { UNSG32 u32;
            struct w32CR5_DBGSELFADDR;
                 } T32CR5_DBGSELFADDR;
    typedef union  T32CR5_DBGSELFADDRV
          { UNSG32 u32;
            struct w32CR5_DBGSELFADDRV;
                 } T32CR5_DBGSELFADDRV;
    typedef union  T32CR5_DBGRESTART
          { UNSG32 u32;
            struct w32CR5_DBGRESTART;
                 } T32CR5_DBGRESTART;
    typedef union  T32CR5_PARITYLEVEL
          { UNSG32 u32;
            struct w32CR5_PARITYLEVEL;
                 } T32CR5_PARITYLEVEL;
    typedef union  T32CR5_GROUPID
          { UNSG32 u32;
            struct w32CR5_GROUPID;
                 } T32CR5_GROUPID;
    typedef union  T32CR5_LOCZRAMA
          { UNSG32 u32;
            struct w32CR5_LOCZRAMA;
                 } T32CR5_LOCZRAMA;
    typedef union  T32CR5_PARECCENRAM
          { UNSG32 u32;
            struct w32CR5_PARECCENRAM;
                 } T32CR5_PARECCENRAM;
    typedef union  T32CR5_ERRENRAM
          { UNSG32 u32;
            struct w32CR5_ERRENRAM;
                 } T32CR5_ERRENRAM;
    typedef union  T32CR5_INITPPX
          { UNSG32 u32;
            struct w32CR5_INITPPX;
                 } T32CR5_INITPPX;
    typedef union  T32CR5_INITPPH
          { UNSG32 u32;
            struct w32CR5_INITPPH;
                 } T32CR5_INITPPH;
    typedef union  T32CR5_PPXBASE
          { UNSG32 u32;
            struct w32CR5_PPXBASE;
                 } T32CR5_PPXBASE;
    typedef union  T32CR5_PPXSIZE
          { UNSG32 u32;
            struct w32CR5_PPXSIZE;
                 } T32CR5_PPXSIZE;
    typedef union  T32CR5_PPVBASE
          { UNSG32 u32;
            struct w32CR5_PPVBASE;
                 } T32CR5_PPVBASE;
    typedef union  T32CR5_PPVSIZE
          { UNSG32 u32;
            struct w32CR5_PPVSIZE;
                 } T32CR5_PPVSIZE;
    typedef union  T32CR5_EVENTI
          { UNSG32 u32;
            struct w32CR5_EVENTI;
                 } T32CR5_EVENTI;
    typedef union  T32CR5_nCR5RESET
          { UNSG32 u32;
            struct w32CR5_nCR5RESET;
                 } T32CR5_nCR5RESET;
    typedef union  T32CR5_WFIPIPESTOPPED
          { UNSG32 u32;
            struct w32CR5_WFIPIPESTOPPED;
                 } T32CR5_WFIPIPESTOPPED;
    typedef union  T32CR5_WFEPIPESTOPPED
          { UNSG32 u32;
            struct w32CR5_WFEPIPESTOPPED;
                 } T32CR5_WFEPIPESTOPPED;
    typedef union  T32CR5_CLKSTOPPED
          { UNSG32 u32;
            struct w32CR5_CLKSTOPPED;
                 } T32CR5_CLKSTOPPED;
    typedef union  T32CR5_PMUIRQ
          { UNSG32 u32;
            struct w32CR5_PMUIRQ;
                 } T32CR5_PMUIRQ;
    typedef union  T32CR5_EVENTO
          { UNSG32 u32;
            struct w32CR5_EVENTO;
                 } T32CR5_EVENTO;
    typedef union  T32CR5_DBGACK
          { UNSG32 u32;
            struct w32CR5_DBGACK;
                 } T32CR5_DBGACK;
    typedef union  T32CR5_DBGRSTREQ
          { UNSG32 u32;
            struct w32CR5_DBGRSTREQ;
                 } T32CR5_DBGRSTREQ;
    typedef union  T32CR5_DBGTRIGGER
          { UNSG32 u32;
            struct w32CR5_DBGTRIGGER;
                 } T32CR5_DBGTRIGGER;
    typedef union  T32CR5_COMMRX
          { UNSG32 u32;
            struct w32CR5_COMMRX;
                 } T32CR5_COMMRX;
    typedef union  T32CR5_COMMTX
          { UNSG32 u32;
            struct w32CR5_COMMTX;
                 } T32CR5_COMMTX;
    typedef union  T32CR5_DBGRESTARTED
          { UNSG32 u32;
            struct w32CR5_DBGRESTARTED;
                 } T32CR5_DBGRESTARTED;
    typedef union  T32CR5_DBGNOPWRDWN
          { UNSG32 u32;
            struct w32CR5_DBGNOPWRDWN;
                 } T32CR5_DBGNOPWRDWN;
    ///////////////////////////////////////////////////////////

    typedef union  TCR5_ACLKENM
          { UNSG32 u32[1];
            struct {
            struct w32CR5_ACLKENM;
                   };
                 } TCR5_ACLKENM;
    typedef union  TCR5_PCLKENDBG
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PCLKENDBG;
                   };
                 } TCR5_PCLKENDBG;
    typedef union  TCR5_PRESETDBGn
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PRESETDBGn;
                   };
                 } TCR5_PRESETDBGn;
    typedef union  TCR5_nCPUHALT
          { UNSG32 u32[1];
            struct {
            struct w32CR5_nCPUHALT;
                   };
                 } TCR5_nCPUHALT;
    typedef union  TCR5_VINITHI
          { UNSG32 u32[1];
            struct {
            struct w32CR5_VINITHI;
                   };
                 } TCR5_VINITHI;
    typedef union  TCR5_CFGEE
          { UNSG32 u32[1];
            struct {
            struct w32CR5_CFGEE;
                   };
                 } TCR5_CFGEE;
    typedef union  TCR5_CFGIE
          { UNSG32 u32[1];
            struct {
            struct w32CR5_CFGIE;
                   };
                 } TCR5_CFGIE;
    typedef union  TCR5_TEINIT
          { UNSG32 u32[1];
            struct {
            struct w32CR5_TEINIT;
                   };
                 } TCR5_TEINIT;
    typedef union  TCR5_CFGNMFI
          { UNSG32 u32[1];
            struct {
            struct w32CR5_CFGNMFI;
                   };
                 } TCR5_CFGNMFI;
    typedef union  TCR5_INTSYNCEN
          { UNSG32 u32[1];
            struct {
            struct w32CR5_INTSYNCEN;
                   };
                 } TCR5_INTSYNCEN;
    typedef union  TCR5_IRQADDRVSYNCEN
          { UNSG32 u32[1];
            struct {
            struct w32CR5_IRQADDRVSYNCEN;
                   };
                 } TCR5_IRQADDRVSYNCEN;
    typedef union  TCR5_DBGNOCLKSTOP
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGNOCLKSTOP;
                   };
                 } TCR5_DBGNOCLKSTOP;
    typedef union  TCR5_IRQADDRV
          { UNSG32 u32[1];
            struct {
            struct w32CR5_IRQADDRV;
                   };
                 } TCR5_IRQADDRV;
    typedef union  TCR5_IRQADDR
          { UNSG32 u32[1];
            struct {
            struct w32CR5_IRQADDR;
                   };
                 } TCR5_IRQADDR;
    typedef union  TCR5_DBGEN
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGEN;
                   };
                 } TCR5_DBGEN;
    typedef union  TCR5_NIDEN
          { UNSG32 u32[1];
            struct {
            struct w32CR5_NIDEN;
                   };
                 } TCR5_NIDEN;
    typedef union  TCR5_EDBGRQ
          { UNSG32 u32[1];
            struct {
            struct w32CR5_EDBGRQ;
                   };
                 } TCR5_EDBGRQ;
    typedef union  TCR5_DBGROMADDR
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGROMADDR;
                   };
                 } TCR5_DBGROMADDR;
    typedef union  TCR5_DBGROMADDRV
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGROMADDRV;
                   };
                 } TCR5_DBGROMADDRV;
    typedef union  TCR5_DBGSELFADDR
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGSELFADDR;
                   };
                 } TCR5_DBGSELFADDR;
    typedef union  TCR5_DBGSELFADDRV
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGSELFADDRV;
                   };
                 } TCR5_DBGSELFADDRV;
    typedef union  TCR5_DBGRESTART
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGRESTART;
                   };
                 } TCR5_DBGRESTART;
    typedef union  TCR5_PARITYLEVEL
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PARITYLEVEL;
                   };
                 } TCR5_PARITYLEVEL;
    typedef union  TCR5_GROUPID
          { UNSG32 u32[1];
            struct {
            struct w32CR5_GROUPID;
                   };
                 } TCR5_GROUPID;
    typedef union  TCR5_LOCZRAMA
          { UNSG32 u32[1];
            struct {
            struct w32CR5_LOCZRAMA;
                   };
                 } TCR5_LOCZRAMA;
    typedef union  TCR5_PARECCENRAM
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PARECCENRAM;
                   };
                 } TCR5_PARECCENRAM;
    typedef union  TCR5_ERRENRAM
          { UNSG32 u32[1];
            struct {
            struct w32CR5_ERRENRAM;
                   };
                 } TCR5_ERRENRAM;
    typedef union  TCR5_INITPPX
          { UNSG32 u32[1];
            struct {
            struct w32CR5_INITPPX;
                   };
                 } TCR5_INITPPX;
    typedef union  TCR5_INITPPH
          { UNSG32 u32[1];
            struct {
            struct w32CR5_INITPPH;
                   };
                 } TCR5_INITPPH;
    typedef union  TCR5_PPXBASE
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PPXBASE;
                   };
                 } TCR5_PPXBASE;
    typedef union  TCR5_PPXSIZE
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PPXSIZE;
                   };
                 } TCR5_PPXSIZE;
    typedef union  TCR5_PPVBASE
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PPVBASE;
                   };
                 } TCR5_PPVBASE;
    typedef union  TCR5_PPVSIZE
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PPVSIZE;
                   };
                 } TCR5_PPVSIZE;
    typedef union  TCR5_EVENTI
          { UNSG32 u32[1];
            struct {
            struct w32CR5_EVENTI;
                   };
                 } TCR5_EVENTI;
    typedef union  TCR5_nCR5RESET
          { UNSG32 u32[1];
            struct {
            struct w32CR5_nCR5RESET;
                   };
                 } TCR5_nCR5RESET;
    typedef union  TCR5_WFIPIPESTOPPED
          { UNSG32 u32[1];
            struct {
            struct w32CR5_WFIPIPESTOPPED;
                   };
                 } TCR5_WFIPIPESTOPPED;
    typedef union  TCR5_WFEPIPESTOPPED
          { UNSG32 u32[1];
            struct {
            struct w32CR5_WFEPIPESTOPPED;
                   };
                 } TCR5_WFEPIPESTOPPED;
    typedef union  TCR5_CLKSTOPPED
          { UNSG32 u32[1];
            struct {
            struct w32CR5_CLKSTOPPED;
                   };
                 } TCR5_CLKSTOPPED;
    typedef union  TCR5_PMUIRQ
          { UNSG32 u32[1];
            struct {
            struct w32CR5_PMUIRQ;
                   };
                 } TCR5_PMUIRQ;
    typedef union  TCR5_EVENTO
          { UNSG32 u32[1];
            struct {
            struct w32CR5_EVENTO;
                   };
                 } TCR5_EVENTO;
    typedef union  TCR5_DBGACK
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGACK;
                   };
                 } TCR5_DBGACK;
    typedef union  TCR5_DBGRSTREQ
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGRSTREQ;
                   };
                 } TCR5_DBGRSTREQ;
    typedef union  TCR5_DBGTRIGGER
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGTRIGGER;
                   };
                 } TCR5_DBGTRIGGER;
    typedef union  TCR5_COMMRX
          { UNSG32 u32[1];
            struct {
            struct w32CR5_COMMRX;
                   };
                 } TCR5_COMMRX;
    typedef union  TCR5_COMMTX
          { UNSG32 u32[1];
            struct {
            struct w32CR5_COMMTX;
                   };
                 } TCR5_COMMTX;
    typedef union  TCR5_DBGRESTARTED
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGRESTARTED;
                   };
                 } TCR5_DBGRESTARTED;
    typedef union  TCR5_DBGNOPWRDWN
          { UNSG32 u32[1];
            struct {
            struct w32CR5_DBGNOPWRDWN;
                   };
                 } TCR5_DBGNOPWRDWN;

    ///////////////////////////////////////////////////////////
     SIGN32 CR5_drvrd(SIE_CR5 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 CR5_drvwr(SIE_CR5 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void CR5_reset(SIE_CR5 *p);
     SIGN32 CR5_cmp  (SIE_CR5 *p, SIE_CR5 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define CR5_check(p,pie,pfx,hLOG) CR5_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define CR5_print(p,    pfx,hLOG) CR5_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: CR5
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BCM_CR5                 biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SCPU_G1_OFFSET       (P)
///               %unsigned 16 unused                    0x0
///               %unsigned 16 SCPU_G1_OFFSET            0x0
///                                    ###
///                                    * When SCPU address is in [1G,2G), the address is offseted by
///                                    * adjustedAddr[31:16] = SCPU_G1_OFFSET + origAddr[31:16];
///                                    * adjustedAddr[15:0] = origAddr[15:0];
///                                    ###
///     @ 0x00004 SCPU_G2_OFFSET       (P)
///               %unsigned 16 unused                    0x0
///               %unsigned 16 SCPU_G2_OFFSET            0x0
///                                    ###
///                                    * When SCPU address is in [2G,3G), the address is offseted by
///                                    * adjustedAddr[31:16] = SCPU_G2_OFFSET + origAddr[31:16];
///                                    * adjustedAddr[15:0] = origAddr[15:0];
///                                    ###
///     @ 0x00008 SCPU_RAM_OFFSET      (P)
///               %unsigned 17 unused                    0x0
///               %unsigned 15 SCPU_RAM_OFFSET           0x1
///                                    ###
///                                    * In SCPU 1G space, address between {SCPU_RAM_OFFSET,17'h0} to { SCPU_RAM_OFFSET,17'h1ffff}, is EROM space. If set to 0, RAM space can't be accessed and overlapped by ROM
///                                    ###
///     @ 0x0000C RAM_ROM_PROT         (P)
///               %unsigned 1  RAM_PROTEN                0x0
///                                    ###
///                                    * 1: enable ram protection
///                                    ###
///               %unsigned 1  RAM_RST                   0x0
///                                    ###
///                                    * 1: reset ram protect
///                                    ###
///               %unsigned 1  ROM_PROTEN                0x0
///                                    ###
///                                    * 1: enable rom protection
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00010                      (W-)
///     #         # Stuffing bytes...
///               %% 384
///     @ 0x00040                      (P)
///     # 0x00040 CR5                  
///               $CR5                 CR5               REG          
///     @ 0x000FC                      (P)
///     # 0x000FC WTM                  
///               $WTM                 WTM               REG          
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     292B, bits:     375b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_BCM_CR5
#define h_BCM_CR5 (){}

    #define     RA_BCM_CR5_SCPU_G1_OFFSET                      0x0000

    #define     BA_BCM_CR5_SCPU_G1_OFFSET_unused               0x0000
    #define     B16BCM_CR5_SCPU_G1_OFFSET_unused               0x0000
    #define   LSb32BCM_CR5_SCPU_G1_OFFSET_unused                  0
    #define   LSb16BCM_CR5_SCPU_G1_OFFSET_unused                  0
    #define       bBCM_CR5_SCPU_G1_OFFSET_unused               16
    #define   MSK32BCM_CR5_SCPU_G1_OFFSET_unused                  0x0000FFFF

    #define     BA_BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET       0x0002
    #define     B16BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET       0x0002
    #define   LSb32BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET          16
    #define   LSb16BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET          0
    #define       bBCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET       16
    #define   MSK32BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET          0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_BCM_CR5_SCPU_G2_OFFSET                      0x0004

    #define     BA_BCM_CR5_SCPU_G2_OFFSET_unused               0x0004
    #define     B16BCM_CR5_SCPU_G2_OFFSET_unused               0x0004
    #define   LSb32BCM_CR5_SCPU_G2_OFFSET_unused                  0
    #define   LSb16BCM_CR5_SCPU_G2_OFFSET_unused                  0
    #define       bBCM_CR5_SCPU_G2_OFFSET_unused               16
    #define   MSK32BCM_CR5_SCPU_G2_OFFSET_unused                  0x0000FFFF

    #define     BA_BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET       0x0006
    #define     B16BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET       0x0006
    #define   LSb32BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET          16
    #define   LSb16BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET          0
    #define       bBCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET       16
    #define   MSK32BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET          0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_BCM_CR5_SCPU_RAM_OFFSET                     0x0008

    #define     BA_BCM_CR5_SCPU_RAM_OFFSET_unused              0x0008
    #define     B16BCM_CR5_SCPU_RAM_OFFSET_unused              0x0008
    #define   LSb32BCM_CR5_SCPU_RAM_OFFSET_unused                 0
    #define   LSb16BCM_CR5_SCPU_RAM_OFFSET_unused                 0
    #define       bBCM_CR5_SCPU_RAM_OFFSET_unused              17
    #define   MSK32BCM_CR5_SCPU_RAM_OFFSET_unused                 0x0001FFFF

    #define     BA_BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET     0x000A
    #define     B16BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET     0x000A
    #define   LSb32BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET        17
    #define   LSb16BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET        1
    #define       bBCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET     15
    #define   MSK32BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET        0xFFFE0000
    ///////////////////////////////////////////////////////////
    #define     RA_BCM_CR5_RAM_ROM_PROT                        0x000C

    #define     BA_BCM_CR5_RAM_ROM_PROT_RAM_PROTEN             0x000C
    #define     B16BCM_CR5_RAM_ROM_PROT_RAM_PROTEN             0x000C
    #define   LSb32BCM_CR5_RAM_ROM_PROT_RAM_PROTEN                0
    #define   LSb16BCM_CR5_RAM_ROM_PROT_RAM_PROTEN                0
    #define       bBCM_CR5_RAM_ROM_PROT_RAM_PROTEN             1
    #define   MSK32BCM_CR5_RAM_ROM_PROT_RAM_PROTEN                0x00000001

    #define     BA_BCM_CR5_RAM_ROM_PROT_RAM_RST                0x000C
    #define     B16BCM_CR5_RAM_ROM_PROT_RAM_RST                0x000C
    #define   LSb32BCM_CR5_RAM_ROM_PROT_RAM_RST                   1
    #define   LSb16BCM_CR5_RAM_ROM_PROT_RAM_RST                   1
    #define       bBCM_CR5_RAM_ROM_PROT_RAM_RST                1
    #define   MSK32BCM_CR5_RAM_ROM_PROT_RAM_RST                   0x00000002

    #define     BA_BCM_CR5_RAM_ROM_PROT_ROM_PROTEN             0x000C
    #define     B16BCM_CR5_RAM_ROM_PROT_ROM_PROTEN             0x000C
    #define   LSb32BCM_CR5_RAM_ROM_PROT_ROM_PROTEN                2
    #define   LSb16BCM_CR5_RAM_ROM_PROT_ROM_PROTEN                2
    #define       bBCM_CR5_RAM_ROM_PROT_ROM_PROTEN             1
    #define   MSK32BCM_CR5_RAM_ROM_PROT_ROM_PROTEN                0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_BCM_CR5_CR5                                 0x0040
    ///////////////////////////////////////////////////////////
    #define     RA_BCM_CR5_WTM                                 0x00FC
    ///////////////////////////////////////////////////////////

    typedef struct SIE_BCM_CR5 {
    ///////////////////////////////////////////////////////////
    #define   GET32BCM_CR5_SCPU_G1_OFFSET_unused(r32)          _BFGET_(r32,15, 0)
    #define   SET32BCM_CR5_SCPU_G1_OFFSET_unused(r32,v)        _BFSET_(r32,15, 0,v)
    #define   GET16BCM_CR5_SCPU_G1_OFFSET_unused(r16)          _BFGET_(r16,15, 0)
    #define   SET16BCM_CR5_SCPU_G1_OFFSET_unused(r16,v)        _BFSET_(r16,15, 0,v)

    #define   GET32BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET(r32)  _BFGET_(r32,31,16)
    #define   SET32BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET(r32,v) _BFSET_(r32,31,16,v)
    #define   GET16BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET(r16)  _BFGET_(r16,15, 0)
    #define   SET16BCM_CR5_SCPU_G1_OFFSET_SCPU_G1_OFFSET(r16,v) _BFSET_(r16,15, 0,v)

    #define     w32BCM_CR5_SCPU_G1_OFFSET                      {\
            UNSG32 uSCPU_G1_OFFSET_unused                      : 16;\
            UNSG32 uSCPU_G1_OFFSET_SCPU_G1_OFFSET              : 16;\
          }
    union { UNSG32 u32BCM_CR5_SCPU_G1_OFFSET;
            struct w32BCM_CR5_SCPU_G1_OFFSET;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32BCM_CR5_SCPU_G2_OFFSET_unused(r32)          _BFGET_(r32,15, 0)
    #define   SET32BCM_CR5_SCPU_G2_OFFSET_unused(r32,v)        _BFSET_(r32,15, 0,v)
    #define   GET16BCM_CR5_SCPU_G2_OFFSET_unused(r16)          _BFGET_(r16,15, 0)
    #define   SET16BCM_CR5_SCPU_G2_OFFSET_unused(r16,v)        _BFSET_(r16,15, 0,v)

    #define   GET32BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET(r32)  _BFGET_(r32,31,16)
    #define   SET32BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET(r32,v) _BFSET_(r32,31,16,v)
    #define   GET16BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET(r16)  _BFGET_(r16,15, 0)
    #define   SET16BCM_CR5_SCPU_G2_OFFSET_SCPU_G2_OFFSET(r16,v) _BFSET_(r16,15, 0,v)

    #define     w32BCM_CR5_SCPU_G2_OFFSET                      {\
            UNSG32 uSCPU_G2_OFFSET_unused                      : 16;\
            UNSG32 uSCPU_G2_OFFSET_SCPU_G2_OFFSET              : 16;\
          }
    union { UNSG32 u32BCM_CR5_SCPU_G2_OFFSET;
            struct w32BCM_CR5_SCPU_G2_OFFSET;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32BCM_CR5_SCPU_RAM_OFFSET_unused(r32)         _BFGET_(r32,16, 0)
    #define   SET32BCM_CR5_SCPU_RAM_OFFSET_unused(r32,v)       _BFSET_(r32,16, 0,v)

    #define   GET32BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET(r32) _BFGET_(r32,31,17)
    #define   SET32BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET(r32,v) _BFSET_(r32,31,17,v)
    #define   GET16BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET(r16) _BFGET_(r16,15, 1)
    #define   SET16BCM_CR5_SCPU_RAM_OFFSET_SCPU_RAM_OFFSET(r16,v) _BFSET_(r16,15, 1,v)

    #define     w32BCM_CR5_SCPU_RAM_OFFSET                     {\
            UNSG32 uSCPU_RAM_OFFSET_unused                     : 17;\
            UNSG32 uSCPU_RAM_OFFSET_SCPU_RAM_OFFSET            : 15;\
          }
    union { UNSG32 u32BCM_CR5_SCPU_RAM_OFFSET;
            struct w32BCM_CR5_SCPU_RAM_OFFSET;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32BCM_CR5_RAM_ROM_PROT_RAM_PROTEN(r32)        _BFGET_(r32, 0, 0)
    #define   SET32BCM_CR5_RAM_ROM_PROT_RAM_PROTEN(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16BCM_CR5_RAM_ROM_PROT_RAM_PROTEN(r16)        _BFGET_(r16, 0, 0)
    #define   SET16BCM_CR5_RAM_ROM_PROT_RAM_PROTEN(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32BCM_CR5_RAM_ROM_PROT_RAM_RST(r32)           _BFGET_(r32, 1, 1)
    #define   SET32BCM_CR5_RAM_ROM_PROT_RAM_RST(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16BCM_CR5_RAM_ROM_PROT_RAM_RST(r16)           _BFGET_(r16, 1, 1)
    #define   SET16BCM_CR5_RAM_ROM_PROT_RAM_RST(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32BCM_CR5_RAM_ROM_PROT_ROM_PROTEN(r32)        _BFGET_(r32, 2, 2)
    #define   SET32BCM_CR5_RAM_ROM_PROT_ROM_PROTEN(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16BCM_CR5_RAM_ROM_PROT_ROM_PROTEN(r16)        _BFGET_(r16, 2, 2)
    #define   SET16BCM_CR5_RAM_ROM_PROT_ROM_PROTEN(r16,v)      _BFSET_(r16, 2, 2,v)

    #define     w32BCM_CR5_RAM_ROM_PROT                        {\
            UNSG32 uRAM_ROM_PROT_RAM_PROTEN                    :  1;\
            UNSG32 uRAM_ROM_PROT_RAM_RST                       :  1;\
            UNSG32 uRAM_ROM_PROT_ROM_PROTEN                    :  1;\
            UNSG32 RSVDxC_b3                                   : 29;\
          }
    union { UNSG32 u32BCM_CR5_RAM_ROM_PROT;
            struct w32BCM_CR5_RAM_ROM_PROT;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx10                                     [48];
    ///////////////////////////////////////////////////////////
              SIE_CR5                                          ie_CR5;
    ///////////////////////////////////////////////////////////
              SIE_WTM                                          ie_WTM;
    ///////////////////////////////////////////////////////////
    } SIE_BCM_CR5;

    typedef union  T32BCM_CR5_SCPU_G1_OFFSET
          { UNSG32 u32;
            struct w32BCM_CR5_SCPU_G1_OFFSET;
                 } T32BCM_CR5_SCPU_G1_OFFSET;
    typedef union  T32BCM_CR5_SCPU_G2_OFFSET
          { UNSG32 u32;
            struct w32BCM_CR5_SCPU_G2_OFFSET;
                 } T32BCM_CR5_SCPU_G2_OFFSET;
    typedef union  T32BCM_CR5_SCPU_RAM_OFFSET
          { UNSG32 u32;
            struct w32BCM_CR5_SCPU_RAM_OFFSET;
                 } T32BCM_CR5_SCPU_RAM_OFFSET;
    typedef union  T32BCM_CR5_RAM_ROM_PROT
          { UNSG32 u32;
            struct w32BCM_CR5_RAM_ROM_PROT;
                 } T32BCM_CR5_RAM_ROM_PROT;
    ///////////////////////////////////////////////////////////

    typedef union  TBCM_CR5_SCPU_G1_OFFSET
          { UNSG32 u32[1];
            struct {
            struct w32BCM_CR5_SCPU_G1_OFFSET;
                   };
                 } TBCM_CR5_SCPU_G1_OFFSET;
    typedef union  TBCM_CR5_SCPU_G2_OFFSET
          { UNSG32 u32[1];
            struct {
            struct w32BCM_CR5_SCPU_G2_OFFSET;
                   };
                 } TBCM_CR5_SCPU_G2_OFFSET;
    typedef union  TBCM_CR5_SCPU_RAM_OFFSET
          { UNSG32 u32[1];
            struct {
            struct w32BCM_CR5_SCPU_RAM_OFFSET;
                   };
                 } TBCM_CR5_SCPU_RAM_OFFSET;
    typedef union  TBCM_CR5_RAM_ROM_PROT
          { UNSG32 u32[1];
            struct {
            struct w32BCM_CR5_RAM_ROM_PROT;
                   };
                 } TBCM_CR5_RAM_ROM_PROT;

    ///////////////////////////////////////////////////////////
     SIGN32 BCM_CR5_drvrd(SIE_BCM_CR5 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 BCM_CR5_drvwr(SIE_BCM_CR5 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void BCM_CR5_reset(SIE_BCM_CR5 *p);
     SIGN32 BCM_CR5_cmp  (SIE_BCM_CR5 *p, SIE_BCM_CR5 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define BCM_CR5_check(p,pie,pfx,hLOG) BCM_CR5_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define BCM_CR5_print(p,    pfx,hLOG) BCM_CR5_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: BCM_CR5
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE BCMCR5MAP                                (4,4)
///     ###
///     * Memory map for ROM inside BCM-CR5 subsystem
///     ###
///     # # ----------------------------------------------------------
///               : ROM_ADDR_BASE      0x0
///                            ###
///                            * Base address of CR5 ROM
///                            * 128KB
///                            * Size of ROM
///                            ###
///               : ROM_ADDR_SIZE      0x20000
///                            ###
///                            * Size of ROM
///                            * Address decoding bit
///                            ###
///               : ROM_ADDR_DEC_BIT   0x11
///                            ###
///                            * 128KB has 17-bit offset
///                            * Memory map for ROM inside BCM-CR5 subsystem
///                            ###
///               : RAM_ADDR_BASE      0x20000
///                            ###
///                            * Base address of CR5 EROM
///                            * 128KB
///                            * Size of ROM
///                            ###
///               : RAM_ADDR_SIZE      0x20000
///                            ###
///                            * Size of EROM
///                            * Address decoding bit
///                            ###
///               : RAM_ADDR_DEC_BIT   0x11
///                            ###
///                            * 128KB has 17-bit offset
///                            * Memory map for BCM-BIU inside BCM-CR5 subsystem
///                            ###
///               : BCM_ADDR_BASE      0x20000
///                            ###
///                            * Base address of BCM Registers
///                            * 64KB
///                            * Size of BCM-BIU registers
///                            ###
///               : BCM_ADDR_SIZE      0x10000
///                            ###
///                            * Size of BCM Registers
///                            * Address decoding bit
///                            ###
///               : BCM_ADDR_DEC_BIT   0x10
///                            ###
///                            * 64KB has 16-bit offset
///                            * Memory map for WRAP-BUI inside BCM-CR5 subsystem
///                            ###
///               : WRAP_ADDR_BASE     0x30000
///                            ###
///                            * Base address of wrap Registers
///                            * 32KB
///                            * Size of WRAP-BIU registers
///                            ###
///               : WRAP_ADDR_SIZE     0x8000
///                            ###
///                            * Size of TSP Registers
///                            * Address decoding bit
///                            ###
///               : WRAP_ADDR_DEC_BIT  0xF
///                            ###
///                            * 32KB has 15-bit offset
///                            * Programming Guide
///                            ###
////////////////////////////////////////////////////////////
#ifndef h_BCMCR5MAP
#define h_BCMCR5MAP (){}

    #define        BCMCR5MAP_ROM_ADDR_BASE                     0x0
    #define        BCMCR5MAP_ROM_ADDR_SIZE                     0x20000
    #define        BCMCR5MAP_ROM_ADDR_DEC_BIT                  0x11
    #define        BCMCR5MAP_RAM_ADDR_BASE                     0x20000
    #define        BCMCR5MAP_RAM_ADDR_SIZE                     0x20000
    #define        BCMCR5MAP_RAM_ADDR_DEC_BIT                  0x11
    #define        BCMCR5MAP_BCM_ADDR_BASE                     0x20000
    #define        BCMCR5MAP_BCM_ADDR_SIZE                     0x10000
    #define        BCMCR5MAP_BCM_ADDR_DEC_BIT                  0x10
    #define        BCMCR5MAP_WRAP_ADDR_BASE                    0x30000
    #define        BCMCR5MAP_WRAP_ADDR_SIZE                    0x8000
    #define        BCMCR5MAP_WRAP_ADDR_DEC_BIT                 0xF
    ///////////////////////////////////////////////////////////

#endif
//////
/// ENDOFINTERFACE: BCMCR5MAP
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: bcmCR5.h
////////////////////////////////////////////////////////////

