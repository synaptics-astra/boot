//////
/// don't edit! auto-generated by docc: nocs3.h
////////////////////////////////////////////////////////////
#ifndef nocs3_h
#define nocs3_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
/// 
/// $INTERFACE Reg_SingleSel                            (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Reg_SingleSel        (WOC-)
///               %unsigned 1  Bit0                      0x0
///               %unsigned 1  Bit1                      0x0
///               %unsigned 1  Bit2                      0x0
///               %unsigned 1  Bit3                      0x0
///               %unsigned 1  Bit4                      0x0
///               %unsigned 1  Bit5                      0x0
///               %unsigned 1  Bit6                      0x0
///               %unsigned 1  Bit7                      0x0
///               %unsigned 1  Bit8                      0x0
///               %unsigned 1  Bit9                      0x0
///               %unsigned 1  Bit10                     0x0
///               %unsigned 1  Bit11                     0x0
///               %unsigned 1  Bit12                     0x0
///               %unsigned 1  Bit13                     0x0
///               %unsigned 1  Bit14                     0x0
///               %unsigned 1  Bit15                     0x0
///               %unsigned 1  Bit16                     0x0
///               %unsigned 1  Bit17                     0x0
///               %unsigned 1  Bit18                     0x0
///               %unsigned 1  Bit19                     0x0
///               %unsigned 1  Bit20                     0x0
///               %unsigned 1  Bit21                     0x0
///               %unsigned 1  Bit22                     0x0
///               %unsigned 1  Bit23                     0x0
///               %unsigned 1  Bit24                     0x0
///               %unsigned 1  Bit25                     0x0
///               %unsigned 1  Bit26                     0x0
///               %unsigned 1  Bit27                     0x0
///               %unsigned 1  Bit28                     0x0
///               %unsigned 1  Bit29                     0x0
///               %unsigned 1  Bit30                     0x0
///               %unsigned 1  Bit31                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_Reg_SingleSel
#define h_Reg_SingleSel (){}

    #define     RA_Reg_SingleSel_Reg_SingleSel                 0x0000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit0            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit0            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit0               0
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit0               0
    #define       bReg_SingleSel_Reg_SingleSel_Bit0            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit0               0x00000001

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit1            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit1            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit1               1
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit1               1
    #define       bReg_SingleSel_Reg_SingleSel_Bit1            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit1               0x00000002

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit2            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit2            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit2               2
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit2               2
    #define       bReg_SingleSel_Reg_SingleSel_Bit2            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit2               0x00000004

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit3            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit3            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit3               3
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit3               3
    #define       bReg_SingleSel_Reg_SingleSel_Bit3            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit3               0x00000008

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit4            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit4            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit4               4
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit4               4
    #define       bReg_SingleSel_Reg_SingleSel_Bit4            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit4               0x00000010

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit5            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit5            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit5               5
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit5               5
    #define       bReg_SingleSel_Reg_SingleSel_Bit5            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit5               0x00000020

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit6            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit6            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit6               6
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit6               6
    #define       bReg_SingleSel_Reg_SingleSel_Bit6            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit6               0x00000040

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit7            0x0000
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit7            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit7               7
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit7               7
    #define       bReg_SingleSel_Reg_SingleSel_Bit7            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit7               0x00000080

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit8            0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit8            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit8               8
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit8               8
    #define       bReg_SingleSel_Reg_SingleSel_Bit8            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit8               0x00000100

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit9            0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit9            0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit9               9
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit9               9
    #define       bReg_SingleSel_Reg_SingleSel_Bit9            1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit9               0x00000200

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit10           0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit10           0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit10              10
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit10              10
    #define       bReg_SingleSel_Reg_SingleSel_Bit10           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit10              0x00000400

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit11           0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit11           0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit11              11
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit11              11
    #define       bReg_SingleSel_Reg_SingleSel_Bit11           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit11              0x00000800

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit12           0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit12           0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit12              12
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit12              12
    #define       bReg_SingleSel_Reg_SingleSel_Bit12           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit12              0x00001000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit13           0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit13           0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit13              13
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit13              13
    #define       bReg_SingleSel_Reg_SingleSel_Bit13           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit13              0x00002000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit14           0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit14           0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit14              14
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit14              14
    #define       bReg_SingleSel_Reg_SingleSel_Bit14           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit14              0x00004000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit15           0x0001
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit15           0x0000
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit15              15
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit15              15
    #define       bReg_SingleSel_Reg_SingleSel_Bit15           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit15              0x00008000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit16           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit16           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit16              16
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit16              0
    #define       bReg_SingleSel_Reg_SingleSel_Bit16           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit16              0x00010000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit17           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit17           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit17              17
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit17              1
    #define       bReg_SingleSel_Reg_SingleSel_Bit17           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit17              0x00020000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit18           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit18           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit18              18
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit18              2
    #define       bReg_SingleSel_Reg_SingleSel_Bit18           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit18              0x00040000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit19           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit19           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit19              19
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit19              3
    #define       bReg_SingleSel_Reg_SingleSel_Bit19           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit19              0x00080000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit20           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit20           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit20              20
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit20              4
    #define       bReg_SingleSel_Reg_SingleSel_Bit20           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit20              0x00100000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit21           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit21           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit21              21
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit21              5
    #define       bReg_SingleSel_Reg_SingleSel_Bit21           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit21              0x00200000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit22           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit22           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit22              22
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit22              6
    #define       bReg_SingleSel_Reg_SingleSel_Bit22           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit22              0x00400000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit23           0x0002
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit23           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit23              23
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit23              7
    #define       bReg_SingleSel_Reg_SingleSel_Bit23           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit23              0x00800000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit24           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit24           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit24              24
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit24              8
    #define       bReg_SingleSel_Reg_SingleSel_Bit24           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit24              0x01000000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit25           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit25           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit25              25
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit25              9
    #define       bReg_SingleSel_Reg_SingleSel_Bit25           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit25              0x02000000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit26           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit26           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit26              26
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit26              10
    #define       bReg_SingleSel_Reg_SingleSel_Bit26           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit26              0x04000000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit27           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit27           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit27              27
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit27              11
    #define       bReg_SingleSel_Reg_SingleSel_Bit27           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit27              0x08000000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit28           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit28           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit28              28
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit28              12
    #define       bReg_SingleSel_Reg_SingleSel_Bit28           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit28              0x10000000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit29           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit29           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit29              29
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit29              13
    #define       bReg_SingleSel_Reg_SingleSel_Bit29           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit29              0x20000000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit30           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit30           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit30              30
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit30              14
    #define       bReg_SingleSel_Reg_SingleSel_Bit30           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit30              0x40000000

    #define     BA_Reg_SingleSel_Reg_SingleSel_Bit31           0x0003
    #define     B16Reg_SingleSel_Reg_SingleSel_Bit31           0x0002
    #define   LSb32Reg_SingleSel_Reg_SingleSel_Bit31              31
    #define   LSb16Reg_SingleSel_Reg_SingleSel_Bit31              15
    #define       bReg_SingleSel_Reg_SingleSel_Bit31           1
    #define   MSK32Reg_SingleSel_Reg_SingleSel_Bit31              0x80000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_Reg_SingleSel {
    ///////////////////////////////////////////////////////////
    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit0(r32)       _BFGET_(r32, 0, 0)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit0(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit0(r16)       _BFGET_(r16, 0, 0)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit0(r16,v)     _BFSET_(r16, 0, 0,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit1(r32)       _BFGET_(r32, 1, 1)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit1(r32,v)     _BFSET_(r32, 1, 1,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit1(r16)       _BFGET_(r16, 1, 1)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit1(r16,v)     _BFSET_(r16, 1, 1,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit2(r32)       _BFGET_(r32, 2, 2)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit2(r32,v)     _BFSET_(r32, 2, 2,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit2(r16)       _BFGET_(r16, 2, 2)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit2(r16,v)     _BFSET_(r16, 2, 2,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit3(r32)       _BFGET_(r32, 3, 3)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit3(r32,v)     _BFSET_(r32, 3, 3,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit3(r16)       _BFGET_(r16, 3, 3)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit3(r16,v)     _BFSET_(r16, 3, 3,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit4(r32)       _BFGET_(r32, 4, 4)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit4(r32,v)     _BFSET_(r32, 4, 4,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit4(r16)       _BFGET_(r16, 4, 4)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit4(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit5(r32)       _BFGET_(r32, 5, 5)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit5(r32,v)     _BFSET_(r32, 5, 5,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit5(r16)       _BFGET_(r16, 5, 5)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit5(r16,v)     _BFSET_(r16, 5, 5,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit6(r32)       _BFGET_(r32, 6, 6)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit6(r32,v)     _BFSET_(r32, 6, 6,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit6(r16)       _BFGET_(r16, 6, 6)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit6(r16,v)     _BFSET_(r16, 6, 6,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit7(r32)       _BFGET_(r32, 7, 7)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit7(r32,v)     _BFSET_(r32, 7, 7,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit7(r16)       _BFGET_(r16, 7, 7)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit7(r16,v)     _BFSET_(r16, 7, 7,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit8(r32)       _BFGET_(r32, 8, 8)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit8(r32,v)     _BFSET_(r32, 8, 8,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit8(r16)       _BFGET_(r16, 8, 8)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit8(r16,v)     _BFSET_(r16, 8, 8,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit9(r32)       _BFGET_(r32, 9, 9)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit9(r32,v)     _BFSET_(r32, 9, 9,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit9(r16)       _BFGET_(r16, 9, 9)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit9(r16,v)     _BFSET_(r16, 9, 9,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit10(r32)      _BFGET_(r32,10,10)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit10(r32,v)    _BFSET_(r32,10,10,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit10(r16)      _BFGET_(r16,10,10)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit10(r16,v)    _BFSET_(r16,10,10,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit11(r32)      _BFGET_(r32,11,11)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit11(r32,v)    _BFSET_(r32,11,11,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit11(r16)      _BFGET_(r16,11,11)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit11(r16,v)    _BFSET_(r16,11,11,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit12(r32)      _BFGET_(r32,12,12)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit12(r32,v)    _BFSET_(r32,12,12,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit12(r16)      _BFGET_(r16,12,12)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit12(r16,v)    _BFSET_(r16,12,12,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit13(r32)      _BFGET_(r32,13,13)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit13(r32,v)    _BFSET_(r32,13,13,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit13(r16)      _BFGET_(r16,13,13)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit13(r16,v)    _BFSET_(r16,13,13,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit14(r32)      _BFGET_(r32,14,14)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit14(r32,v)    _BFSET_(r32,14,14,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit14(r16)      _BFGET_(r16,14,14)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit14(r16,v)    _BFSET_(r16,14,14,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit15(r32)      _BFGET_(r32,15,15)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit15(r32,v)    _BFSET_(r32,15,15,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit15(r16)      _BFGET_(r16,15,15)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit15(r16,v)    _BFSET_(r16,15,15,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit16(r32)      _BFGET_(r32,16,16)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit16(r32,v)    _BFSET_(r32,16,16,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit16(r16)      _BFGET_(r16, 0, 0)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit16(r16,v)    _BFSET_(r16, 0, 0,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit17(r32)      _BFGET_(r32,17,17)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit17(r32,v)    _BFSET_(r32,17,17,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit17(r16)      _BFGET_(r16, 1, 1)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit17(r16,v)    _BFSET_(r16, 1, 1,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit18(r32)      _BFGET_(r32,18,18)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit18(r32,v)    _BFSET_(r32,18,18,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit18(r16)      _BFGET_(r16, 2, 2)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit18(r16,v)    _BFSET_(r16, 2, 2,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit19(r32)      _BFGET_(r32,19,19)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit19(r32,v)    _BFSET_(r32,19,19,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit19(r16)      _BFGET_(r16, 3, 3)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit19(r16,v)    _BFSET_(r16, 3, 3,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit20(r32)      _BFGET_(r32,20,20)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit20(r32,v)    _BFSET_(r32,20,20,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit20(r16)      _BFGET_(r16, 4, 4)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit20(r16,v)    _BFSET_(r16, 4, 4,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit21(r32)      _BFGET_(r32,21,21)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit21(r32,v)    _BFSET_(r32,21,21,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit21(r16)      _BFGET_(r16, 5, 5)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit21(r16,v)    _BFSET_(r16, 5, 5,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit22(r32)      _BFGET_(r32,22,22)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit22(r32,v)    _BFSET_(r32,22,22,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit22(r16)      _BFGET_(r16, 6, 6)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit22(r16,v)    _BFSET_(r16, 6, 6,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit23(r32)      _BFGET_(r32,23,23)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit23(r32,v)    _BFSET_(r32,23,23,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit23(r16)      _BFGET_(r16, 7, 7)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit23(r16,v)    _BFSET_(r16, 7, 7,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit24(r32)      _BFGET_(r32,24,24)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit24(r32,v)    _BFSET_(r32,24,24,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit24(r16)      _BFGET_(r16, 8, 8)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit24(r16,v)    _BFSET_(r16, 8, 8,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit25(r32)      _BFGET_(r32,25,25)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit25(r32,v)    _BFSET_(r32,25,25,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit25(r16)      _BFGET_(r16, 9, 9)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit25(r16,v)    _BFSET_(r16, 9, 9,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit26(r32)      _BFGET_(r32,26,26)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit26(r32,v)    _BFSET_(r32,26,26,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit26(r16)      _BFGET_(r16,10,10)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit26(r16,v)    _BFSET_(r16,10,10,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit27(r32)      _BFGET_(r32,27,27)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit27(r32,v)    _BFSET_(r32,27,27,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit27(r16)      _BFGET_(r16,11,11)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit27(r16,v)    _BFSET_(r16,11,11,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit28(r32)      _BFGET_(r32,28,28)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit28(r32,v)    _BFSET_(r32,28,28,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit28(r16)      _BFGET_(r16,12,12)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit28(r16,v)    _BFSET_(r16,12,12,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit29(r32)      _BFGET_(r32,29,29)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit29(r32,v)    _BFSET_(r32,29,29,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit29(r16)      _BFGET_(r16,13,13)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit29(r16,v)    _BFSET_(r16,13,13,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit30(r32)      _BFGET_(r32,30,30)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit30(r32,v)    _BFSET_(r32,30,30,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit30(r16)      _BFGET_(r16,14,14)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit30(r16,v)    _BFSET_(r16,14,14,v)

    #define   GET32Reg_SingleSel_Reg_SingleSel_Bit31(r32)      _BFGET_(r32,31,31)
    #define   SET32Reg_SingleSel_Reg_SingleSel_Bit31(r32,v)    _BFSET_(r32,31,31,v)
    #define   GET16Reg_SingleSel_Reg_SingleSel_Bit31(r16)      _BFGET_(r16,15,15)
    #define   SET16Reg_SingleSel_Reg_SingleSel_Bit31(r16,v)    _BFSET_(r16,15,15,v)

    #define     w32Reg_SingleSel_Reg_SingleSel                 {\
            UNSG32 uReg_SingleSel_Bit0                         :  1;\
            UNSG32 uReg_SingleSel_Bit1                         :  1;\
            UNSG32 uReg_SingleSel_Bit2                         :  1;\
            UNSG32 uReg_SingleSel_Bit3                         :  1;\
            UNSG32 uReg_SingleSel_Bit4                         :  1;\
            UNSG32 uReg_SingleSel_Bit5                         :  1;\
            UNSG32 uReg_SingleSel_Bit6                         :  1;\
            UNSG32 uReg_SingleSel_Bit7                         :  1;\
            UNSG32 uReg_SingleSel_Bit8                         :  1;\
            UNSG32 uReg_SingleSel_Bit9                         :  1;\
            UNSG32 uReg_SingleSel_Bit10                        :  1;\
            UNSG32 uReg_SingleSel_Bit11                        :  1;\
            UNSG32 uReg_SingleSel_Bit12                        :  1;\
            UNSG32 uReg_SingleSel_Bit13                        :  1;\
            UNSG32 uReg_SingleSel_Bit14                        :  1;\
            UNSG32 uReg_SingleSel_Bit15                        :  1;\
            UNSG32 uReg_SingleSel_Bit16                        :  1;\
            UNSG32 uReg_SingleSel_Bit17                        :  1;\
            UNSG32 uReg_SingleSel_Bit18                        :  1;\
            UNSG32 uReg_SingleSel_Bit19                        :  1;\
            UNSG32 uReg_SingleSel_Bit20                        :  1;\
            UNSG32 uReg_SingleSel_Bit21                        :  1;\
            UNSG32 uReg_SingleSel_Bit22                        :  1;\
            UNSG32 uReg_SingleSel_Bit23                        :  1;\
            UNSG32 uReg_SingleSel_Bit24                        :  1;\
            UNSG32 uReg_SingleSel_Bit25                        :  1;\
            UNSG32 uReg_SingleSel_Bit26                        :  1;\
            UNSG32 uReg_SingleSel_Bit27                        :  1;\
            UNSG32 uReg_SingleSel_Bit28                        :  1;\
            UNSG32 uReg_SingleSel_Bit29                        :  1;\
            UNSG32 uReg_SingleSel_Bit30                        :  1;\
            UNSG32 uReg_SingleSel_Bit31                        :  1;\
          }
    union { UNSG32 u32Reg_SingleSel_Reg_SingleSel;
            struct w32Reg_SingleSel_Reg_SingleSel;
          };
    ///////////////////////////////////////////////////////////
    } SIE_Reg_SingleSel;

    typedef union  T32Reg_SingleSel_Reg_SingleSel
          { UNSG32 u32;
            struct w32Reg_SingleSel_Reg_SingleSel;
                 } T32Reg_SingleSel_Reg_SingleSel;
    ///////////////////////////////////////////////////////////

    typedef union  TReg_SingleSel_Reg_SingleSel
          { UNSG32 u32[1];
            struct {
            struct w32Reg_SingleSel_Reg_SingleSel;
                   };
                 } TReg_SingleSel_Reg_SingleSel;

    ///////////////////////////////////////////////////////////
     SIGN32 Reg_SingleSel_drvrd(SIE_Reg_SingleSel *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 Reg_SingleSel_drvwr(SIE_Reg_SingleSel *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void Reg_SingleSel_reset(SIE_Reg_SingleSel *p);
     SIGN32 Reg_SingleSel_cmp  (SIE_Reg_SingleSel *p, SIE_Reg_SingleSel *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define Reg_SingleSel_check(p,pie,pfx,hLOG) Reg_SingleSel_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define Reg_SingleSel_print(p,    pfx,hLOG) Reg_SingleSel_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: Reg_SingleSel
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE OneReg                                   (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 OneReg               (RW)
///               %unsigned 8  Byte0                     0x0
///               %unsigned 8  Byte1                     0x0
///               %unsigned 8  Byte2                     0x0
///               %unsigned 8  Byte3                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_OneReg
#define h_OneReg (){}

    #define     RA_OneReg_OneReg                               0x0000

    #define     BA_OneReg_OneReg_Byte0                         0x0000
    #define     B16OneReg_OneReg_Byte0                         0x0000
    #define   LSb32OneReg_OneReg_Byte0                            0
    #define   LSb16OneReg_OneReg_Byte0                            0
    #define       bOneReg_OneReg_Byte0                         8
    #define   MSK32OneReg_OneReg_Byte0                            0x000000FF

    #define     BA_OneReg_OneReg_Byte1                         0x0001
    #define     B16OneReg_OneReg_Byte1                         0x0000
    #define   LSb32OneReg_OneReg_Byte1                            8
    #define   LSb16OneReg_OneReg_Byte1                            8
    #define       bOneReg_OneReg_Byte1                         8
    #define   MSK32OneReg_OneReg_Byte1                            0x0000FF00

    #define     BA_OneReg_OneReg_Byte2                         0x0002
    #define     B16OneReg_OneReg_Byte2                         0x0002
    #define   LSb32OneReg_OneReg_Byte2                            16
    #define   LSb16OneReg_OneReg_Byte2                            0
    #define       bOneReg_OneReg_Byte2                         8
    #define   MSK32OneReg_OneReg_Byte2                            0x00FF0000

    #define     BA_OneReg_OneReg_Byte3                         0x0003
    #define     B16OneReg_OneReg_Byte3                         0x0002
    #define   LSb32OneReg_OneReg_Byte3                            24
    #define   LSb16OneReg_OneReg_Byte3                            8
    #define       bOneReg_OneReg_Byte3                         8
    #define   MSK32OneReg_OneReg_Byte3                            0xFF000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_OneReg {
    ///////////////////////////////////////////////////////////
    #define   GET32OneReg_OneReg_Byte0(r32)                    _BFGET_(r32, 7, 0)
    #define   SET32OneReg_OneReg_Byte0(r32,v)                  _BFSET_(r32, 7, 0,v)
    #define   GET16OneReg_OneReg_Byte0(r16)                    _BFGET_(r16, 7, 0)
    #define   SET16OneReg_OneReg_Byte0(r16,v)                  _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_OneReg_Byte1(r32)                    _BFGET_(r32,15, 8)
    #define   SET32OneReg_OneReg_Byte1(r32,v)                  _BFSET_(r32,15, 8,v)
    #define   GET16OneReg_OneReg_Byte1(r16)                    _BFGET_(r16,15, 8)
    #define   SET16OneReg_OneReg_Byte1(r16,v)                  _BFSET_(r16,15, 8,v)

    #define   GET32OneReg_OneReg_Byte2(r32)                    _BFGET_(r32,23,16)
    #define   SET32OneReg_OneReg_Byte2(r32,v)                  _BFSET_(r32,23,16,v)
    #define   GET16OneReg_OneReg_Byte2(r16)                    _BFGET_(r16, 7, 0)
    #define   SET16OneReg_OneReg_Byte2(r16,v)                  _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_OneReg_Byte3(r32)                    _BFGET_(r32,31,24)
    #define   SET32OneReg_OneReg_Byte3(r32,v)                  _BFSET_(r32,31,24,v)
    #define   GET16OneReg_OneReg_Byte3(r16)                    _BFGET_(r16,15, 8)
    #define   SET16OneReg_OneReg_Byte3(r16,v)                  _BFSET_(r16,15, 8,v)

    #define     w32OneReg_OneReg                               {\
            UNSG32 uOneReg_Byte0                               :  8;\
            UNSG32 uOneReg_Byte1                               :  8;\
            UNSG32 uOneReg_Byte2                               :  8;\
            UNSG32 uOneReg_Byte3                               :  8;\
          }
    union { UNSG32 u32OneReg_OneReg;
            struct w32OneReg_OneReg;
          };
    ///////////////////////////////////////////////////////////
    } SIE_OneReg;

    typedef union  T32OneReg_OneReg
          { UNSG32 u32;
            struct w32OneReg_OneReg;
                 } T32OneReg_OneReg;
    ///////////////////////////////////////////////////////////

    typedef union  TOneReg_OneReg
          { UNSG32 u32[1];
            struct {
            struct w32OneReg_OneReg;
                   };
                 } TOneReg_OneReg;

    ///////////////////////////////////////////////////////////
     SIGN32 OneReg_drvrd(SIE_OneReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 OneReg_drvwr(SIE_OneReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void OneReg_reset(SIE_OneReg *p);
     SIGN32 OneReg_cmp  (SIE_OneReg *p, SIE_OneReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define OneReg_check(p,pie,pfx,hLOG) OneReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define OneReg_print(p,    pfx,hLOG) OneReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: OneReg
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE OneReg_RO                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 OneReg_RO            (R-)
///               %unsigned 8  Byte0                     0x0
///               %unsigned 8  Byte1                     0x0
///               %unsigned 8  Byte2                     0x0
///               %unsigned 8  Byte3                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_OneReg_RO
#define h_OneReg_RO (){}

    #define     RA_OneReg_RO_OneReg_RO                         0x0000

    #define     BA_OneReg_RO_OneReg_RO_Byte0                   0x0000
    #define     B16OneReg_RO_OneReg_RO_Byte0                   0x0000
    #define   LSb32OneReg_RO_OneReg_RO_Byte0                      0
    #define   LSb16OneReg_RO_OneReg_RO_Byte0                      0
    #define       bOneReg_RO_OneReg_RO_Byte0                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte0                      0x000000FF

    #define     BA_OneReg_RO_OneReg_RO_Byte1                   0x0001
    #define     B16OneReg_RO_OneReg_RO_Byte1                   0x0000
    #define   LSb32OneReg_RO_OneReg_RO_Byte1                      8
    #define   LSb16OneReg_RO_OneReg_RO_Byte1                      8
    #define       bOneReg_RO_OneReg_RO_Byte1                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte1                      0x0000FF00

    #define     BA_OneReg_RO_OneReg_RO_Byte2                   0x0002
    #define     B16OneReg_RO_OneReg_RO_Byte2                   0x0002
    #define   LSb32OneReg_RO_OneReg_RO_Byte2                      16
    #define   LSb16OneReg_RO_OneReg_RO_Byte2                      0
    #define       bOneReg_RO_OneReg_RO_Byte2                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte2                      0x00FF0000

    #define     BA_OneReg_RO_OneReg_RO_Byte3                   0x0003
    #define     B16OneReg_RO_OneReg_RO_Byte3                   0x0002
    #define   LSb32OneReg_RO_OneReg_RO_Byte3                      24
    #define   LSb16OneReg_RO_OneReg_RO_Byte3                      8
    #define       bOneReg_RO_OneReg_RO_Byte3                   8
    #define   MSK32OneReg_RO_OneReg_RO_Byte3                      0xFF000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_OneReg_RO {
    ///////////////////////////////////////////////////////////
    #define   GET32OneReg_RO_OneReg_RO_Byte0(r32)              _BFGET_(r32, 7, 0)
    #define   SET32OneReg_RO_OneReg_RO_Byte0(r32,v)            _BFSET_(r32, 7, 0,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte0(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_RO_OneReg_RO_Byte0(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte1(r32)              _BFGET_(r32,15, 8)
    #define   SET32OneReg_RO_OneReg_RO_Byte1(r32,v)            _BFSET_(r32,15, 8,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte1(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_RO_OneReg_RO_Byte1(r16,v)            _BFSET_(r16,15, 8,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte2(r32)              _BFGET_(r32,23,16)
    #define   SET32OneReg_RO_OneReg_RO_Byte2(r32,v)            _BFSET_(r32,23,16,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte2(r16)              _BFGET_(r16, 7, 0)
    #define   SET16OneReg_RO_OneReg_RO_Byte2(r16,v)            _BFSET_(r16, 7, 0,v)

    #define   GET32OneReg_RO_OneReg_RO_Byte3(r32)              _BFGET_(r32,31,24)
    #define   SET32OneReg_RO_OneReg_RO_Byte3(r32,v)            _BFSET_(r32,31,24,v)
    #define   GET16OneReg_RO_OneReg_RO_Byte3(r16)              _BFGET_(r16,15, 8)
    #define   SET16OneReg_RO_OneReg_RO_Byte3(r16,v)            _BFSET_(r16,15, 8,v)

    #define     w32OneReg_RO_OneReg_RO                         {\
            UNSG32 uOneReg_RO_Byte0                            :  8;\
            UNSG32 uOneReg_RO_Byte1                            :  8;\
            UNSG32 uOneReg_RO_Byte2                            :  8;\
            UNSG32 uOneReg_RO_Byte3                            :  8;\
          }
    union { UNSG32 u32OneReg_RO_OneReg_RO;
            struct w32OneReg_RO_OneReg_RO;
          };
    ///////////////////////////////////////////////////////////
    } SIE_OneReg_RO;

    typedef union  T32OneReg_RO_OneReg_RO
          { UNSG32 u32;
            struct w32OneReg_RO_OneReg_RO;
                 } T32OneReg_RO_OneReg_RO;
    ///////////////////////////////////////////////////////////

    typedef union  TOneReg_RO_OneReg_RO
          { UNSG32 u32[1];
            struct {
            struct w32OneReg_RO_OneReg_RO;
                   };
                 } TOneReg_RO_OneReg_RO;

    ///////////////////////////////////////////////////////////
     SIGN32 OneReg_RO_drvrd(SIE_OneReg_RO *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 OneReg_RO_drvwr(SIE_OneReg_RO *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void OneReg_RO_reset(SIE_OneReg_RO *p);
     SIGN32 OneReg_RO_cmp  (SIE_OneReg_RO *p, SIE_OneReg_RO *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define OneReg_RO_check(p,pie,pfx,hLOG) OneReg_RO_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define OneReg_RO_print(p,    pfx,hLOG) OneReg_RO_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: OneReg_RO
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE SRAM                                     (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (R-)
///               %unsigned 32 Data                      0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAM
#define h_SRAM (){}

    #define     BA_SRAM_Data                                   0x0000
    #define     B16SRAM_Data                                   0x0000
    #define   LSb32SRAM_Data                                      0
    #define   LSb16SRAM_Data                                      0
    #define       bSRAM_Data                                   32
    #define   MSK32SRAM_Data                                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAM {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAM_Data(r32)                              _BFGET_(r32,31, 0)
    #define   SET32SRAM_Data(r32,v)                            _BFSET_(r32,31, 0,v)

            UNSG32 u_Data                                      : 32;
    ///////////////////////////////////////////////////////////
    } SIE_SRAM;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAM_drvrd(SIE_SRAM *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAM_drvwr(SIE_SRAM *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAM_reset(SIE_SRAM *p);
     SIGN32 SRAM_cmp  (SIE_SRAM *p, SIE_SRAM *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAM_check(p,pie,pfx,hLOG) SRAM_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAM_print(p,    pfx,hLOG) SRAM_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAM
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE RNGReg                                   (4,4)
///     ###
///     * ACPU can access these register
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 DIV_VAL              (P)
///               %unsigned 8  DIV_VAL                   0x0
///                                    ###
///                                    * Decimate value of noisy oscillator
///                                    * before sampling the fast oscillator
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00004 SYS_CK_SEL           (P)
///               %unsigned 1  SYS_CK_SEL                0x0
///                                    ###
///                                    * Select System clock as data for sampling
///                                    * flip-flop instead of FAST_OSC
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 SLOW_OSC_ENA         (P)
///               %unsigned 1  SLOW_OSC_ENA              0x1
///                                    ###
///                                    * 1 : enable SLOW_OSC ( noisy osc)
///                                    * 0: disable SLOW_OSC ( noisy osc)
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C FAST_OSC_ENA         (P)
///               %unsigned 1  FAST_OSC_ENA              0x1
///                                    ###
///                                    * 1 : enable FAST_OSC ( noisy osc)
///                                    * 0: disable FAST_OSC ( noisy osc)
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00010 PU_BIAS              (P)
///               %unsigned 1  PU_BIAS                   0x1
///                                    ###
///                                    * 1: provide power for slow oscillator and
///                                    * its bias circuits
///                                    * 0: shut down power of the circuit.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00014 RSTN                 (P)
///               %unsigned 1  RSTN                      0x1
///                                    ###
///                                    * 0: Reset
///                                    * 1: Normal
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00018 RNGBit               (R-)
///               %unsigned 1  RNGBit                    
///                                    ###
///                                    * RNG raw bit
///                                    * Only readable on eng_en chip
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0001C RNGData              (R-)
///               %unsigned 16 RNGData                   
///                                    ###
///                                    * RNG data
///                                    * Only readable on eng_en chip
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00020 RNGData_SW           (RW)
///               ###
///               * Every time AKL requested a RNG data, hardware will shift one data forward, 8->7->6…2->1->8.
///               ###
///               %unsigned 16 RNGData_1                 0x0
///                                    ###
///                                    * RNG data 1
///                                    ###
///               %unsigned 16 RNGData_2                 0x0
///                                    ###
///                                    * RNG data 2
///                                    ###
///     # 0x00024 RNGData_SW1          
///               %unsigned 16 RNGData_3                 0x0
///                                    ###
///                                    * RNG data 3
///                                    ###
///               %unsigned 16 RNGData_4                 0x0
///                                    ###
///                                    * RNG data 4
///                                    ###
///     # 0x00028 RNGData_SW2          
///               %unsigned 16 RNGData_5                 0x0
///                                    ###
///                                    * RNG data 5
///                                    ###
///               %unsigned 16 RNGData_6                 0x0
///                                    ###
///                                    * RNG data 6
///                                    ###
///     # 0x0002C RNGData_SW3          
///               %unsigned 16 RNGData_7                 0x0
///                                    ###
///                                    * RNG data 7
///                                    ###
///               %unsigned 16 RNGData_8                 0x0
///                                    ###
///                                    * RNG data 8
///                                    ###
///     @ 0x00030                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00040 RNGData_reqCnt       (RW)
///               %unsigned 16 RNGData_reqCnt            0x0
///                                    ###
///                                    * How many RNG data has been requested by AKL.
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00044 RNGData_bypass       (P)
///               %unsigned 1  RNGData_bypass            0x0
///                                    ###
///                                    * Bypass true RNG data with RNGData_SW. Only take effect on EE chip.
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      72B, bits:     175b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_RNGReg
#define h_RNGReg (){}

    #define     RA_RNGReg_DIV_VAL                              0x0000

    #define     BA_RNGReg_DIV_VAL_DIV_VAL                      0x0000
    #define     B16RNGReg_DIV_VAL_DIV_VAL                      0x0000
    #define   LSb32RNGReg_DIV_VAL_DIV_VAL                         0
    #define   LSb16RNGReg_DIV_VAL_DIV_VAL                         0
    #define       bRNGReg_DIV_VAL_DIV_VAL                      8
    #define   MSK32RNGReg_DIV_VAL_DIV_VAL                         0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_SYS_CK_SEL                           0x0004

    #define     BA_RNGReg_SYS_CK_SEL_SYS_CK_SEL                0x0004
    #define     B16RNGReg_SYS_CK_SEL_SYS_CK_SEL                0x0004
    #define   LSb32RNGReg_SYS_CK_SEL_SYS_CK_SEL                   0
    #define   LSb16RNGReg_SYS_CK_SEL_SYS_CK_SEL                   0
    #define       bRNGReg_SYS_CK_SEL_SYS_CK_SEL                1
    #define   MSK32RNGReg_SYS_CK_SEL_SYS_CK_SEL                   0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_SLOW_OSC_ENA                         0x0008

    #define     BA_RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA            0x0008
    #define     B16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA            0x0008
    #define   LSb32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA               0
    #define   LSb16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA               0
    #define       bRNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA            1
    #define   MSK32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_FAST_OSC_ENA                         0x000C

    #define     BA_RNGReg_FAST_OSC_ENA_FAST_OSC_ENA            0x000C
    #define     B16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA            0x000C
    #define   LSb32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA               0
    #define   LSb16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA               0
    #define       bRNGReg_FAST_OSC_ENA_FAST_OSC_ENA            1
    #define   MSK32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_PU_BIAS                              0x0010

    #define     BA_RNGReg_PU_BIAS_PU_BIAS                      0x0010
    #define     B16RNGReg_PU_BIAS_PU_BIAS                      0x0010
    #define   LSb32RNGReg_PU_BIAS_PU_BIAS                         0
    #define   LSb16RNGReg_PU_BIAS_PU_BIAS                         0
    #define       bRNGReg_PU_BIAS_PU_BIAS                      1
    #define   MSK32RNGReg_PU_BIAS_PU_BIAS                         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_RSTN                                 0x0014

    #define     BA_RNGReg_RSTN_RSTN                            0x0014
    #define     B16RNGReg_RSTN_RSTN                            0x0014
    #define   LSb32RNGReg_RSTN_RSTN                               0
    #define   LSb16RNGReg_RSTN_RSTN                               0
    #define       bRNGReg_RSTN_RSTN                            1
    #define   MSK32RNGReg_RSTN_RSTN                               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_RNGBit                               0x0018

    #define     BA_RNGReg_RNGBit_RNGBit                        0x0018
    #define     B16RNGReg_RNGBit_RNGBit                        0x0018
    #define   LSb32RNGReg_RNGBit_RNGBit                           0
    #define   LSb16RNGReg_RNGBit_RNGBit                           0
    #define       bRNGReg_RNGBit_RNGBit                        1
    #define   MSK32RNGReg_RNGBit_RNGBit                           0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_RNGData                              0x001C

    #define     BA_RNGReg_RNGData_RNGData                      0x001C
    #define     B16RNGReg_RNGData_RNGData                      0x001C
    #define   LSb32RNGReg_RNGData_RNGData                         0
    #define   LSb16RNGReg_RNGData_RNGData                         0
    #define       bRNGReg_RNGData_RNGData                      16
    #define   MSK32RNGReg_RNGData_RNGData                         0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_RNGData_SW                           0x0020

    #define     BA_RNGReg_RNGData_SW_RNGData_1                 0x0020
    #define     B16RNGReg_RNGData_SW_RNGData_1                 0x0020
    #define   LSb32RNGReg_RNGData_SW_RNGData_1                    0
    #define   LSb16RNGReg_RNGData_SW_RNGData_1                    0
    #define       bRNGReg_RNGData_SW_RNGData_1                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_1                    0x0000FFFF

    #define     BA_RNGReg_RNGData_SW_RNGData_2                 0x0022
    #define     B16RNGReg_RNGData_SW_RNGData_2                 0x0022
    #define   LSb32RNGReg_RNGData_SW_RNGData_2                    16
    #define   LSb16RNGReg_RNGData_SW_RNGData_2                    0
    #define       bRNGReg_RNGData_SW_RNGData_2                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_2                    0xFFFF0000

    #define     RA_RNGReg_RNGData_SW1                          0x0024

    #define     BA_RNGReg_RNGData_SW_RNGData_3                 0x0024
    #define     B16RNGReg_RNGData_SW_RNGData_3                 0x0024
    #define   LSb32RNGReg_RNGData_SW_RNGData_3                    0
    #define   LSb16RNGReg_RNGData_SW_RNGData_3                    0
    #define       bRNGReg_RNGData_SW_RNGData_3                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_3                    0x0000FFFF

    #define     BA_RNGReg_RNGData_SW_RNGData_4                 0x0026
    #define     B16RNGReg_RNGData_SW_RNGData_4                 0x0026
    #define   LSb32RNGReg_RNGData_SW_RNGData_4                    16
    #define   LSb16RNGReg_RNGData_SW_RNGData_4                    0
    #define       bRNGReg_RNGData_SW_RNGData_4                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_4                    0xFFFF0000

    #define     RA_RNGReg_RNGData_SW2                          0x0028

    #define     BA_RNGReg_RNGData_SW_RNGData_5                 0x0028
    #define     B16RNGReg_RNGData_SW_RNGData_5                 0x0028
    #define   LSb32RNGReg_RNGData_SW_RNGData_5                    0
    #define   LSb16RNGReg_RNGData_SW_RNGData_5                    0
    #define       bRNGReg_RNGData_SW_RNGData_5                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_5                    0x0000FFFF

    #define     BA_RNGReg_RNGData_SW_RNGData_6                 0x002A
    #define     B16RNGReg_RNGData_SW_RNGData_6                 0x002A
    #define   LSb32RNGReg_RNGData_SW_RNGData_6                    16
    #define   LSb16RNGReg_RNGData_SW_RNGData_6                    0
    #define       bRNGReg_RNGData_SW_RNGData_6                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_6                    0xFFFF0000

    #define     RA_RNGReg_RNGData_SW3                          0x002C

    #define     BA_RNGReg_RNGData_SW_RNGData_7                 0x002C
    #define     B16RNGReg_RNGData_SW_RNGData_7                 0x002C
    #define   LSb32RNGReg_RNGData_SW_RNGData_7                    0
    #define   LSb16RNGReg_RNGData_SW_RNGData_7                    0
    #define       bRNGReg_RNGData_SW_RNGData_7                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_7                    0x0000FFFF

    #define     BA_RNGReg_RNGData_SW_RNGData_8                 0x002E
    #define     B16RNGReg_RNGData_SW_RNGData_8                 0x002E
    #define   LSb32RNGReg_RNGData_SW_RNGData_8                    16
    #define   LSb16RNGReg_RNGData_SW_RNGData_8                    0
    #define       bRNGReg_RNGData_SW_RNGData_8                 16
    #define   MSK32RNGReg_RNGData_SW_RNGData_8                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_RNGData_reqCnt                       0x0040

    #define     BA_RNGReg_RNGData_reqCnt_RNGData_reqCnt        0x0040
    #define     B16RNGReg_RNGData_reqCnt_RNGData_reqCnt        0x0040
    #define   LSb32RNGReg_RNGData_reqCnt_RNGData_reqCnt           0
    #define   LSb16RNGReg_RNGData_reqCnt_RNGData_reqCnt           0
    #define       bRNGReg_RNGData_reqCnt_RNGData_reqCnt        16
    #define   MSK32RNGReg_RNGData_reqCnt_RNGData_reqCnt           0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_RNGReg_RNGData_bypass                       0x0044

    #define     BA_RNGReg_RNGData_bypass_RNGData_bypass        0x0044
    #define     B16RNGReg_RNGData_bypass_RNGData_bypass        0x0044
    #define   LSb32RNGReg_RNGData_bypass_RNGData_bypass           0
    #define   LSb16RNGReg_RNGData_bypass_RNGData_bypass           0
    #define       bRNGReg_RNGData_bypass_RNGData_bypass        1
    #define   MSK32RNGReg_RNGData_bypass_RNGData_bypass           0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_RNGReg {
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_DIV_VAL_DIV_VAL(r32)                 _BFGET_(r32, 7, 0)
    #define   SET32RNGReg_DIV_VAL_DIV_VAL(r32,v)               _BFSET_(r32, 7, 0,v)
    #define   GET16RNGReg_DIV_VAL_DIV_VAL(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16RNGReg_DIV_VAL_DIV_VAL(r16,v)               _BFSET_(r16, 7, 0,v)

    #define     w32RNGReg_DIV_VAL                              {\
            UNSG32 uDIV_VAL_DIV_VAL                            :  8;\
            UNSG32 RSVDx0_b8                                   : 24;\
          }
    union { UNSG32 u32RNGReg_DIV_VAL;
            struct w32RNGReg_DIV_VAL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_SYS_CK_SEL_SYS_CK_SEL(r32)           _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_SYS_CK_SEL_SYS_CK_SEL(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_SYS_CK_SEL_SYS_CK_SEL(r16)           _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_SYS_CK_SEL_SYS_CK_SEL(r16,v)         _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_SYS_CK_SEL                           {\
            UNSG32 uSYS_CK_SEL_SYS_CK_SEL                      :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32RNGReg_SYS_CK_SEL;
            struct w32RNGReg_SYS_CK_SEL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r32)       _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r16)       _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_SLOW_OSC_ENA_SLOW_OSC_ENA(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_SLOW_OSC_ENA                         {\
            UNSG32 uSLOW_OSC_ENA_SLOW_OSC_ENA                  :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32RNGReg_SLOW_OSC_ENA;
            struct w32RNGReg_SLOW_OSC_ENA;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r32)       _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r16)       _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_FAST_OSC_ENA_FAST_OSC_ENA(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_FAST_OSC_ENA                         {\
            UNSG32 uFAST_OSC_ENA_FAST_OSC_ENA                  :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32RNGReg_FAST_OSC_ENA;
            struct w32RNGReg_FAST_OSC_ENA;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_PU_BIAS_PU_BIAS(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_PU_BIAS_PU_BIAS(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_PU_BIAS_PU_BIAS(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_PU_BIAS_PU_BIAS(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_PU_BIAS                              {\
            UNSG32 uPU_BIAS_PU_BIAS                            :  1;\
            UNSG32 RSVDx10_b1                                  : 31;\
          }
    union { UNSG32 u32RNGReg_PU_BIAS;
            struct w32RNGReg_PU_BIAS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_RSTN_RSTN(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_RSTN_RSTN(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_RSTN_RSTN(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_RSTN_RSTN(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_RSTN                                 {\
            UNSG32 uRSTN_RSTN                                  :  1;\
            UNSG32 RSVDx14_b1                                  : 31;\
          }
    union { UNSG32 u32RNGReg_RSTN;
            struct w32RNGReg_RSTN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_RNGBit_RNGBit(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_RNGBit_RNGBit(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_RNGBit_RNGBit(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_RNGBit_RNGBit(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_RNGBit                               {\
            UNSG32 uRNGBit_RNGBit                              :  1;\
            UNSG32 RSVDx18_b1                                  : 31;\
          }
    union { UNSG32 u32RNGReg_RNGBit;
            struct w32RNGReg_RNGBit;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_RNGData_RNGData(r32)                 _BFGET_(r32,15, 0)
    #define   SET32RNGReg_RNGData_RNGData(r32,v)               _BFSET_(r32,15, 0,v)
    #define   GET16RNGReg_RNGData_RNGData(r16)                 _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_RNGData(r16,v)               _BFSET_(r16,15, 0,v)

    #define     w32RNGReg_RNGData                              {\
            UNSG32 uRNGData_RNGData                            : 16;\
            UNSG32 RSVDx1C_b16                                 : 16;\
          }
    union { UNSG32 u32RNGReg_RNGData;
            struct w32RNGReg_RNGData;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_RNGData_SW_RNGData_1(r32)            _BFGET_(r32,15, 0)
    #define   SET32RNGReg_RNGData_SW_RNGData_1(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_1(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_1(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32RNGReg_RNGData_SW_RNGData_2(r32)            _BFGET_(r32,31,16)
    #define   SET32RNGReg_RNGData_SW_RNGData_2(r32,v)          _BFSET_(r32,31,16,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_2(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_2(r16,v)          _BFSET_(r16,15, 0,v)

    #define     w32RNGReg_RNGData_SW                           {\
            UNSG32 uRNGData_SW_RNGData_1                       : 16;\
            UNSG32 uRNGData_SW_RNGData_2                       : 16;\
          }
    union { UNSG32 u32RNGReg_RNGData_SW;
            struct w32RNGReg_RNGData_SW;
          };
    #define   GET32RNGReg_RNGData_SW_RNGData_3(r32)            _BFGET_(r32,15, 0)
    #define   SET32RNGReg_RNGData_SW_RNGData_3(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_3(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_3(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32RNGReg_RNGData_SW_RNGData_4(r32)            _BFGET_(r32,31,16)
    #define   SET32RNGReg_RNGData_SW_RNGData_4(r32,v)          _BFSET_(r32,31,16,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_4(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_4(r16,v)          _BFSET_(r16,15, 0,v)

    #define     w32RNGReg_RNGData_SW1                          {\
            UNSG32 uRNGData_SW_RNGData_3                       : 16;\
            UNSG32 uRNGData_SW_RNGData_4                       : 16;\
          }
    union { UNSG32 u32RNGReg_RNGData_SW1;
            struct w32RNGReg_RNGData_SW1;
          };
    #define   GET32RNGReg_RNGData_SW_RNGData_5(r32)            _BFGET_(r32,15, 0)
    #define   SET32RNGReg_RNGData_SW_RNGData_5(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_5(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_5(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32RNGReg_RNGData_SW_RNGData_6(r32)            _BFGET_(r32,31,16)
    #define   SET32RNGReg_RNGData_SW_RNGData_6(r32,v)          _BFSET_(r32,31,16,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_6(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_6(r16,v)          _BFSET_(r16,15, 0,v)

    #define     w32RNGReg_RNGData_SW2                          {\
            UNSG32 uRNGData_SW_RNGData_5                       : 16;\
            UNSG32 uRNGData_SW_RNGData_6                       : 16;\
          }
    union { UNSG32 u32RNGReg_RNGData_SW2;
            struct w32RNGReg_RNGData_SW2;
          };
    #define   GET32RNGReg_RNGData_SW_RNGData_7(r32)            _BFGET_(r32,15, 0)
    #define   SET32RNGReg_RNGData_SW_RNGData_7(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_7(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_7(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32RNGReg_RNGData_SW_RNGData_8(r32)            _BFGET_(r32,31,16)
    #define   SET32RNGReg_RNGData_SW_RNGData_8(r32,v)          _BFSET_(r32,31,16,v)
    #define   GET16RNGReg_RNGData_SW_RNGData_8(r16)            _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_SW_RNGData_8(r16,v)          _BFSET_(r16,15, 0,v)

    #define     w32RNGReg_RNGData_SW3                          {\
            UNSG32 uRNGData_SW_RNGData_7                       : 16;\
            UNSG32 uRNGData_SW_RNGData_8                       : 16;\
          }
    union { UNSG32 u32RNGReg_RNGData_SW3;
            struct w32RNGReg_RNGData_SW3;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx30                                     [16];
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_RNGData_reqCnt_RNGData_reqCnt(r32)   _BFGET_(r32,15, 0)
    #define   SET32RNGReg_RNGData_reqCnt_RNGData_reqCnt(r32,v) _BFSET_(r32,15, 0,v)
    #define   GET16RNGReg_RNGData_reqCnt_RNGData_reqCnt(r16)   _BFGET_(r16,15, 0)
    #define   SET16RNGReg_RNGData_reqCnt_RNGData_reqCnt(r16,v) _BFSET_(r16,15, 0,v)

    #define     w32RNGReg_RNGData_reqCnt                       {\
            UNSG32 uRNGData_reqCnt_RNGData_reqCnt              : 16;\
            UNSG32 RSVDx40_b16                                 : 16;\
          }
    union { UNSG32 u32RNGReg_RNGData_reqCnt;
            struct w32RNGReg_RNGData_reqCnt;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32RNGReg_RNGData_bypass_RNGData_bypass(r32)   _BFGET_(r32, 0, 0)
    #define   SET32RNGReg_RNGData_bypass_RNGData_bypass(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16RNGReg_RNGData_bypass_RNGData_bypass(r16)   _BFGET_(r16, 0, 0)
    #define   SET16RNGReg_RNGData_bypass_RNGData_bypass(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32RNGReg_RNGData_bypass                       {\
            UNSG32 uRNGData_bypass_RNGData_bypass              :  1;\
            UNSG32 RSVDx44_b1                                  : 31;\
          }
    union { UNSG32 u32RNGReg_RNGData_bypass;
            struct w32RNGReg_RNGData_bypass;
          };
    ///////////////////////////////////////////////////////////
    } SIE_RNGReg;

    typedef union  T32RNGReg_DIV_VAL
          { UNSG32 u32;
            struct w32RNGReg_DIV_VAL;
                 } T32RNGReg_DIV_VAL;
    typedef union  T32RNGReg_SYS_CK_SEL
          { UNSG32 u32;
            struct w32RNGReg_SYS_CK_SEL;
                 } T32RNGReg_SYS_CK_SEL;
    typedef union  T32RNGReg_SLOW_OSC_ENA
          { UNSG32 u32;
            struct w32RNGReg_SLOW_OSC_ENA;
                 } T32RNGReg_SLOW_OSC_ENA;
    typedef union  T32RNGReg_FAST_OSC_ENA
          { UNSG32 u32;
            struct w32RNGReg_FAST_OSC_ENA;
                 } T32RNGReg_FAST_OSC_ENA;
    typedef union  T32RNGReg_PU_BIAS
          { UNSG32 u32;
            struct w32RNGReg_PU_BIAS;
                 } T32RNGReg_PU_BIAS;
    typedef union  T32RNGReg_RSTN
          { UNSG32 u32;
            struct w32RNGReg_RSTN;
                 } T32RNGReg_RSTN;
    typedef union  T32RNGReg_RNGBit
          { UNSG32 u32;
            struct w32RNGReg_RNGBit;
                 } T32RNGReg_RNGBit;
    typedef union  T32RNGReg_RNGData
          { UNSG32 u32;
            struct w32RNGReg_RNGData;
                 } T32RNGReg_RNGData;
    typedef union  T32RNGReg_RNGData_SW
          { UNSG32 u32;
            struct w32RNGReg_RNGData_SW;
                 } T32RNGReg_RNGData_SW;
    typedef union  T32RNGReg_RNGData_SW1
          { UNSG32 u32;
            struct w32RNGReg_RNGData_SW1;
                 } T32RNGReg_RNGData_SW1;
    typedef union  T32RNGReg_RNGData_SW2
          { UNSG32 u32;
            struct w32RNGReg_RNGData_SW2;
                 } T32RNGReg_RNGData_SW2;
    typedef union  T32RNGReg_RNGData_SW3
          { UNSG32 u32;
            struct w32RNGReg_RNGData_SW3;
                 } T32RNGReg_RNGData_SW3;
    typedef union  T32RNGReg_RNGData_reqCnt
          { UNSG32 u32;
            struct w32RNGReg_RNGData_reqCnt;
                 } T32RNGReg_RNGData_reqCnt;
    typedef union  T32RNGReg_RNGData_bypass
          { UNSG32 u32;
            struct w32RNGReg_RNGData_bypass;
                 } T32RNGReg_RNGData_bypass;
    ///////////////////////////////////////////////////////////

    typedef union  TRNGReg_DIV_VAL
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_DIV_VAL;
                   };
                 } TRNGReg_DIV_VAL;
    typedef union  TRNGReg_SYS_CK_SEL
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_SYS_CK_SEL;
                   };
                 } TRNGReg_SYS_CK_SEL;
    typedef union  TRNGReg_SLOW_OSC_ENA
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_SLOW_OSC_ENA;
                   };
                 } TRNGReg_SLOW_OSC_ENA;
    typedef union  TRNGReg_FAST_OSC_ENA
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_FAST_OSC_ENA;
                   };
                 } TRNGReg_FAST_OSC_ENA;
    typedef union  TRNGReg_PU_BIAS
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_PU_BIAS;
                   };
                 } TRNGReg_PU_BIAS;
    typedef union  TRNGReg_RSTN
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_RSTN;
                   };
                 } TRNGReg_RSTN;
    typedef union  TRNGReg_RNGBit
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_RNGBit;
                   };
                 } TRNGReg_RNGBit;
    typedef union  TRNGReg_RNGData
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_RNGData;
                   };
                 } TRNGReg_RNGData;
    typedef union  TRNGReg_RNGData_SW
          { UNSG32 u32[4];
            struct {
            struct w32RNGReg_RNGData_SW;
            struct w32RNGReg_RNGData_SW1;
            struct w32RNGReg_RNGData_SW2;
            struct w32RNGReg_RNGData_SW3;
                   };
                 } TRNGReg_RNGData_SW;
    typedef union  TRNGReg_RNGData_reqCnt
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_RNGData_reqCnt;
                   };
                 } TRNGReg_RNGData_reqCnt;
    typedef union  TRNGReg_RNGData_bypass
          { UNSG32 u32[1];
            struct {
            struct w32RNGReg_RNGData_bypass;
                   };
                 } TRNGReg_RNGData_bypass;

    ///////////////////////////////////////////////////////////
     SIGN32 RNGReg_drvrd(SIE_RNGReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 RNGReg_drvwr(SIE_RNGReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void RNGReg_reset(SIE_RNGReg *p);
     SIGN32 RNGReg_cmp  (SIE_RNGReg *p, SIE_RNGReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define RNGReg_check(p,pie,pfx,hLOG) RNGReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define RNGReg_print(p,    pfx,hLOG) RNGReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: RNGReg
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE ARO                                      (4,4)
///     ###
///     * ACPU can access these register
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 aro_S_1              (P)
///               %unsigned 3  aro_S_1                   0x2
///                                    ###
///                                    * inversions select mux controls for phi1
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00004 aro_S_2              (P)
///               %unsigned 3  aro_S_2                   0x2
///                                    ###
///                                    * inversions select mux controls for phi2
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00008 aro_N_1              (P)
///               %unsigned 4  aro_N_1                   0xD
///                                    ###
///                                    * Number of local clock edges to count for phi1 (1: 255)
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x0000C aro_N_2              (P)
///               %unsigned 4  aro_N_2                   0xD
///                                    ###
///                                    * Number of local clock edges to count for phi1 (1: 255)
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00010 CLK_EN               (P)
///               %unsigned 1  CLK_EN                    0x1
///                                    ###
///                                    * Clock enable signal
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00014 UPDATE               (P)
///               %unsigned 1  UPDATE                    0x1
///               %%        31         # Stuffing bits...
///     @ 0x00018 RISE_1               (P)
///               %unsigned 1  RISE_1                    0x0
///                                    ###
///                                    * Polarity control for phi1
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0001C RISE_2               (P)
///               %unsigned 1  RISE_2                    0x0
///                                    ###
///                                    * Polarity control for phi2
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00020 DIVISOR              (P)
///               %unsigned 8  DIVISOR                   0x5
///                                    ###
///                                    * Digital clock divider after ARO
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00024 SRST                 (P)
///               %unsigned 1  SRST                      0x0
///                                    ###
///                                    * Static reset for divider
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      40B, bits:      27b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_ARO
#define h_ARO (){}

    #define     RA_ARO_aro_S_1                                 0x0000

    #define     BA_ARO_aro_S_1_aro_S_1                         0x0000
    #define     B16ARO_aro_S_1_aro_S_1                         0x0000
    #define   LSb32ARO_aro_S_1_aro_S_1                            0
    #define   LSb16ARO_aro_S_1_aro_S_1                            0
    #define       bARO_aro_S_1_aro_S_1                         3
    #define   MSK32ARO_aro_S_1_aro_S_1                            0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_aro_S_2                                 0x0004

    #define     BA_ARO_aro_S_2_aro_S_2                         0x0004
    #define     B16ARO_aro_S_2_aro_S_2                         0x0004
    #define   LSb32ARO_aro_S_2_aro_S_2                            0
    #define   LSb16ARO_aro_S_2_aro_S_2                            0
    #define       bARO_aro_S_2_aro_S_2                         3
    #define   MSK32ARO_aro_S_2_aro_S_2                            0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_aro_N_1                                 0x0008

    #define     BA_ARO_aro_N_1_aro_N_1                         0x0008
    #define     B16ARO_aro_N_1_aro_N_1                         0x0008
    #define   LSb32ARO_aro_N_1_aro_N_1                            0
    #define   LSb16ARO_aro_N_1_aro_N_1                            0
    #define       bARO_aro_N_1_aro_N_1                         4
    #define   MSK32ARO_aro_N_1_aro_N_1                            0x0000000F
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_aro_N_2                                 0x000C

    #define     BA_ARO_aro_N_2_aro_N_2                         0x000C
    #define     B16ARO_aro_N_2_aro_N_2                         0x000C
    #define   LSb32ARO_aro_N_2_aro_N_2                            0
    #define   LSb16ARO_aro_N_2_aro_N_2                            0
    #define       bARO_aro_N_2_aro_N_2                         4
    #define   MSK32ARO_aro_N_2_aro_N_2                            0x0000000F
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_CLK_EN                                  0x0010

    #define     BA_ARO_CLK_EN_CLK_EN                           0x0010
    #define     B16ARO_CLK_EN_CLK_EN                           0x0010
    #define   LSb32ARO_CLK_EN_CLK_EN                              0
    #define   LSb16ARO_CLK_EN_CLK_EN                              0
    #define       bARO_CLK_EN_CLK_EN                           1
    #define   MSK32ARO_CLK_EN_CLK_EN                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_UPDATE                                  0x0014

    #define     BA_ARO_UPDATE_UPDATE                           0x0014
    #define     B16ARO_UPDATE_UPDATE                           0x0014
    #define   LSb32ARO_UPDATE_UPDATE                              0
    #define   LSb16ARO_UPDATE_UPDATE                              0
    #define       bARO_UPDATE_UPDATE                           1
    #define   MSK32ARO_UPDATE_UPDATE                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_RISE_1                                  0x0018

    #define     BA_ARO_RISE_1_RISE_1                           0x0018
    #define     B16ARO_RISE_1_RISE_1                           0x0018
    #define   LSb32ARO_RISE_1_RISE_1                              0
    #define   LSb16ARO_RISE_1_RISE_1                              0
    #define       bARO_RISE_1_RISE_1                           1
    #define   MSK32ARO_RISE_1_RISE_1                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_RISE_2                                  0x001C

    #define     BA_ARO_RISE_2_RISE_2                           0x001C
    #define     B16ARO_RISE_2_RISE_2                           0x001C
    #define   LSb32ARO_RISE_2_RISE_2                              0
    #define   LSb16ARO_RISE_2_RISE_2                              0
    #define       bARO_RISE_2_RISE_2                           1
    #define   MSK32ARO_RISE_2_RISE_2                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_DIVISOR                                 0x0020

    #define     BA_ARO_DIVISOR_DIVISOR                         0x0020
    #define     B16ARO_DIVISOR_DIVISOR                         0x0020
    #define   LSb32ARO_DIVISOR_DIVISOR                            0
    #define   LSb16ARO_DIVISOR_DIVISOR                            0
    #define       bARO_DIVISOR_DIVISOR                         8
    #define   MSK32ARO_DIVISOR_DIVISOR                            0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_ARO_SRST                                    0x0024

    #define     BA_ARO_SRST_SRST                               0x0024
    #define     B16ARO_SRST_SRST                               0x0024
    #define   LSb32ARO_SRST_SRST                                  0
    #define   LSb16ARO_SRST_SRST                                  0
    #define       bARO_SRST_SRST                               1
    #define   MSK32ARO_SRST_SRST                                  0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_ARO {
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_aro_S_1_aro_S_1(r32)                    _BFGET_(r32, 2, 0)
    #define   SET32ARO_aro_S_1_aro_S_1(r32,v)                  _BFSET_(r32, 2, 0,v)
    #define   GET16ARO_aro_S_1_aro_S_1(r16)                    _BFGET_(r16, 2, 0)
    #define   SET16ARO_aro_S_1_aro_S_1(r16,v)                  _BFSET_(r16, 2, 0,v)

    #define     w32ARO_aro_S_1                                 {\
            UNSG32 uaro_S_1_aro_S_1                            :  3;\
            UNSG32 RSVDx0_b3                                   : 29;\
          }
    union { UNSG32 u32ARO_aro_S_1;
            struct w32ARO_aro_S_1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_aro_S_2_aro_S_2(r32)                    _BFGET_(r32, 2, 0)
    #define   SET32ARO_aro_S_2_aro_S_2(r32,v)                  _BFSET_(r32, 2, 0,v)
    #define   GET16ARO_aro_S_2_aro_S_2(r16)                    _BFGET_(r16, 2, 0)
    #define   SET16ARO_aro_S_2_aro_S_2(r16,v)                  _BFSET_(r16, 2, 0,v)

    #define     w32ARO_aro_S_2                                 {\
            UNSG32 uaro_S_2_aro_S_2                            :  3;\
            UNSG32 RSVDx4_b3                                   : 29;\
          }
    union { UNSG32 u32ARO_aro_S_2;
            struct w32ARO_aro_S_2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_aro_N_1_aro_N_1(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32ARO_aro_N_1_aro_N_1(r32,v)                  _BFSET_(r32, 3, 0,v)
    #define   GET16ARO_aro_N_1_aro_N_1(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16ARO_aro_N_1_aro_N_1(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define     w32ARO_aro_N_1                                 {\
            UNSG32 uaro_N_1_aro_N_1                            :  4;\
            UNSG32 RSVDx8_b4                                   : 28;\
          }
    union { UNSG32 u32ARO_aro_N_1;
            struct w32ARO_aro_N_1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_aro_N_2_aro_N_2(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32ARO_aro_N_2_aro_N_2(r32,v)                  _BFSET_(r32, 3, 0,v)
    #define   GET16ARO_aro_N_2_aro_N_2(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16ARO_aro_N_2_aro_N_2(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define     w32ARO_aro_N_2                                 {\
            UNSG32 uaro_N_2_aro_N_2                            :  4;\
            UNSG32 RSVDxC_b4                                   : 28;\
          }
    union { UNSG32 u32ARO_aro_N_2;
            struct w32ARO_aro_N_2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_CLK_EN_CLK_EN(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32ARO_CLK_EN_CLK_EN(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16ARO_CLK_EN_CLK_EN(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16ARO_CLK_EN_CLK_EN(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32ARO_CLK_EN                                  {\
            UNSG32 uCLK_EN_CLK_EN                              :  1;\
            UNSG32 RSVDx10_b1                                  : 31;\
          }
    union { UNSG32 u32ARO_CLK_EN;
            struct w32ARO_CLK_EN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_UPDATE_UPDATE(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32ARO_UPDATE_UPDATE(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16ARO_UPDATE_UPDATE(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16ARO_UPDATE_UPDATE(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32ARO_UPDATE                                  {\
            UNSG32 uUPDATE_UPDATE                              :  1;\
            UNSG32 RSVDx14_b1                                  : 31;\
          }
    union { UNSG32 u32ARO_UPDATE;
            struct w32ARO_UPDATE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_RISE_1_RISE_1(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32ARO_RISE_1_RISE_1(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16ARO_RISE_1_RISE_1(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16ARO_RISE_1_RISE_1(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32ARO_RISE_1                                  {\
            UNSG32 uRISE_1_RISE_1                              :  1;\
            UNSG32 RSVDx18_b1                                  : 31;\
          }
    union { UNSG32 u32ARO_RISE_1;
            struct w32ARO_RISE_1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_RISE_2_RISE_2(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32ARO_RISE_2_RISE_2(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16ARO_RISE_2_RISE_2(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16ARO_RISE_2_RISE_2(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32ARO_RISE_2                                  {\
            UNSG32 uRISE_2_RISE_2                              :  1;\
            UNSG32 RSVDx1C_b1                                  : 31;\
          }
    union { UNSG32 u32ARO_RISE_2;
            struct w32ARO_RISE_2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_DIVISOR_DIVISOR(r32)                    _BFGET_(r32, 7, 0)
    #define   SET32ARO_DIVISOR_DIVISOR(r32,v)                  _BFSET_(r32, 7, 0,v)
    #define   GET16ARO_DIVISOR_DIVISOR(r16)                    _BFGET_(r16, 7, 0)
    #define   SET16ARO_DIVISOR_DIVISOR(r16,v)                  _BFSET_(r16, 7, 0,v)

    #define     w32ARO_DIVISOR                                 {\
            UNSG32 uDIVISOR_DIVISOR                            :  8;\
            UNSG32 RSVDx20_b8                                  : 24;\
          }
    union { UNSG32 u32ARO_DIVISOR;
            struct w32ARO_DIVISOR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32ARO_SRST_SRST(r32)                          _BFGET_(r32, 0, 0)
    #define   SET32ARO_SRST_SRST(r32,v)                        _BFSET_(r32, 0, 0,v)
    #define   GET16ARO_SRST_SRST(r16)                          _BFGET_(r16, 0, 0)
    #define   SET16ARO_SRST_SRST(r16,v)                        _BFSET_(r16, 0, 0,v)

    #define     w32ARO_SRST                                    {\
            UNSG32 uSRST_SRST                                  :  1;\
            UNSG32 RSVDx24_b1                                  : 31;\
          }
    union { UNSG32 u32ARO_SRST;
            struct w32ARO_SRST;
          };
    ///////////////////////////////////////////////////////////
    } SIE_ARO;

    typedef union  T32ARO_aro_S_1
          { UNSG32 u32;
            struct w32ARO_aro_S_1;
                 } T32ARO_aro_S_1;
    typedef union  T32ARO_aro_S_2
          { UNSG32 u32;
            struct w32ARO_aro_S_2;
                 } T32ARO_aro_S_2;
    typedef union  T32ARO_aro_N_1
          { UNSG32 u32;
            struct w32ARO_aro_N_1;
                 } T32ARO_aro_N_1;
    typedef union  T32ARO_aro_N_2
          { UNSG32 u32;
            struct w32ARO_aro_N_2;
                 } T32ARO_aro_N_2;
    typedef union  T32ARO_CLK_EN
          { UNSG32 u32;
            struct w32ARO_CLK_EN;
                 } T32ARO_CLK_EN;
    typedef union  T32ARO_UPDATE
          { UNSG32 u32;
            struct w32ARO_UPDATE;
                 } T32ARO_UPDATE;
    typedef union  T32ARO_RISE_1
          { UNSG32 u32;
            struct w32ARO_RISE_1;
                 } T32ARO_RISE_1;
    typedef union  T32ARO_RISE_2
          { UNSG32 u32;
            struct w32ARO_RISE_2;
                 } T32ARO_RISE_2;
    typedef union  T32ARO_DIVISOR
          { UNSG32 u32;
            struct w32ARO_DIVISOR;
                 } T32ARO_DIVISOR;
    typedef union  T32ARO_SRST
          { UNSG32 u32;
            struct w32ARO_SRST;
                 } T32ARO_SRST;
    ///////////////////////////////////////////////////////////

    typedef union  TARO_aro_S_1
          { UNSG32 u32[1];
            struct {
            struct w32ARO_aro_S_1;
                   };
                 } TARO_aro_S_1;
    typedef union  TARO_aro_S_2
          { UNSG32 u32[1];
            struct {
            struct w32ARO_aro_S_2;
                   };
                 } TARO_aro_S_2;
    typedef union  TARO_aro_N_1
          { UNSG32 u32[1];
            struct {
            struct w32ARO_aro_N_1;
                   };
                 } TARO_aro_N_1;
    typedef union  TARO_aro_N_2
          { UNSG32 u32[1];
            struct {
            struct w32ARO_aro_N_2;
                   };
                 } TARO_aro_N_2;
    typedef union  TARO_CLK_EN
          { UNSG32 u32[1];
            struct {
            struct w32ARO_CLK_EN;
                   };
                 } TARO_CLK_EN;
    typedef union  TARO_UPDATE
          { UNSG32 u32[1];
            struct {
            struct w32ARO_UPDATE;
                   };
                 } TARO_UPDATE;
    typedef union  TARO_RISE_1
          { UNSG32 u32[1];
            struct {
            struct w32ARO_RISE_1;
                   };
                 } TARO_RISE_1;
    typedef union  TARO_RISE_2
          { UNSG32 u32[1];
            struct {
            struct w32ARO_RISE_2;
                   };
                 } TARO_RISE_2;
    typedef union  TARO_DIVISOR
          { UNSG32 u32[1];
            struct {
            struct w32ARO_DIVISOR;
                   };
                 } TARO_DIVISOR;
    typedef union  TARO_SRST
          { UNSG32 u32[1];
            struct {
            struct w32ARO_SRST;
                   };
                 } TARO_SRST;

    ///////////////////////////////////////////////////////////
     SIGN32 ARO_drvrd(SIE_ARO *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 ARO_drvwr(SIE_ARO *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void ARO_reset(SIE_ARO *p);
     SIGN32 ARO_cmp  (SIE_ARO *p, SIE_ARO *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define ARO_check(p,pie,pfx,hLOG) ARO_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define ARO_print(p,    pfx,hLOG) ARO_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: ARO
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE NOCS_CTRL                                (4,4)
///     ###
///     * ACPU can access these register
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 AKL_endian           (P)
///               %unsigned 1  AKL_endian                0x0
///                                    ###
///                                    * 0: all the data read from AKL’s ACPU boundary is in big endian mode
///                                    * 1: all the data read from AKL’s
///                                    * ACPU boundary is in little endian mode.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00004 AKLClockOff          (P)
///               %unsigned 1  AKLClockOff               0x0
///                                    ###
///                                    * 0: AKL clock is running
///                                    * 1: AKL clock is gated
///                                    * Firmware should make sure that it sets this register to one only when AKL is NOT busy.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 AKL_busy             (R-)
///               %unsigned 1  AKL_busy                  
///                                    ###
///                                    * 0: AKL is idle
///                                    * 1: AKL is busy
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C IntStatus            (WOC-)
///               ###
///               * Writing ones to any of the bits will clear those bits.
///               ###
///               %unsigned 1  AKL_interrupt             0x0
///                                    ###
///                                    * Interrupt from AKL
///                                    ###
///               %unsigned 1  KeyChkFailIntr            0x0
///                                    ###
///                                    * KeyChkFailIntr
///                                    ###
///               %unsigned 1  IllegalSet                0x0
///                                    ###
///                                    * IllegalSet
///                                    ###
///               %unsigned 1  KeyLadderDisable          0x0
///                                    ###
///                                    * KeyLadderDisable
///                                    ###
///               %unsigned 1  InValidSwVendorID         0x0
///                                    ###
///                                    * InValidSwVendorID
///                                    ###
///               %unsigned 27 Reserved                  0x0
///                                    ###
///                                    * Reserved
///                                    ###
///     @ 0x00010 IntMask              (P)
///               %unsigned 32 IntMask                   0x0
///                                    ###
///                                    * 0: do not mask out interrupt bit
///                                    * 1: mask out interrupt bit, register can be updated by hardware, but interrupt will not be generated.
///                                    ###
///     @ 0x00014 IntEnable            (P)
///               %unsigned 32 IntEnable                 0xFFFFFFFF
///                                    ###
///                                    * 0: disable interrupt bit, register will not be updated by hardware
///                                    * 1: enable interrupt bit
///                                    ###
///     @ 0x00018 nd_status            (R-)
///               %unsigned 32 nd_status                 0x0
///                                    ###
///                                    * ASA_status
///                                    ###
///     @ 0x0001C trans_error          (R-)
///               %unsigned 32 trans_error               0x0
///     @ 0x00020 nocs_init            (P)
///               %unsigned 1  nocs_init                 0x1
///                                    ###
///                                    * AKL sync init. To enable AKL, SW needs to write this register to 0.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00024 nocs_slowclock_en    (RW-)
///               %unsigned 1  nocs_slowclock_en         0x0
///                                    ###
///                                    * 1: enable the slow clock check
///                                    * Self lock: Once it is been set to 1, it cannot be set back to 0 until next power up reset.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00028                      (W-)
///     #         # Stuffing bytes...
///               %% 192
///     @ 0x00040 Spare_reg            (RW)
///               %unsigned 32 Reg0                      0x0
///     # 0x00044 Spare_reg1           
///               %unsigned 32 Reg1                      0x0
///     # 0x00048 Spare_reg2           
///               %unsigned 32 Reg2                      0x0
///     # 0x0004C Spare_reg3           
///               %unsigned 32 Reg3                      0x0
///     # 0x00050 Spare_reg4           
///               %unsigned 32 Reg4                      0x0
///     # 0x00054 Spare_reg5           
///               %unsigned 32 Reg5                      0x0
///     # 0x00058 Spare_reg6           
///               %unsigned 32 Reg6                      0x0
///     # 0x0005C Spare_reg7           
///               %unsigned 32 Reg7                      0x0
///     @ 0x00060                      (W-)
///     #         # Stuffing bytes...
///               %% 256
///     @ 0x00080 HostKeySlotSel       (P)
///               %unsigned 6  HostKeySlotSel            0x0
///               %%        26         # Stuffing bits...
///     @ 0x00084 HostKeyUsage         (P)
///               %unsigned 8  HostKeyUsage              0x0
///               %%        24         # Stuffing bits...
///     @ 0x00088 HostKeyValid         (RW-)
///               %unsigned 1  HostKeyValid              0x0
///                                    ###
///                                    * Kick off the storage of HostKey after key is set to HostKey register. This register will self-recover to 0.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0008C                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00090 HostKey              (P)
///     # 0x00090 HostKey              
///               $OneReg              HostKey           REG       [8]
///     @ 0x000B0                      (W-)
///     #         # Stuffing bytes...
///               %% 256
///     @ 0x000D0 kp_init              (P)
///               %unsigned 16 kp_init                   0x0
///                                    ###
///                                    * 0: kp is out of reset
///                                    * 1: reset kp
///                                    * Bit 0: aes_kp
///                                    * Bit 1: tdes_kp
///                                    * Bit2: csa2_kp
///                                    * Bit3: csa3_kp
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x000D4 is_akl_key           (R-)
///     # 0x000D4 is_akl_key           
///               $OneReg              is_akl_key        REG       [2]
///                                    ###
///                                    * Whether a key in nocs key table is generated by akl
///                                    * 1: yes 0: no
///                                    * Bit 0: key slot 0
///                                    * Bit 63: key slot 63
///                                    ###
///     @ 0x000DC                      (W-)
///     #         # Stuffing bytes...
///               %% 224
///     @ 0x000F8 AKL_config           (P)
///               %unsigned 1  FlashProtection_En        0x0
///                                    ###
///                                    * FlashProtection_En
///                                    ###
///               %unsigned 1  DramScrambling_En         0x0
///                                    ###
///                                    * DramScrambling_En
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     252B, bits:     774b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_NOCS_CTRL
#define h_NOCS_CTRL (){}

    #define     RA_NOCS_CTRL_AKL_endian                        0x0000

    #define     BA_NOCS_CTRL_AKL_endian_AKL_endian             0x0000
    #define     B16NOCS_CTRL_AKL_endian_AKL_endian             0x0000
    #define   LSb32NOCS_CTRL_AKL_endian_AKL_endian                0
    #define   LSb16NOCS_CTRL_AKL_endian_AKL_endian                0
    #define       bNOCS_CTRL_AKL_endian_AKL_endian             1
    #define   MSK32NOCS_CTRL_AKL_endian_AKL_endian                0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_AKLClockOff                       0x0004

    #define     BA_NOCS_CTRL_AKLClockOff_AKLClockOff           0x0004
    #define     B16NOCS_CTRL_AKLClockOff_AKLClockOff           0x0004
    #define   LSb32NOCS_CTRL_AKLClockOff_AKLClockOff              0
    #define   LSb16NOCS_CTRL_AKLClockOff_AKLClockOff              0
    #define       bNOCS_CTRL_AKLClockOff_AKLClockOff           1
    #define   MSK32NOCS_CTRL_AKLClockOff_AKLClockOff              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_AKL_busy                          0x0008

    #define     BA_NOCS_CTRL_AKL_busy_AKL_busy                 0x0008
    #define     B16NOCS_CTRL_AKL_busy_AKL_busy                 0x0008
    #define   LSb32NOCS_CTRL_AKL_busy_AKL_busy                    0
    #define   LSb16NOCS_CTRL_AKL_busy_AKL_busy                    0
    #define       bNOCS_CTRL_AKL_busy_AKL_busy                 1
    #define   MSK32NOCS_CTRL_AKL_busy_AKL_busy                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_IntStatus                         0x000C

    #define     BA_NOCS_CTRL_IntStatus_AKL_interrupt           0x000C
    #define     B16NOCS_CTRL_IntStatus_AKL_interrupt           0x000C
    #define   LSb32NOCS_CTRL_IntStatus_AKL_interrupt              0
    #define   LSb16NOCS_CTRL_IntStatus_AKL_interrupt              0
    #define       bNOCS_CTRL_IntStatus_AKL_interrupt           1
    #define   MSK32NOCS_CTRL_IntStatus_AKL_interrupt              0x00000001

    #define     BA_NOCS_CTRL_IntStatus_KeyChkFailIntr          0x000C
    #define     B16NOCS_CTRL_IntStatus_KeyChkFailIntr          0x000C
    #define   LSb32NOCS_CTRL_IntStatus_KeyChkFailIntr             1
    #define   LSb16NOCS_CTRL_IntStatus_KeyChkFailIntr             1
    #define       bNOCS_CTRL_IntStatus_KeyChkFailIntr          1
    #define   MSK32NOCS_CTRL_IntStatus_KeyChkFailIntr             0x00000002

    #define     BA_NOCS_CTRL_IntStatus_IllegalSet              0x000C
    #define     B16NOCS_CTRL_IntStatus_IllegalSet              0x000C
    #define   LSb32NOCS_CTRL_IntStatus_IllegalSet                 2
    #define   LSb16NOCS_CTRL_IntStatus_IllegalSet                 2
    #define       bNOCS_CTRL_IntStatus_IllegalSet              1
    #define   MSK32NOCS_CTRL_IntStatus_IllegalSet                 0x00000004

    #define     BA_NOCS_CTRL_IntStatus_KeyLadderDisable        0x000C
    #define     B16NOCS_CTRL_IntStatus_KeyLadderDisable        0x000C
    #define   LSb32NOCS_CTRL_IntStatus_KeyLadderDisable           3
    #define   LSb16NOCS_CTRL_IntStatus_KeyLadderDisable           3
    #define       bNOCS_CTRL_IntStatus_KeyLadderDisable        1
    #define   MSK32NOCS_CTRL_IntStatus_KeyLadderDisable           0x00000008

    #define     BA_NOCS_CTRL_IntStatus_InValidSwVendorID       0x000C
    #define     B16NOCS_CTRL_IntStatus_InValidSwVendorID       0x000C
    #define   LSb32NOCS_CTRL_IntStatus_InValidSwVendorID          4
    #define   LSb16NOCS_CTRL_IntStatus_InValidSwVendorID          4
    #define       bNOCS_CTRL_IntStatus_InValidSwVendorID       1
    #define   MSK32NOCS_CTRL_IntStatus_InValidSwVendorID          0x00000010

    #define     BA_NOCS_CTRL_IntStatus_Reserved                0x000C
    #define     B16NOCS_CTRL_IntStatus_Reserved                0x000C
    #define   LSb32NOCS_CTRL_IntStatus_Reserved                   5
    #define   LSb16NOCS_CTRL_IntStatus_Reserved                   5
    #define       bNOCS_CTRL_IntStatus_Reserved                27
    #define   MSK32NOCS_CTRL_IntStatus_Reserved                   0xFFFFFFE0
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_IntMask                           0x0010

    #define     BA_NOCS_CTRL_IntMask_IntMask                   0x0010
    #define     B16NOCS_CTRL_IntMask_IntMask                   0x0010
    #define   LSb32NOCS_CTRL_IntMask_IntMask                      0
    #define   LSb16NOCS_CTRL_IntMask_IntMask                      0
    #define       bNOCS_CTRL_IntMask_IntMask                   32
    #define   MSK32NOCS_CTRL_IntMask_IntMask                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_IntEnable                         0x0014

    #define     BA_NOCS_CTRL_IntEnable_IntEnable               0x0014
    #define     B16NOCS_CTRL_IntEnable_IntEnable               0x0014
    #define   LSb32NOCS_CTRL_IntEnable_IntEnable                  0
    #define   LSb16NOCS_CTRL_IntEnable_IntEnable                  0
    #define       bNOCS_CTRL_IntEnable_IntEnable               32
    #define   MSK32NOCS_CTRL_IntEnable_IntEnable                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_nd_status                         0x0018

    #define     BA_NOCS_CTRL_nd_status_nd_status               0x0018
    #define     B16NOCS_CTRL_nd_status_nd_status               0x0018
    #define   LSb32NOCS_CTRL_nd_status_nd_status                  0
    #define   LSb16NOCS_CTRL_nd_status_nd_status                  0
    #define       bNOCS_CTRL_nd_status_nd_status               32
    #define   MSK32NOCS_CTRL_nd_status_nd_status                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_trans_error                       0x001C

    #define     BA_NOCS_CTRL_trans_error_trans_error           0x001C
    #define     B16NOCS_CTRL_trans_error_trans_error           0x001C
    #define   LSb32NOCS_CTRL_trans_error_trans_error              0
    #define   LSb16NOCS_CTRL_trans_error_trans_error              0
    #define       bNOCS_CTRL_trans_error_trans_error           32
    #define   MSK32NOCS_CTRL_trans_error_trans_error              0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_nocs_init                         0x0020

    #define     BA_NOCS_CTRL_nocs_init_nocs_init               0x0020
    #define     B16NOCS_CTRL_nocs_init_nocs_init               0x0020
    #define   LSb32NOCS_CTRL_nocs_init_nocs_init                  0
    #define   LSb16NOCS_CTRL_nocs_init_nocs_init                  0
    #define       bNOCS_CTRL_nocs_init_nocs_init               1
    #define   MSK32NOCS_CTRL_nocs_init_nocs_init                  0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_nocs_slowclock_en                 0x0024

    #define     BA_NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en 0x0024
    #define     B16NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en 0x0024
    #define   LSb32NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en    0
    #define   LSb16NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en    0
    #define       bNOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en 1
    #define   MSK32NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_Spare_reg                         0x0040

    #define     BA_NOCS_CTRL_Spare_reg_Reg0                    0x0040
    #define     B16NOCS_CTRL_Spare_reg_Reg0                    0x0040
    #define   LSb32NOCS_CTRL_Spare_reg_Reg0                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg0                       0
    #define       bNOCS_CTRL_Spare_reg_Reg0                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg0                       0xFFFFFFFF

    #define     RA_NOCS_CTRL_Spare_reg1                        0x0044

    #define     BA_NOCS_CTRL_Spare_reg_Reg1                    0x0044
    #define     B16NOCS_CTRL_Spare_reg_Reg1                    0x0044
    #define   LSb32NOCS_CTRL_Spare_reg_Reg1                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg1                       0
    #define       bNOCS_CTRL_Spare_reg_Reg1                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg1                       0xFFFFFFFF

    #define     RA_NOCS_CTRL_Spare_reg2                        0x0048

    #define     BA_NOCS_CTRL_Spare_reg_Reg2                    0x0048
    #define     B16NOCS_CTRL_Spare_reg_Reg2                    0x0048
    #define   LSb32NOCS_CTRL_Spare_reg_Reg2                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg2                       0
    #define       bNOCS_CTRL_Spare_reg_Reg2                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg2                       0xFFFFFFFF

    #define     RA_NOCS_CTRL_Spare_reg3                        0x004C

    #define     BA_NOCS_CTRL_Spare_reg_Reg3                    0x004C
    #define     B16NOCS_CTRL_Spare_reg_Reg3                    0x004C
    #define   LSb32NOCS_CTRL_Spare_reg_Reg3                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg3                       0
    #define       bNOCS_CTRL_Spare_reg_Reg3                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg3                       0xFFFFFFFF

    #define     RA_NOCS_CTRL_Spare_reg4                        0x0050

    #define     BA_NOCS_CTRL_Spare_reg_Reg4                    0x0050
    #define     B16NOCS_CTRL_Spare_reg_Reg4                    0x0050
    #define   LSb32NOCS_CTRL_Spare_reg_Reg4                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg4                       0
    #define       bNOCS_CTRL_Spare_reg_Reg4                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg4                       0xFFFFFFFF

    #define     RA_NOCS_CTRL_Spare_reg5                        0x0054

    #define     BA_NOCS_CTRL_Spare_reg_Reg5                    0x0054
    #define     B16NOCS_CTRL_Spare_reg_Reg5                    0x0054
    #define   LSb32NOCS_CTRL_Spare_reg_Reg5                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg5                       0
    #define       bNOCS_CTRL_Spare_reg_Reg5                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg5                       0xFFFFFFFF

    #define     RA_NOCS_CTRL_Spare_reg6                        0x0058

    #define     BA_NOCS_CTRL_Spare_reg_Reg6                    0x0058
    #define     B16NOCS_CTRL_Spare_reg_Reg6                    0x0058
    #define   LSb32NOCS_CTRL_Spare_reg_Reg6                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg6                       0
    #define       bNOCS_CTRL_Spare_reg_Reg6                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg6                       0xFFFFFFFF

    #define     RA_NOCS_CTRL_Spare_reg7                        0x005C

    #define     BA_NOCS_CTRL_Spare_reg_Reg7                    0x005C
    #define     B16NOCS_CTRL_Spare_reg_Reg7                    0x005C
    #define   LSb32NOCS_CTRL_Spare_reg_Reg7                       0
    #define   LSb16NOCS_CTRL_Spare_reg_Reg7                       0
    #define       bNOCS_CTRL_Spare_reg_Reg7                    32
    #define   MSK32NOCS_CTRL_Spare_reg_Reg7                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_HostKeySlotSel                    0x0080

    #define     BA_NOCS_CTRL_HostKeySlotSel_HostKeySlotSel     0x0080
    #define     B16NOCS_CTRL_HostKeySlotSel_HostKeySlotSel     0x0080
    #define   LSb32NOCS_CTRL_HostKeySlotSel_HostKeySlotSel        0
    #define   LSb16NOCS_CTRL_HostKeySlotSel_HostKeySlotSel        0
    #define       bNOCS_CTRL_HostKeySlotSel_HostKeySlotSel     6
    #define   MSK32NOCS_CTRL_HostKeySlotSel_HostKeySlotSel        0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_HostKeyUsage                      0x0084

    #define     BA_NOCS_CTRL_HostKeyUsage_HostKeyUsage         0x0084
    #define     B16NOCS_CTRL_HostKeyUsage_HostKeyUsage         0x0084
    #define   LSb32NOCS_CTRL_HostKeyUsage_HostKeyUsage            0
    #define   LSb16NOCS_CTRL_HostKeyUsage_HostKeyUsage            0
    #define       bNOCS_CTRL_HostKeyUsage_HostKeyUsage         8
    #define   MSK32NOCS_CTRL_HostKeyUsage_HostKeyUsage            0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_HostKeyValid                      0x0088

    #define     BA_NOCS_CTRL_HostKeyValid_HostKeyValid         0x0088
    #define     B16NOCS_CTRL_HostKeyValid_HostKeyValid         0x0088
    #define   LSb32NOCS_CTRL_HostKeyValid_HostKeyValid            0
    #define   LSb16NOCS_CTRL_HostKeyValid_HostKeyValid            0
    #define       bNOCS_CTRL_HostKeyValid_HostKeyValid         1
    #define   MSK32NOCS_CTRL_HostKeyValid_HostKeyValid            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_HostKey                           0x0090
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_kp_init                           0x00D0

    #define     BA_NOCS_CTRL_kp_init_kp_init                   0x00D0
    #define     B16NOCS_CTRL_kp_init_kp_init                   0x00D0
    #define   LSb32NOCS_CTRL_kp_init_kp_init                      0
    #define   LSb16NOCS_CTRL_kp_init_kp_init                      0
    #define       bNOCS_CTRL_kp_init_kp_init                   16
    #define   MSK32NOCS_CTRL_kp_init_kp_init                      0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_is_akl_key                        0x00D4
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS_CTRL_AKL_config                        0x00F8

    #define     BA_NOCS_CTRL_AKL_config_FlashProtection_En     0x00F8
    #define     B16NOCS_CTRL_AKL_config_FlashProtection_En     0x00F8
    #define   LSb32NOCS_CTRL_AKL_config_FlashProtection_En        0
    #define   LSb16NOCS_CTRL_AKL_config_FlashProtection_En        0
    #define       bNOCS_CTRL_AKL_config_FlashProtection_En     1
    #define   MSK32NOCS_CTRL_AKL_config_FlashProtection_En        0x00000001

    #define     BA_NOCS_CTRL_AKL_config_DramScrambling_En      0x00F8
    #define     B16NOCS_CTRL_AKL_config_DramScrambling_En      0x00F8
    #define   LSb32NOCS_CTRL_AKL_config_DramScrambling_En         1
    #define   LSb16NOCS_CTRL_AKL_config_DramScrambling_En         1
    #define       bNOCS_CTRL_AKL_config_DramScrambling_En      1
    #define   MSK32NOCS_CTRL_AKL_config_DramScrambling_En         0x00000002
    ///////////////////////////////////////////////////////////

    typedef struct SIE_NOCS_CTRL {
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_AKL_endian_AKL_endian(r32)        _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_AKL_endian_AKL_endian(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_AKL_endian_AKL_endian(r16)        _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_AKL_endian_AKL_endian(r16,v)      _BFSET_(r16, 0, 0,v)

    #define     w32NOCS_CTRL_AKL_endian                        {\
            UNSG32 uAKL_endian_AKL_endian                      :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32NOCS_CTRL_AKL_endian;
            struct w32NOCS_CTRL_AKL_endian;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_AKLClockOff_AKLClockOff(r32)      _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_AKLClockOff_AKLClockOff(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_AKLClockOff_AKLClockOff(r16)      _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_AKLClockOff_AKLClockOff(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32NOCS_CTRL_AKLClockOff                       {\
            UNSG32 uAKLClockOff_AKLClockOff                    :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32NOCS_CTRL_AKLClockOff;
            struct w32NOCS_CTRL_AKLClockOff;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_AKL_busy_AKL_busy(r32)            _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_AKL_busy_AKL_busy(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_AKL_busy_AKL_busy(r16)            _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_AKL_busy_AKL_busy(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32NOCS_CTRL_AKL_busy                          {\
            UNSG32 uAKL_busy_AKL_busy                          :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32NOCS_CTRL_AKL_busy;
            struct w32NOCS_CTRL_AKL_busy;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_IntStatus_AKL_interrupt(r32)      _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_IntStatus_AKL_interrupt(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_IntStatus_AKL_interrupt(r16)      _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_IntStatus_AKL_interrupt(r16,v)    _BFSET_(r16, 0, 0,v)

    #define   GET32NOCS_CTRL_IntStatus_KeyChkFailIntr(r32)     _BFGET_(r32, 1, 1)
    #define   SET32NOCS_CTRL_IntStatus_KeyChkFailIntr(r32,v)   _BFSET_(r32, 1, 1,v)
    #define   GET16NOCS_CTRL_IntStatus_KeyChkFailIntr(r16)     _BFGET_(r16, 1, 1)
    #define   SET16NOCS_CTRL_IntStatus_KeyChkFailIntr(r16,v)   _BFSET_(r16, 1, 1,v)

    #define   GET32NOCS_CTRL_IntStatus_IllegalSet(r32)         _BFGET_(r32, 2, 2)
    #define   SET32NOCS_CTRL_IntStatus_IllegalSet(r32,v)       _BFSET_(r32, 2, 2,v)
    #define   GET16NOCS_CTRL_IntStatus_IllegalSet(r16)         _BFGET_(r16, 2, 2)
    #define   SET16NOCS_CTRL_IntStatus_IllegalSet(r16,v)       _BFSET_(r16, 2, 2,v)

    #define   GET32NOCS_CTRL_IntStatus_KeyLadderDisable(r32)   _BFGET_(r32, 3, 3)
    #define   SET32NOCS_CTRL_IntStatus_KeyLadderDisable(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16NOCS_CTRL_IntStatus_KeyLadderDisable(r16)   _BFGET_(r16, 3, 3)
    #define   SET16NOCS_CTRL_IntStatus_KeyLadderDisable(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32NOCS_CTRL_IntStatus_InValidSwVendorID(r32)  _BFGET_(r32, 4, 4)
    #define   SET32NOCS_CTRL_IntStatus_InValidSwVendorID(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16NOCS_CTRL_IntStatus_InValidSwVendorID(r16)  _BFGET_(r16, 4, 4)
    #define   SET16NOCS_CTRL_IntStatus_InValidSwVendorID(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32NOCS_CTRL_IntStatus_Reserved(r32)           _BFGET_(r32,31, 5)
    #define   SET32NOCS_CTRL_IntStatus_Reserved(r32,v)         _BFSET_(r32,31, 5,v)

    #define     w32NOCS_CTRL_IntStatus                         {\
            UNSG32 uIntStatus_AKL_interrupt                    :  1;\
            UNSG32 uIntStatus_KeyChkFailIntr                   :  1;\
            UNSG32 uIntStatus_IllegalSet                       :  1;\
            UNSG32 uIntStatus_KeyLadderDisable                 :  1;\
            UNSG32 uIntStatus_InValidSwVendorID                :  1;\
            UNSG32 uIntStatus_Reserved                         : 27;\
          }
    union { UNSG32 u32NOCS_CTRL_IntStatus;
            struct w32NOCS_CTRL_IntStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_IntMask_IntMask(r32)              _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_IntMask_IntMask(r32,v)            _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_IntMask                           {\
            UNSG32 uIntMask_IntMask                            : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_IntMask;
            struct w32NOCS_CTRL_IntMask;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_IntEnable_IntEnable(r32)          _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_IntEnable_IntEnable(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_IntEnable                         {\
            UNSG32 uIntEnable_IntEnable                        : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_IntEnable;
            struct w32NOCS_CTRL_IntEnable;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_nd_status_nd_status(r32)          _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_nd_status_nd_status(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_nd_status                         {\
            UNSG32 und_status_nd_status                        : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_nd_status;
            struct w32NOCS_CTRL_nd_status;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_trans_error_trans_error(r32)      _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_trans_error_trans_error(r32,v)    _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_trans_error                       {\
            UNSG32 utrans_error_trans_error                    : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_trans_error;
            struct w32NOCS_CTRL_trans_error;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_nocs_init_nocs_init(r32)          _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_nocs_init_nocs_init(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_nocs_init_nocs_init(r16)          _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_nocs_init_nocs_init(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32NOCS_CTRL_nocs_init                         {\
            UNSG32 unocs_init_nocs_init                        :  1;\
            UNSG32 RSVDx20_b1                                  : 31;\
          }
    union { UNSG32 u32NOCS_CTRL_nocs_init;
            struct w32NOCS_CTRL_nocs_init;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en(r32) _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en(r16) _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_nocs_slowclock_en_nocs_slowclock_en(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32NOCS_CTRL_nocs_slowclock_en                 {\
            UNSG32 unocs_slowclock_en_nocs_slowclock_en        :  1;\
            UNSG32 RSVDx24_b1                                  : 31;\
          }
    union { UNSG32 u32NOCS_CTRL_nocs_slowclock_en;
            struct w32NOCS_CTRL_nocs_slowclock_en;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx28                                     [24];
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_Spare_reg_Reg0(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg0(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg                         {\
            UNSG32 uSpare_reg_Reg0                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg;
            struct w32NOCS_CTRL_Spare_reg;
          };
    #define   GET32NOCS_CTRL_Spare_reg_Reg1(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg1(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg1                        {\
            UNSG32 uSpare_reg_Reg1                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg1;
            struct w32NOCS_CTRL_Spare_reg1;
          };
    #define   GET32NOCS_CTRL_Spare_reg_Reg2(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg2(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg2                        {\
            UNSG32 uSpare_reg_Reg2                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg2;
            struct w32NOCS_CTRL_Spare_reg2;
          };
    #define   GET32NOCS_CTRL_Spare_reg_Reg3(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg3(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg3                        {\
            UNSG32 uSpare_reg_Reg3                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg3;
            struct w32NOCS_CTRL_Spare_reg3;
          };
    #define   GET32NOCS_CTRL_Spare_reg_Reg4(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg4(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg4                        {\
            UNSG32 uSpare_reg_Reg4                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg4;
            struct w32NOCS_CTRL_Spare_reg4;
          };
    #define   GET32NOCS_CTRL_Spare_reg_Reg5(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg5(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg5                        {\
            UNSG32 uSpare_reg_Reg5                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg5;
            struct w32NOCS_CTRL_Spare_reg5;
          };
    #define   GET32NOCS_CTRL_Spare_reg_Reg6(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg6(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg6                        {\
            UNSG32 uSpare_reg_Reg6                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg6;
            struct w32NOCS_CTRL_Spare_reg6;
          };
    #define   GET32NOCS_CTRL_Spare_reg_Reg7(r32)               _BFGET_(r32,31, 0)
    #define   SET32NOCS_CTRL_Spare_reg_Reg7(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32NOCS_CTRL_Spare_reg7                        {\
            UNSG32 uSpare_reg_Reg7                             : 32;\
          }
    union { UNSG32 u32NOCS_CTRL_Spare_reg7;
            struct w32NOCS_CTRL_Spare_reg7;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx60                                     [32];
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_HostKeySlotSel_HostKeySlotSel(r32) _BFGET_(r32, 5, 0)
    #define   SET32NOCS_CTRL_HostKeySlotSel_HostKeySlotSel(r32,v) _BFSET_(r32, 5, 0,v)
    #define   GET16NOCS_CTRL_HostKeySlotSel_HostKeySlotSel(r16) _BFGET_(r16, 5, 0)
    #define   SET16NOCS_CTRL_HostKeySlotSel_HostKeySlotSel(r16,v) _BFSET_(r16, 5, 0,v)

    #define     w32NOCS_CTRL_HostKeySlotSel                    {\
            UNSG32 uHostKeySlotSel_HostKeySlotSel              :  6;\
            UNSG32 RSVDx80_b6                                  : 26;\
          }
    union { UNSG32 u32NOCS_CTRL_HostKeySlotSel;
            struct w32NOCS_CTRL_HostKeySlotSel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_HostKeyUsage_HostKeyUsage(r32)    _BFGET_(r32, 7, 0)
    #define   SET32NOCS_CTRL_HostKeyUsage_HostKeyUsage(r32,v)  _BFSET_(r32, 7, 0,v)
    #define   GET16NOCS_CTRL_HostKeyUsage_HostKeyUsage(r16)    _BFGET_(r16, 7, 0)
    #define   SET16NOCS_CTRL_HostKeyUsage_HostKeyUsage(r16,v)  _BFSET_(r16, 7, 0,v)

    #define     w32NOCS_CTRL_HostKeyUsage                      {\
            UNSG32 uHostKeyUsage_HostKeyUsage                  :  8;\
            UNSG32 RSVDx84_b8                                  : 24;\
          }
    union { UNSG32 u32NOCS_CTRL_HostKeyUsage;
            struct w32NOCS_CTRL_HostKeyUsage;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_HostKeyValid_HostKeyValid(r32)    _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_HostKeyValid_HostKeyValid(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_HostKeyValid_HostKeyValid(r16)    _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_HostKeyValid_HostKeyValid(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32NOCS_CTRL_HostKeyValid                      {\
            UNSG32 uHostKeyValid_HostKeyValid                  :  1;\
            UNSG32 RSVDx88_b1                                  : 31;\
          }
    union { UNSG32 u32NOCS_CTRL_HostKeyValid;
            struct w32NOCS_CTRL_HostKeyValid;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx8C                                     [4];
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_HostKey[8];
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxB0                                     [32];
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_kp_init_kp_init(r32)              _BFGET_(r32,15, 0)
    #define   SET32NOCS_CTRL_kp_init_kp_init(r32,v)            _BFSET_(r32,15, 0,v)
    #define   GET16NOCS_CTRL_kp_init_kp_init(r16)              _BFGET_(r16,15, 0)
    #define   SET16NOCS_CTRL_kp_init_kp_init(r16,v)            _BFSET_(r16,15, 0,v)

    #define     w32NOCS_CTRL_kp_init                           {\
            UNSG32 ukp_init_kp_init                            : 16;\
            UNSG32 RSVDxD0_b16                                 : 16;\
          }
    union { UNSG32 u32NOCS_CTRL_kp_init;
            struct w32NOCS_CTRL_kp_init;
          };
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_is_akl_key[2];
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxDC                                     [28];
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS_CTRL_AKL_config_FlashProtection_En(r32) _BFGET_(r32, 0, 0)
    #define   SET32NOCS_CTRL_AKL_config_FlashProtection_En(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS_CTRL_AKL_config_FlashProtection_En(r16) _BFGET_(r16, 0, 0)
    #define   SET16NOCS_CTRL_AKL_config_FlashProtection_En(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32NOCS_CTRL_AKL_config_DramScrambling_En(r32) _BFGET_(r32, 1, 1)
    #define   SET32NOCS_CTRL_AKL_config_DramScrambling_En(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16NOCS_CTRL_AKL_config_DramScrambling_En(r16) _BFGET_(r16, 1, 1)
    #define   SET16NOCS_CTRL_AKL_config_DramScrambling_En(r16,v) _BFSET_(r16, 1, 1,v)

    #define     w32NOCS_CTRL_AKL_config                        {\
            UNSG32 uAKL_config_FlashProtection_En              :  1;\
            UNSG32 uAKL_config_DramScrambling_En               :  1;\
            UNSG32 RSVDxF8_b2                                  : 30;\
          }
    union { UNSG32 u32NOCS_CTRL_AKL_config;
            struct w32NOCS_CTRL_AKL_config;
          };
    ///////////////////////////////////////////////////////////
    } SIE_NOCS_CTRL;

    typedef union  T32NOCS_CTRL_AKL_endian
          { UNSG32 u32;
            struct w32NOCS_CTRL_AKL_endian;
                 } T32NOCS_CTRL_AKL_endian;
    typedef union  T32NOCS_CTRL_AKLClockOff
          { UNSG32 u32;
            struct w32NOCS_CTRL_AKLClockOff;
                 } T32NOCS_CTRL_AKLClockOff;
    typedef union  T32NOCS_CTRL_AKL_busy
          { UNSG32 u32;
            struct w32NOCS_CTRL_AKL_busy;
                 } T32NOCS_CTRL_AKL_busy;
    typedef union  T32NOCS_CTRL_IntStatus
          { UNSG32 u32;
            struct w32NOCS_CTRL_IntStatus;
                 } T32NOCS_CTRL_IntStatus;
    typedef union  T32NOCS_CTRL_IntMask
          { UNSG32 u32;
            struct w32NOCS_CTRL_IntMask;
                 } T32NOCS_CTRL_IntMask;
    typedef union  T32NOCS_CTRL_IntEnable
          { UNSG32 u32;
            struct w32NOCS_CTRL_IntEnable;
                 } T32NOCS_CTRL_IntEnable;
    typedef union  T32NOCS_CTRL_nd_status
          { UNSG32 u32;
            struct w32NOCS_CTRL_nd_status;
                 } T32NOCS_CTRL_nd_status;
    typedef union  T32NOCS_CTRL_trans_error
          { UNSG32 u32;
            struct w32NOCS_CTRL_trans_error;
                 } T32NOCS_CTRL_trans_error;
    typedef union  T32NOCS_CTRL_nocs_init
          { UNSG32 u32;
            struct w32NOCS_CTRL_nocs_init;
                 } T32NOCS_CTRL_nocs_init;
    typedef union  T32NOCS_CTRL_nocs_slowclock_en
          { UNSG32 u32;
            struct w32NOCS_CTRL_nocs_slowclock_en;
                 } T32NOCS_CTRL_nocs_slowclock_en;
    typedef union  T32NOCS_CTRL_Spare_reg
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg;
                 } T32NOCS_CTRL_Spare_reg;
    typedef union  T32NOCS_CTRL_Spare_reg1
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg1;
                 } T32NOCS_CTRL_Spare_reg1;
    typedef union  T32NOCS_CTRL_Spare_reg2
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg2;
                 } T32NOCS_CTRL_Spare_reg2;
    typedef union  T32NOCS_CTRL_Spare_reg3
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg3;
                 } T32NOCS_CTRL_Spare_reg3;
    typedef union  T32NOCS_CTRL_Spare_reg4
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg4;
                 } T32NOCS_CTRL_Spare_reg4;
    typedef union  T32NOCS_CTRL_Spare_reg5
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg5;
                 } T32NOCS_CTRL_Spare_reg5;
    typedef union  T32NOCS_CTRL_Spare_reg6
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg6;
                 } T32NOCS_CTRL_Spare_reg6;
    typedef union  T32NOCS_CTRL_Spare_reg7
          { UNSG32 u32;
            struct w32NOCS_CTRL_Spare_reg7;
                 } T32NOCS_CTRL_Spare_reg7;
    typedef union  T32NOCS_CTRL_HostKeySlotSel
          { UNSG32 u32;
            struct w32NOCS_CTRL_HostKeySlotSel;
                 } T32NOCS_CTRL_HostKeySlotSel;
    typedef union  T32NOCS_CTRL_HostKeyUsage
          { UNSG32 u32;
            struct w32NOCS_CTRL_HostKeyUsage;
                 } T32NOCS_CTRL_HostKeyUsage;
    typedef union  T32NOCS_CTRL_HostKeyValid
          { UNSG32 u32;
            struct w32NOCS_CTRL_HostKeyValid;
                 } T32NOCS_CTRL_HostKeyValid;
    typedef union  T32NOCS_CTRL_kp_init
          { UNSG32 u32;
            struct w32NOCS_CTRL_kp_init;
                 } T32NOCS_CTRL_kp_init;
    typedef union  T32NOCS_CTRL_AKL_config
          { UNSG32 u32;
            struct w32NOCS_CTRL_AKL_config;
                 } T32NOCS_CTRL_AKL_config;
    ///////////////////////////////////////////////////////////

    typedef union  TNOCS_CTRL_AKL_endian
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_AKL_endian;
                   };
                 } TNOCS_CTRL_AKL_endian;
    typedef union  TNOCS_CTRL_AKLClockOff
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_AKLClockOff;
                   };
                 } TNOCS_CTRL_AKLClockOff;
    typedef union  TNOCS_CTRL_AKL_busy
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_AKL_busy;
                   };
                 } TNOCS_CTRL_AKL_busy;
    typedef union  TNOCS_CTRL_IntStatus
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_IntStatus;
                   };
                 } TNOCS_CTRL_IntStatus;
    typedef union  TNOCS_CTRL_IntMask
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_IntMask;
                   };
                 } TNOCS_CTRL_IntMask;
    typedef union  TNOCS_CTRL_IntEnable
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_IntEnable;
                   };
                 } TNOCS_CTRL_IntEnable;
    typedef union  TNOCS_CTRL_nd_status
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_nd_status;
                   };
                 } TNOCS_CTRL_nd_status;
    typedef union  TNOCS_CTRL_trans_error
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_trans_error;
                   };
                 } TNOCS_CTRL_trans_error;
    typedef union  TNOCS_CTRL_nocs_init
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_nocs_init;
                   };
                 } TNOCS_CTRL_nocs_init;
    typedef union  TNOCS_CTRL_nocs_slowclock_en
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_nocs_slowclock_en;
                   };
                 } TNOCS_CTRL_nocs_slowclock_en;
    typedef union  TNOCS_CTRL_Spare_reg
          { UNSG32 u32[8];
            struct {
            struct w32NOCS_CTRL_Spare_reg;
            struct w32NOCS_CTRL_Spare_reg1;
            struct w32NOCS_CTRL_Spare_reg2;
            struct w32NOCS_CTRL_Spare_reg3;
            struct w32NOCS_CTRL_Spare_reg4;
            struct w32NOCS_CTRL_Spare_reg5;
            struct w32NOCS_CTRL_Spare_reg6;
            struct w32NOCS_CTRL_Spare_reg7;
                   };
                 } TNOCS_CTRL_Spare_reg;
    typedef union  TNOCS_CTRL_HostKeySlotSel
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_HostKeySlotSel;
                   };
                 } TNOCS_CTRL_HostKeySlotSel;
    typedef union  TNOCS_CTRL_HostKeyUsage
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_HostKeyUsage;
                   };
                 } TNOCS_CTRL_HostKeyUsage;
    typedef union  TNOCS_CTRL_HostKeyValid
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_HostKeyValid;
                   };
                 } TNOCS_CTRL_HostKeyValid;
    typedef union  TNOCS_CTRL_kp_init
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_kp_init;
                   };
                 } TNOCS_CTRL_kp_init;
    typedef union  TNOCS_CTRL_AKL_config
          { UNSG32 u32[1];
            struct {
            struct w32NOCS_CTRL_AKL_config;
                   };
                 } TNOCS_CTRL_AKL_config;

    ///////////////////////////////////////////////////////////
     SIGN32 NOCS_CTRL_drvrd(SIE_NOCS_CTRL *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 NOCS_CTRL_drvwr(SIE_NOCS_CTRL *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void NOCS_CTRL_reset(SIE_NOCS_CTRL *p);
     SIGN32 NOCS_CTRL_cmp  (SIE_NOCS_CTRL *p, SIE_NOCS_CTRL *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define NOCS_CTRL_check(p,pie,pfx,hLOG) NOCS_CTRL_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define NOCS_CTRL_print(p,    pfx,hLOG) NOCS_CTRL_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: NOCS_CTRL
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE KeyGen                                   (4,4)
///     ###
///     * ACPU can access these register
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 MasterRootKeyCheckNumber0 (R-)
///               %unsigned 32 MasterRootKeyCheckNumber0 0x0
///     @ 0x00004 MasterRootKeyCheckNumber1 (R-)
///               %unsigned 32 MasterRootKeyCheckNumber1 0x0
///     @ 0x00008 otpMasterRootKeySel  (RW)
///               %unsigned 1  otpMasterRootKeySel       0x0
///               %%        31         # Stuffing bits...
///     @ 0x0000C swMasterRootKeySel   (RW)
///               %unsigned 1  swMasterRootKeySel        0x0
///               %%        31         # Stuffing bits...
///     @ 0x00010 NagraVendorID        (R-)
///               %unsigned 8  NagraVendorID             0xBB
///               %%        24         # Stuffing bits...
///     @ 0x00014 SwVendorID           (RW)
///               %unsigned 8  SwVendorID                0x0
///               %%        24         # Stuffing bits...
///     @ 0x00018 VMVendorID           (R-)
///               %unsigned 8  VMVendorID                0xDD
///               %%        24         # Stuffing bits...
///     @ 0x0001C KDFMode              (RW)
///               %unsigned 8  KDFMode                   0x0
///               %%        24         # Stuffing bits...
///     @ 0x00020 KeyLadderInput0      (RW)
///     # 0x00020 KeyLadderInput0      
///               $OneReg              KeyLadderInput0   REG       [4]
///     @ 0x00030 KeyLadderInput1      (RW)
///     # 0x00030 KeyLadderInput1      
///               $OneReg              KeyLadderInput1   REG       [4]
///     @ 0x00040 KeyLadderInput2      (RW)
///     # 0x00040 KeyLadderInput2      
///               $OneReg              KeyLadderInput2   REG       [4]
///     @ 0x00050 KeyLadderAlgoSel     (RW)
///               %unsigned 1  KeyLadderAlgoSel          0x0
///               %%        31         # Stuffing bits...
///     @ 0x00054 FlashProtectionKeyOpSel (RW)
///               %unsigned 1  FlashProtectionKeyOpSel   0x0
///               %%        31         # Stuffing bits...
///     @ 0x00058                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00060 FlashProtectionKeyOut (R-)
///     # 0x00060 FlashProtectionKeyOut 
///               $OneReg              FlashProtectionKeyOut REG       [4]
///     @ 0x00070 KeyGenStart          (RW-)
///               %unsigned 1  KeyGenStart               0x0
///                                    ###
///                                    * Kick off KeyGen after all the parameter is set. This register will self-recover to 0.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00074 KeyGenInputLock      (R-)
///               %unsigned 1  KeyGenInputLock           0x0
///               %%        31         # Stuffing bits...
///     @ 0x00078 CA_2_VendorID        (R-)
///               %unsigned 8  CA_2_VendorID             0xCC
///               %%        24         # Stuffing bits...
///     @ 0x0007C CA_3_VendorID        (R-)
///               %unsigned 8  CA_3_VendorID             0xAA
///               %%        24         # Stuffing bits...
///     @ 0x00080 CA_4_VendorID        (R-)
///               %unsigned 8  CA_4_VendorID             0xEE
///               %%        24         # Stuffing bits...
///     @ 0x00084 SW_VIDSel            (RW)
///               %unsigned 3  SW_VIDSel                 0x0
///               %%        29         # Stuffing bits...
///     @ 0x00088                      (W-)
///     #         # Stuffing bytes...
///               %% 320
///     @ 0x000B0 ContentKeySlotSel    (RW)
///               %unsigned 6  ContentKeySlotSel         0x0
///               %%        26         # Stuffing bits...
///     @ 0x000B4 ContentKeyUsage      (RW)
///               %unsigned 8  ContentKeyUsage           0x0
///               %%        24         # Stuffing bits...
///     @ 0x000B8 AKLKeySlotSel        (RW)
///               %unsigned 6  AKLKeySlotSel             0x0
///               %%        26         # Stuffing bits...
///     @ 0x000BC AKLKeyAck            (RW-)
///               %unsigned 1  AKLKeyAck                 0x0
///                                    ###
///                                    * Issue a command to NOCS key table to ack AKL key. This register will self-recover to 0.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000C0 DIP_password         (W-)
///     # 0x000C0 DIP_password         
///               $OneReg              DIP_password      REG       [4]
///                                    ###
///                                    * Hardware use only. NOT open for SW to access
///                                    ###
///     @ 0x000D0 DIP_password_valid   (R-)
///               %unsigned 1  DIP_password_valid        0x0
///                                    ###
///                                    * Open for software to read only.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x000D4                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x000E0 KeyTblValid          (WOC-)
///     # 0x000E0 KeyTblValid          
///               $Reg_SingleSel       KeyTblValid       REG       [2]
///                                    ###
///                                    * Each bit indicates the valid status of each key table entry.
///                                    * SW can only clear it by writing 1.
///                                    ###
///     @ 0x000E8                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x000F0 CR_Nounce            (RW)
///     # 0x000F0 CR_Nounce            
///               $OneReg              CR_Nounce         REG       [4]
///                                    ###
///                                    * Nounce for challenge-response
///                                    ###
///     @ 0x00100 CR_Response          (RW)
///     # 0x00100 CR_Response          
///               $OneReg              CR_Response       REG       [4]
///                                    ###
///                                    * Response for challenge-response
///                                    ###
///     @ 0x00110 CR_Response_Valid    (RW)
///               %unsigned 1  CR_Response_Valid         0x0
///                                    ###
///                                    * Response Valid for challenge-response
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00114 TEE_password         (W-)
///     # 0x00114 TEE_password         
///               $OneReg              TEE_password      REG       [4]
///                                    ###
///                                    * Hardware use only. NOT open for SW to access
///                                    ###
///     @ 0x00124 TEE_password_valid   (R-)
///               %unsigned 1  TEE_password_valid        0x0
///                                    ###
///                                    * Open for software to read only.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00128 TEE_user_password_sel (P)
///               %unsigned 1  TEE_user_password_sel     0x0
///                                    ###
///                                    * 0:select 0; 1:select 1
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0012C VMXOR                (RW)
///     # 0x0012C VMXOR                
///               $OneReg              VMXOR             REG       [4]
///                                    ###
///                                    * VeriMatrix xor factor
///                                    ###
///     @ 0x0013C                      (W-)
///     #         # Stuffing bytes...
///               %% 1568
///     @ 0x00200 NOCS_Metadata        (P)
///     # 0x00200 NOCS_Metadata        
///               $SRAM                NOCS_Metadata     MEM      [64]
///                                    ###
///                                    * Metatdata stored in KeyTable
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     768B, bits:    1402b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_KeyGen
#define h_KeyGen (){}

    #define     RA_KeyGen_MasterRootKeyCheckNumber0            0x0000

    #define     BA_KeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0 0x0000
    #define     B16KeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0 0x0000
    #define   LSb32KeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0    0
    #define   LSb16KeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0    0
    #define       bKeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0 32
    #define   MSK32KeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_MasterRootKeyCheckNumber1            0x0004

    #define     BA_KeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1 0x0004
    #define     B16KeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1 0x0004
    #define   LSb32KeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1    0
    #define   LSb16KeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1    0
    #define       bKeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1 32
    #define   MSK32KeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1    0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_otpMasterRootKeySel                  0x0008

    #define     BA_KeyGen_otpMasterRootKeySel_otpMasterRootKeySel 0x0008
    #define     B16KeyGen_otpMasterRootKeySel_otpMasterRootKeySel 0x0008
    #define   LSb32KeyGen_otpMasterRootKeySel_otpMasterRootKeySel    0
    #define   LSb16KeyGen_otpMasterRootKeySel_otpMasterRootKeySel    0
    #define       bKeyGen_otpMasterRootKeySel_otpMasterRootKeySel 1
    #define   MSK32KeyGen_otpMasterRootKeySel_otpMasterRootKeySel    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_swMasterRootKeySel                   0x000C

    #define     BA_KeyGen_swMasterRootKeySel_swMasterRootKeySel 0x000C
    #define     B16KeyGen_swMasterRootKeySel_swMasterRootKeySel 0x000C
    #define   LSb32KeyGen_swMasterRootKeySel_swMasterRootKeySel    0
    #define   LSb16KeyGen_swMasterRootKeySel_swMasterRootKeySel    0
    #define       bKeyGen_swMasterRootKeySel_swMasterRootKeySel 1
    #define   MSK32KeyGen_swMasterRootKeySel_swMasterRootKeySel    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_NagraVendorID                        0x0010

    #define     BA_KeyGen_NagraVendorID_NagraVendorID          0x0010
    #define     B16KeyGen_NagraVendorID_NagraVendorID          0x0010
    #define   LSb32KeyGen_NagraVendorID_NagraVendorID             0
    #define   LSb16KeyGen_NagraVendorID_NagraVendorID             0
    #define       bKeyGen_NagraVendorID_NagraVendorID          8
    #define   MSK32KeyGen_NagraVendorID_NagraVendorID             0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_SwVendorID                           0x0014

    #define     BA_KeyGen_SwVendorID_SwVendorID                0x0014
    #define     B16KeyGen_SwVendorID_SwVendorID                0x0014
    #define   LSb32KeyGen_SwVendorID_SwVendorID                   0
    #define   LSb16KeyGen_SwVendorID_SwVendorID                   0
    #define       bKeyGen_SwVendorID_SwVendorID                8
    #define   MSK32KeyGen_SwVendorID_SwVendorID                   0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_VMVendorID                           0x0018

    #define     BA_KeyGen_VMVendorID_VMVendorID                0x0018
    #define     B16KeyGen_VMVendorID_VMVendorID                0x0018
    #define   LSb32KeyGen_VMVendorID_VMVendorID                   0
    #define   LSb16KeyGen_VMVendorID_VMVendorID                   0
    #define       bKeyGen_VMVendorID_VMVendorID                8
    #define   MSK32KeyGen_VMVendorID_VMVendorID                   0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KDFMode                              0x001C

    #define     BA_KeyGen_KDFMode_KDFMode                      0x001C
    #define     B16KeyGen_KDFMode_KDFMode                      0x001C
    #define   LSb32KeyGen_KDFMode_KDFMode                         0
    #define   LSb16KeyGen_KDFMode_KDFMode                         0
    #define       bKeyGen_KDFMode_KDFMode                      8
    #define   MSK32KeyGen_KDFMode_KDFMode                         0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KeyLadderInput0                      0x0020
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KeyLadderInput1                      0x0030
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KeyLadderInput2                      0x0040
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KeyLadderAlgoSel                     0x0050

    #define     BA_KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel    0x0050
    #define     B16KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel    0x0050
    #define   LSb32KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel       0
    #define   LSb16KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel       0
    #define       bKeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel    1
    #define   MSK32KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel       0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_FlashProtectionKeyOpSel              0x0054

    #define     BA_KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel 0x0054
    #define     B16KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel 0x0054
    #define   LSb32KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel    0
    #define   LSb16KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel    0
    #define       bKeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel 1
    #define   MSK32KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_FlashProtectionKeyOut                0x0060
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KeyGenStart                          0x0070

    #define     BA_KeyGen_KeyGenStart_KeyGenStart              0x0070
    #define     B16KeyGen_KeyGenStart_KeyGenStart              0x0070
    #define   LSb32KeyGen_KeyGenStart_KeyGenStart                 0
    #define   LSb16KeyGen_KeyGenStart_KeyGenStart                 0
    #define       bKeyGen_KeyGenStart_KeyGenStart              1
    #define   MSK32KeyGen_KeyGenStart_KeyGenStart                 0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KeyGenInputLock                      0x0074

    #define     BA_KeyGen_KeyGenInputLock_KeyGenInputLock      0x0074
    #define     B16KeyGen_KeyGenInputLock_KeyGenInputLock      0x0074
    #define   LSb32KeyGen_KeyGenInputLock_KeyGenInputLock         0
    #define   LSb16KeyGen_KeyGenInputLock_KeyGenInputLock         0
    #define       bKeyGen_KeyGenInputLock_KeyGenInputLock      1
    #define   MSK32KeyGen_KeyGenInputLock_KeyGenInputLock         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_CA_2_VendorID                        0x0078

    #define     BA_KeyGen_CA_2_VendorID_CA_2_VendorID          0x0078
    #define     B16KeyGen_CA_2_VendorID_CA_2_VendorID          0x0078
    #define   LSb32KeyGen_CA_2_VendorID_CA_2_VendorID             0
    #define   LSb16KeyGen_CA_2_VendorID_CA_2_VendorID             0
    #define       bKeyGen_CA_2_VendorID_CA_2_VendorID          8
    #define   MSK32KeyGen_CA_2_VendorID_CA_2_VendorID             0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_CA_3_VendorID                        0x007C

    #define     BA_KeyGen_CA_3_VendorID_CA_3_VendorID          0x007C
    #define     B16KeyGen_CA_3_VendorID_CA_3_VendorID          0x007C
    #define   LSb32KeyGen_CA_3_VendorID_CA_3_VendorID             0
    #define   LSb16KeyGen_CA_3_VendorID_CA_3_VendorID             0
    #define       bKeyGen_CA_3_VendorID_CA_3_VendorID          8
    #define   MSK32KeyGen_CA_3_VendorID_CA_3_VendorID             0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_CA_4_VendorID                        0x0080

    #define     BA_KeyGen_CA_4_VendorID_CA_4_VendorID          0x0080
    #define     B16KeyGen_CA_4_VendorID_CA_4_VendorID          0x0080
    #define   LSb32KeyGen_CA_4_VendorID_CA_4_VendorID             0
    #define   LSb16KeyGen_CA_4_VendorID_CA_4_VendorID             0
    #define       bKeyGen_CA_4_VendorID_CA_4_VendorID          8
    #define   MSK32KeyGen_CA_4_VendorID_CA_4_VendorID             0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_SW_VIDSel                            0x0084

    #define     BA_KeyGen_SW_VIDSel_SW_VIDSel                  0x0084
    #define     B16KeyGen_SW_VIDSel_SW_VIDSel                  0x0084
    #define   LSb32KeyGen_SW_VIDSel_SW_VIDSel                     0
    #define   LSb16KeyGen_SW_VIDSel_SW_VIDSel                     0
    #define       bKeyGen_SW_VIDSel_SW_VIDSel                  3
    #define   MSK32KeyGen_SW_VIDSel_SW_VIDSel                     0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_ContentKeySlotSel                    0x00B0

    #define     BA_KeyGen_ContentKeySlotSel_ContentKeySlotSel  0x00B0
    #define     B16KeyGen_ContentKeySlotSel_ContentKeySlotSel  0x00B0
    #define   LSb32KeyGen_ContentKeySlotSel_ContentKeySlotSel     0
    #define   LSb16KeyGen_ContentKeySlotSel_ContentKeySlotSel     0
    #define       bKeyGen_ContentKeySlotSel_ContentKeySlotSel  6
    #define   MSK32KeyGen_ContentKeySlotSel_ContentKeySlotSel     0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_ContentKeyUsage                      0x00B4

    #define     BA_KeyGen_ContentKeyUsage_ContentKeyUsage      0x00B4
    #define     B16KeyGen_ContentKeyUsage_ContentKeyUsage      0x00B4
    #define   LSb32KeyGen_ContentKeyUsage_ContentKeyUsage         0
    #define   LSb16KeyGen_ContentKeyUsage_ContentKeyUsage         0
    #define       bKeyGen_ContentKeyUsage_ContentKeyUsage      8
    #define   MSK32KeyGen_ContentKeyUsage_ContentKeyUsage         0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_AKLKeySlotSel                        0x00B8

    #define     BA_KeyGen_AKLKeySlotSel_AKLKeySlotSel          0x00B8
    #define     B16KeyGen_AKLKeySlotSel_AKLKeySlotSel          0x00B8
    #define   LSb32KeyGen_AKLKeySlotSel_AKLKeySlotSel             0
    #define   LSb16KeyGen_AKLKeySlotSel_AKLKeySlotSel             0
    #define       bKeyGen_AKLKeySlotSel_AKLKeySlotSel          6
    #define   MSK32KeyGen_AKLKeySlotSel_AKLKeySlotSel             0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_AKLKeyAck                            0x00BC

    #define     BA_KeyGen_AKLKeyAck_AKLKeyAck                  0x00BC
    #define     B16KeyGen_AKLKeyAck_AKLKeyAck                  0x00BC
    #define   LSb32KeyGen_AKLKeyAck_AKLKeyAck                     0
    #define   LSb16KeyGen_AKLKeyAck_AKLKeyAck                     0
    #define       bKeyGen_AKLKeyAck_AKLKeyAck                  1
    #define   MSK32KeyGen_AKLKeyAck_AKLKeyAck                     0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_DIP_password                         0x00C0
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_DIP_password_valid                   0x00D0

    #define     BA_KeyGen_DIP_password_valid_DIP_password_valid 0x00D0
    #define     B16KeyGen_DIP_password_valid_DIP_password_valid 0x00D0
    #define   LSb32KeyGen_DIP_password_valid_DIP_password_valid    0
    #define   LSb16KeyGen_DIP_password_valid_DIP_password_valid    0
    #define       bKeyGen_DIP_password_valid_DIP_password_valid 1
    #define   MSK32KeyGen_DIP_password_valid_DIP_password_valid    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_KeyTblValid                          0x00E0
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_CR_Nounce                            0x00F0
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_CR_Response                          0x0100
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_CR_Response_Valid                    0x0110

    #define     BA_KeyGen_CR_Response_Valid_CR_Response_Valid  0x0110
    #define     B16KeyGen_CR_Response_Valid_CR_Response_Valid  0x0110
    #define   LSb32KeyGen_CR_Response_Valid_CR_Response_Valid     0
    #define   LSb16KeyGen_CR_Response_Valid_CR_Response_Valid     0
    #define       bKeyGen_CR_Response_Valid_CR_Response_Valid  1
    #define   MSK32KeyGen_CR_Response_Valid_CR_Response_Valid     0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_TEE_password                         0x0114
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_TEE_password_valid                   0x0124

    #define     BA_KeyGen_TEE_password_valid_TEE_password_valid 0x0124
    #define     B16KeyGen_TEE_password_valid_TEE_password_valid 0x0124
    #define   LSb32KeyGen_TEE_password_valid_TEE_password_valid    0
    #define   LSb16KeyGen_TEE_password_valid_TEE_password_valid    0
    #define       bKeyGen_TEE_password_valid_TEE_password_valid 1
    #define   MSK32KeyGen_TEE_password_valid_TEE_password_valid    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_TEE_user_password_sel                0x0128

    #define     BA_KeyGen_TEE_user_password_sel_TEE_user_password_sel 0x0128
    #define     B16KeyGen_TEE_user_password_sel_TEE_user_password_sel 0x0128
    #define   LSb32KeyGen_TEE_user_password_sel_TEE_user_password_sel    0
    #define   LSb16KeyGen_TEE_user_password_sel_TEE_user_password_sel    0
    #define       bKeyGen_TEE_user_password_sel_TEE_user_password_sel 1
    #define   MSK32KeyGen_TEE_user_password_sel_TEE_user_password_sel    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_VMXOR                                0x012C
    ///////////////////////////////////////////////////////////
    #define     RA_KeyGen_NOCS_Metadata                        0x0200
    ///////////////////////////////////////////////////////////

    typedef struct SIE_KeyGen {
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0(r32) _BFGET_(r32,31, 0)
    #define   SET32KeyGen_MasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32KeyGen_MasterRootKeyCheckNumber0            {\
            UNSG32 uMasterRootKeyCheckNumber0_MasterRootKeyCheckNumber0 : 32;\
          }
    union { UNSG32 u32KeyGen_MasterRootKeyCheckNumber0;
            struct w32KeyGen_MasterRootKeyCheckNumber0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1(r32) _BFGET_(r32,31, 0)
    #define   SET32KeyGen_MasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32KeyGen_MasterRootKeyCheckNumber1            {\
            UNSG32 uMasterRootKeyCheckNumber1_MasterRootKeyCheckNumber1 : 32;\
          }
    union { UNSG32 u32KeyGen_MasterRootKeyCheckNumber1;
            struct w32KeyGen_MasterRootKeyCheckNumber1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_otpMasterRootKeySel_otpMasterRootKeySel(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_otpMasterRootKeySel_otpMasterRootKeySel(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_otpMasterRootKeySel_otpMasterRootKeySel(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_otpMasterRootKeySel_otpMasterRootKeySel(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_otpMasterRootKeySel                  {\
            UNSG32 uotpMasterRootKeySel_otpMasterRootKeySel    :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32KeyGen_otpMasterRootKeySel;
            struct w32KeyGen_otpMasterRootKeySel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_swMasterRootKeySel_swMasterRootKeySel(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_swMasterRootKeySel_swMasterRootKeySel(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_swMasterRootKeySel_swMasterRootKeySel(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_swMasterRootKeySel_swMasterRootKeySel(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_swMasterRootKeySel                   {\
            UNSG32 uswMasterRootKeySel_swMasterRootKeySel      :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32KeyGen_swMasterRootKeySel;
            struct w32KeyGen_swMasterRootKeySel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_NagraVendorID_NagraVendorID(r32)     _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_NagraVendorID_NagraVendorID(r32,v)   _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_NagraVendorID_NagraVendorID(r16)     _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_NagraVendorID_NagraVendorID(r16,v)   _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_NagraVendorID                        {\
            UNSG32 uNagraVendorID_NagraVendorID                :  8;\
            UNSG32 RSVDx10_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_NagraVendorID;
            struct w32KeyGen_NagraVendorID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_SwVendorID_SwVendorID(r32)           _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_SwVendorID_SwVendorID(r32,v)         _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_SwVendorID_SwVendorID(r16)           _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_SwVendorID_SwVendorID(r16,v)         _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_SwVendorID                           {\
            UNSG32 uSwVendorID_SwVendorID                      :  8;\
            UNSG32 RSVDx14_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_SwVendorID;
            struct w32KeyGen_SwVendorID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_VMVendorID_VMVendorID(r32)           _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_VMVendorID_VMVendorID(r32,v)         _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_VMVendorID_VMVendorID(r16)           _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_VMVendorID_VMVendorID(r16,v)         _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_VMVendorID                           {\
            UNSG32 uVMVendorID_VMVendorID                      :  8;\
            UNSG32 RSVDx18_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_VMVendorID;
            struct w32KeyGen_VMVendorID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_KDFMode_KDFMode(r32)                 _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_KDFMode_KDFMode(r32,v)               _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_KDFMode_KDFMode(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_KDFMode_KDFMode(r16,v)               _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_KDFMode                              {\
            UNSG32 uKDFMode_KDFMode                            :  8;\
            UNSG32 RSVDx1C_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_KDFMode;
            struct w32KeyGen_KDFMode;
          };
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_KeyLadderInput0[4];
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_KeyLadderInput1[4];
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_KeyLadderInput2[4];
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_KeyLadderAlgoSel_KeyLadderAlgoSel(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_KeyLadderAlgoSel                     {\
            UNSG32 uKeyLadderAlgoSel_KeyLadderAlgoSel          :  1;\
            UNSG32 RSVDx50_b1                                  : 31;\
          }
    union { UNSG32 u32KeyGen_KeyLadderAlgoSel;
            struct w32KeyGen_KeyLadderAlgoSel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_FlashProtectionKeyOpSel_FlashProtectionKeyOpSel(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_FlashProtectionKeyOpSel              {\
            UNSG32 uFlashProtectionKeyOpSel_FlashProtectionKeyOpSel :  1;\
            UNSG32 RSVDx54_b1                                  : 31;\
          }
    union { UNSG32 u32KeyGen_FlashProtectionKeyOpSel;
            struct w32KeyGen_FlashProtectionKeyOpSel;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx58                                     [8];
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_FlashProtectionKeyOut[4];
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_KeyGenStart_KeyGenStart(r32)         _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_KeyGenStart_KeyGenStart(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_KeyGenStart_KeyGenStart(r16)         _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_KeyGenStart_KeyGenStart(r16,v)       _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_KeyGenStart                          {\
            UNSG32 uKeyGenStart_KeyGenStart                    :  1;\
            UNSG32 RSVDx70_b1                                  : 31;\
          }
    union { UNSG32 u32KeyGen_KeyGenStart;
            struct w32KeyGen_KeyGenStart;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_KeyGenInputLock_KeyGenInputLock(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_KeyGenInputLock_KeyGenInputLock(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_KeyGenInputLock_KeyGenInputLock(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_KeyGenInputLock_KeyGenInputLock(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_KeyGenInputLock                      {\
            UNSG32 uKeyGenInputLock_KeyGenInputLock            :  1;\
            UNSG32 RSVDx74_b1                                  : 31;\
          }
    union { UNSG32 u32KeyGen_KeyGenInputLock;
            struct w32KeyGen_KeyGenInputLock;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_CA_2_VendorID_CA_2_VendorID(r32)     _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_CA_2_VendorID_CA_2_VendorID(r32,v)   _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_CA_2_VendorID_CA_2_VendorID(r16)     _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_CA_2_VendorID_CA_2_VendorID(r16,v)   _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_CA_2_VendorID                        {\
            UNSG32 uCA_2_VendorID_CA_2_VendorID                :  8;\
            UNSG32 RSVDx78_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_CA_2_VendorID;
            struct w32KeyGen_CA_2_VendorID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_CA_3_VendorID_CA_3_VendorID(r32)     _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_CA_3_VendorID_CA_3_VendorID(r32,v)   _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_CA_3_VendorID_CA_3_VendorID(r16)     _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_CA_3_VendorID_CA_3_VendorID(r16,v)   _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_CA_3_VendorID                        {\
            UNSG32 uCA_3_VendorID_CA_3_VendorID                :  8;\
            UNSG32 RSVDx7C_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_CA_3_VendorID;
            struct w32KeyGen_CA_3_VendorID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_CA_4_VendorID_CA_4_VendorID(r32)     _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_CA_4_VendorID_CA_4_VendorID(r32,v)   _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_CA_4_VendorID_CA_4_VendorID(r16)     _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_CA_4_VendorID_CA_4_VendorID(r16,v)   _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_CA_4_VendorID                        {\
            UNSG32 uCA_4_VendorID_CA_4_VendorID                :  8;\
            UNSG32 RSVDx80_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_CA_4_VendorID;
            struct w32KeyGen_CA_4_VendorID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_SW_VIDSel_SW_VIDSel(r32)             _BFGET_(r32, 2, 0)
    #define   SET32KeyGen_SW_VIDSel_SW_VIDSel(r32,v)           _BFSET_(r32, 2, 0,v)
    #define   GET16KeyGen_SW_VIDSel_SW_VIDSel(r16)             _BFGET_(r16, 2, 0)
    #define   SET16KeyGen_SW_VIDSel_SW_VIDSel(r16,v)           _BFSET_(r16, 2, 0,v)

    #define     w32KeyGen_SW_VIDSel                            {\
            UNSG32 uSW_VIDSel_SW_VIDSel                        :  3;\
            UNSG32 RSVDx84_b3                                  : 29;\
          }
    union { UNSG32 u32KeyGen_SW_VIDSel;
            struct w32KeyGen_SW_VIDSel;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx88                                     [40];
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_ContentKeySlotSel_ContentKeySlotSel(r32) _BFGET_(r32, 5, 0)
    #define   SET32KeyGen_ContentKeySlotSel_ContentKeySlotSel(r32,v) _BFSET_(r32, 5, 0,v)
    #define   GET16KeyGen_ContentKeySlotSel_ContentKeySlotSel(r16) _BFGET_(r16, 5, 0)
    #define   SET16KeyGen_ContentKeySlotSel_ContentKeySlotSel(r16,v) _BFSET_(r16, 5, 0,v)

    #define     w32KeyGen_ContentKeySlotSel                    {\
            UNSG32 uContentKeySlotSel_ContentKeySlotSel        :  6;\
            UNSG32 RSVDxB0_b6                                  : 26;\
          }
    union { UNSG32 u32KeyGen_ContentKeySlotSel;
            struct w32KeyGen_ContentKeySlotSel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_ContentKeyUsage_ContentKeyUsage(r32) _BFGET_(r32, 7, 0)
    #define   SET32KeyGen_ContentKeyUsage_ContentKeyUsage(r32,v) _BFSET_(r32, 7, 0,v)
    #define   GET16KeyGen_ContentKeyUsage_ContentKeyUsage(r16) _BFGET_(r16, 7, 0)
    #define   SET16KeyGen_ContentKeyUsage_ContentKeyUsage(r16,v) _BFSET_(r16, 7, 0,v)

    #define     w32KeyGen_ContentKeyUsage                      {\
            UNSG32 uContentKeyUsage_ContentKeyUsage            :  8;\
            UNSG32 RSVDxB4_b8                                  : 24;\
          }
    union { UNSG32 u32KeyGen_ContentKeyUsage;
            struct w32KeyGen_ContentKeyUsage;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_AKLKeySlotSel_AKLKeySlotSel(r32)     _BFGET_(r32, 5, 0)
    #define   SET32KeyGen_AKLKeySlotSel_AKLKeySlotSel(r32,v)   _BFSET_(r32, 5, 0,v)
    #define   GET16KeyGen_AKLKeySlotSel_AKLKeySlotSel(r16)     _BFGET_(r16, 5, 0)
    #define   SET16KeyGen_AKLKeySlotSel_AKLKeySlotSel(r16,v)   _BFSET_(r16, 5, 0,v)

    #define     w32KeyGen_AKLKeySlotSel                        {\
            UNSG32 uAKLKeySlotSel_AKLKeySlotSel                :  6;\
            UNSG32 RSVDxB8_b6                                  : 26;\
          }
    union { UNSG32 u32KeyGen_AKLKeySlotSel;
            struct w32KeyGen_AKLKeySlotSel;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_AKLKeyAck_AKLKeyAck(r32)             _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_AKLKeyAck_AKLKeyAck(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_AKLKeyAck_AKLKeyAck(r16)             _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_AKLKeyAck_AKLKeyAck(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_AKLKeyAck                            {\
            UNSG32 uAKLKeyAck_AKLKeyAck                        :  1;\
            UNSG32 RSVDxBC_b1                                  : 31;\
          }
    union { UNSG32 u32KeyGen_AKLKeyAck;
            struct w32KeyGen_AKLKeyAck;
          };
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_DIP_password[4];
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_DIP_password_valid_DIP_password_valid(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_DIP_password_valid_DIP_password_valid(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_DIP_password_valid_DIP_password_valid(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_DIP_password_valid_DIP_password_valid(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_DIP_password_valid                   {\
            UNSG32 uDIP_password_valid_DIP_password_valid      :  1;\
            UNSG32 RSVDxD0_b1                                  : 31;\
          }
    union { UNSG32 u32KeyGen_DIP_password_valid;
            struct w32KeyGen_DIP_password_valid;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxD4                                     [12];
    ///////////////////////////////////////////////////////////
              SIE_Reg_SingleSel                                ie_KeyTblValid[2];
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxE8                                     [8];
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_CR_Nounce[4];
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_CR_Response[4];
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_CR_Response_Valid_CR_Response_Valid(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_CR_Response_Valid_CR_Response_Valid(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_CR_Response_Valid_CR_Response_Valid(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_CR_Response_Valid_CR_Response_Valid(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_CR_Response_Valid                    {\
            UNSG32 uCR_Response_Valid_CR_Response_Valid        :  1;\
            UNSG32 RSVDx110_b1                                 : 31;\
          }
    union { UNSG32 u32KeyGen_CR_Response_Valid;
            struct w32KeyGen_CR_Response_Valid;
          };
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_TEE_password[4];
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_TEE_password_valid_TEE_password_valid(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_TEE_password_valid_TEE_password_valid(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_TEE_password_valid_TEE_password_valid(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_TEE_password_valid_TEE_password_valid(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_TEE_password_valid                   {\
            UNSG32 uTEE_password_valid_TEE_password_valid      :  1;\
            UNSG32 RSVDx124_b1                                 : 31;\
          }
    union { UNSG32 u32KeyGen_TEE_password_valid;
            struct w32KeyGen_TEE_password_valid;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32KeyGen_TEE_user_password_sel_TEE_user_password_sel(r32) _BFGET_(r32, 0, 0)
    #define   SET32KeyGen_TEE_user_password_sel_TEE_user_password_sel(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16KeyGen_TEE_user_password_sel_TEE_user_password_sel(r16) _BFGET_(r16, 0, 0)
    #define   SET16KeyGen_TEE_user_password_sel_TEE_user_password_sel(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32KeyGen_TEE_user_password_sel                {\
            UNSG32 uTEE_user_password_sel_TEE_user_password_sel :  1;\
            UNSG32 RSVDx128_b1                                 : 31;\
          }
    union { UNSG32 u32KeyGen_TEE_user_password_sel;
            struct w32KeyGen_TEE_user_password_sel;
          };
    ///////////////////////////////////////////////////////////
              SIE_OneReg                                       ie_VMXOR[4];
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx13C                                    [196];
    ///////////////////////////////////////////////////////////
              SIE_SRAM                                         ie_NOCS_Metadata[64];
    ///////////////////////////////////////////////////////////
    } SIE_KeyGen;

    typedef union  T32KeyGen_MasterRootKeyCheckNumber0
          { UNSG32 u32;
            struct w32KeyGen_MasterRootKeyCheckNumber0;
                 } T32KeyGen_MasterRootKeyCheckNumber0;
    typedef union  T32KeyGen_MasterRootKeyCheckNumber1
          { UNSG32 u32;
            struct w32KeyGen_MasterRootKeyCheckNumber1;
                 } T32KeyGen_MasterRootKeyCheckNumber1;
    typedef union  T32KeyGen_otpMasterRootKeySel
          { UNSG32 u32;
            struct w32KeyGen_otpMasterRootKeySel;
                 } T32KeyGen_otpMasterRootKeySel;
    typedef union  T32KeyGen_swMasterRootKeySel
          { UNSG32 u32;
            struct w32KeyGen_swMasterRootKeySel;
                 } T32KeyGen_swMasterRootKeySel;
    typedef union  T32KeyGen_NagraVendorID
          { UNSG32 u32;
            struct w32KeyGen_NagraVendorID;
                 } T32KeyGen_NagraVendorID;
    typedef union  T32KeyGen_SwVendorID
          { UNSG32 u32;
            struct w32KeyGen_SwVendorID;
                 } T32KeyGen_SwVendorID;
    typedef union  T32KeyGen_VMVendorID
          { UNSG32 u32;
            struct w32KeyGen_VMVendorID;
                 } T32KeyGen_VMVendorID;
    typedef union  T32KeyGen_KDFMode
          { UNSG32 u32;
            struct w32KeyGen_KDFMode;
                 } T32KeyGen_KDFMode;
    typedef union  T32KeyGen_KeyLadderAlgoSel
          { UNSG32 u32;
            struct w32KeyGen_KeyLadderAlgoSel;
                 } T32KeyGen_KeyLadderAlgoSel;
    typedef union  T32KeyGen_FlashProtectionKeyOpSel
          { UNSG32 u32;
            struct w32KeyGen_FlashProtectionKeyOpSel;
                 } T32KeyGen_FlashProtectionKeyOpSel;
    typedef union  T32KeyGen_KeyGenStart
          { UNSG32 u32;
            struct w32KeyGen_KeyGenStart;
                 } T32KeyGen_KeyGenStart;
    typedef union  T32KeyGen_KeyGenInputLock
          { UNSG32 u32;
            struct w32KeyGen_KeyGenInputLock;
                 } T32KeyGen_KeyGenInputLock;
    typedef union  T32KeyGen_CA_2_VendorID
          { UNSG32 u32;
            struct w32KeyGen_CA_2_VendorID;
                 } T32KeyGen_CA_2_VendorID;
    typedef union  T32KeyGen_CA_3_VendorID
          { UNSG32 u32;
            struct w32KeyGen_CA_3_VendorID;
                 } T32KeyGen_CA_3_VendorID;
    typedef union  T32KeyGen_CA_4_VendorID
          { UNSG32 u32;
            struct w32KeyGen_CA_4_VendorID;
                 } T32KeyGen_CA_4_VendorID;
    typedef union  T32KeyGen_SW_VIDSel
          { UNSG32 u32;
            struct w32KeyGen_SW_VIDSel;
                 } T32KeyGen_SW_VIDSel;
    typedef union  T32KeyGen_ContentKeySlotSel
          { UNSG32 u32;
            struct w32KeyGen_ContentKeySlotSel;
                 } T32KeyGen_ContentKeySlotSel;
    typedef union  T32KeyGen_ContentKeyUsage
          { UNSG32 u32;
            struct w32KeyGen_ContentKeyUsage;
                 } T32KeyGen_ContentKeyUsage;
    typedef union  T32KeyGen_AKLKeySlotSel
          { UNSG32 u32;
            struct w32KeyGen_AKLKeySlotSel;
                 } T32KeyGen_AKLKeySlotSel;
    typedef union  T32KeyGen_AKLKeyAck
          { UNSG32 u32;
            struct w32KeyGen_AKLKeyAck;
                 } T32KeyGen_AKLKeyAck;
    typedef union  T32KeyGen_DIP_password_valid
          { UNSG32 u32;
            struct w32KeyGen_DIP_password_valid;
                 } T32KeyGen_DIP_password_valid;
    typedef union  T32KeyGen_CR_Response_Valid
          { UNSG32 u32;
            struct w32KeyGen_CR_Response_Valid;
                 } T32KeyGen_CR_Response_Valid;
    typedef union  T32KeyGen_TEE_password_valid
          { UNSG32 u32;
            struct w32KeyGen_TEE_password_valid;
                 } T32KeyGen_TEE_password_valid;
    typedef union  T32KeyGen_TEE_user_password_sel
          { UNSG32 u32;
            struct w32KeyGen_TEE_user_password_sel;
                 } T32KeyGen_TEE_user_password_sel;
    ///////////////////////////////////////////////////////////

    typedef union  TKeyGen_MasterRootKeyCheckNumber0
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_MasterRootKeyCheckNumber0;
                   };
                 } TKeyGen_MasterRootKeyCheckNumber0;
    typedef union  TKeyGen_MasterRootKeyCheckNumber1
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_MasterRootKeyCheckNumber1;
                   };
                 } TKeyGen_MasterRootKeyCheckNumber1;
    typedef union  TKeyGen_otpMasterRootKeySel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_otpMasterRootKeySel;
                   };
                 } TKeyGen_otpMasterRootKeySel;
    typedef union  TKeyGen_swMasterRootKeySel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_swMasterRootKeySel;
                   };
                 } TKeyGen_swMasterRootKeySel;
    typedef union  TKeyGen_NagraVendorID
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_NagraVendorID;
                   };
                 } TKeyGen_NagraVendorID;
    typedef union  TKeyGen_SwVendorID
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_SwVendorID;
                   };
                 } TKeyGen_SwVendorID;
    typedef union  TKeyGen_VMVendorID
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_VMVendorID;
                   };
                 } TKeyGen_VMVendorID;
    typedef union  TKeyGen_KDFMode
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_KDFMode;
                   };
                 } TKeyGen_KDFMode;
    typedef union  TKeyGen_KeyLadderAlgoSel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_KeyLadderAlgoSel;
                   };
                 } TKeyGen_KeyLadderAlgoSel;
    typedef union  TKeyGen_FlashProtectionKeyOpSel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_FlashProtectionKeyOpSel;
                   };
                 } TKeyGen_FlashProtectionKeyOpSel;
    typedef union  TKeyGen_KeyGenStart
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_KeyGenStart;
                   };
                 } TKeyGen_KeyGenStart;
    typedef union  TKeyGen_KeyGenInputLock
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_KeyGenInputLock;
                   };
                 } TKeyGen_KeyGenInputLock;
    typedef union  TKeyGen_CA_2_VendorID
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_CA_2_VendorID;
                   };
                 } TKeyGen_CA_2_VendorID;
    typedef union  TKeyGen_CA_3_VendorID
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_CA_3_VendorID;
                   };
                 } TKeyGen_CA_3_VendorID;
    typedef union  TKeyGen_CA_4_VendorID
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_CA_4_VendorID;
                   };
                 } TKeyGen_CA_4_VendorID;
    typedef union  TKeyGen_SW_VIDSel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_SW_VIDSel;
                   };
                 } TKeyGen_SW_VIDSel;
    typedef union  TKeyGen_ContentKeySlotSel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_ContentKeySlotSel;
                   };
                 } TKeyGen_ContentKeySlotSel;
    typedef union  TKeyGen_ContentKeyUsage
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_ContentKeyUsage;
                   };
                 } TKeyGen_ContentKeyUsage;
    typedef union  TKeyGen_AKLKeySlotSel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_AKLKeySlotSel;
                   };
                 } TKeyGen_AKLKeySlotSel;
    typedef union  TKeyGen_AKLKeyAck
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_AKLKeyAck;
                   };
                 } TKeyGen_AKLKeyAck;
    typedef union  TKeyGen_DIP_password_valid
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_DIP_password_valid;
                   };
                 } TKeyGen_DIP_password_valid;
    typedef union  TKeyGen_CR_Response_Valid
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_CR_Response_Valid;
                   };
                 } TKeyGen_CR_Response_Valid;
    typedef union  TKeyGen_TEE_password_valid
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_TEE_password_valid;
                   };
                 } TKeyGen_TEE_password_valid;
    typedef union  TKeyGen_TEE_user_password_sel
          { UNSG32 u32[1];
            struct {
            struct w32KeyGen_TEE_user_password_sel;
                   };
                 } TKeyGen_TEE_user_password_sel;

    ///////////////////////////////////////////////////////////
     SIGN32 KeyGen_drvrd(SIE_KeyGen *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 KeyGen_drvwr(SIE_KeyGen *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void KeyGen_reset(SIE_KeyGen *p);
     SIGN32 KeyGen_cmp  (SIE_KeyGen *p, SIE_KeyGen *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define KeyGen_check(p,pie,pfx,hLOG) KeyGen_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define KeyGen_print(p,    pfx,hLOG) KeyGen_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: KeyGen
////////////////////////////////////////////////////////////

//////
/// 
/// $INTERFACE NOCS3_WRAPPER           biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 AKL                  (RW)
///               %unsigned 1  AKLREG                    0x0
///                                    ###
///                                    * AKL registers base only.
///                                    * When OTP field CERT_Enable is 1, both ACPU/SCPU can access this register region; if it is 0, neither of them can access this region
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00004                      (W-)
///     #         # Stuffing bytes...
///               %% 32736
///     @ 0x01000 RNGReg               (P)
///     # 0x01000 RNGReg               
///               $RNGReg              RNGReg            REG          
///     @ 0x01048                      (W-)
///     #         # Stuffing bytes...
///               %% 1472
///     @ 0x01100 ARO                  (P)
///     # 0x01100 ARO                  
///               $ARO                 ARO               REG          
///     @ 0x01128                      (W-)
///     #         # Stuffing bytes...
///               %% 1728
///     @ 0x01200 NOCS_CTRL            (P)
///     # 0x01200 NOCS_CTRL            
///               $NOCS_CTRL           NOCS_CTRL         REG          
///     @ 0x012FC                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x01300 KeyGen               (P)
///     # 0x01300 KeyGen               
///               $KeyGen              KeyGen            REG          
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:    5632B, bits:    2379b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_NOCS3_WRAPPER
#define h_NOCS3_WRAPPER (){}

    #define     RA_NOCS3_WRAPPER_AKL                           0x0000

    #define     BA_NOCS3_WRAPPER_AKL_AKLREG                    0x0000
    #define     B16NOCS3_WRAPPER_AKL_AKLREG                    0x0000
    #define   LSb32NOCS3_WRAPPER_AKL_AKLREG                       0
    #define   LSb16NOCS3_WRAPPER_AKL_AKLREG                       0
    #define       bNOCS3_WRAPPER_AKL_AKLREG                    1
    #define   MSK32NOCS3_WRAPPER_AKL_AKLREG                       0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS3_WRAPPER_RNGReg                        0x1000
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS3_WRAPPER_ARO                           0x1100
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS3_WRAPPER_NOCS_CTRL                     0x1200
    ///////////////////////////////////////////////////////////
    #define     RA_NOCS3_WRAPPER_KeyGen                        0x1300
    ///////////////////////////////////////////////////////////

    typedef struct SIE_NOCS3_WRAPPER {
    ///////////////////////////////////////////////////////////
    #define   GET32NOCS3_WRAPPER_AKL_AKLREG(r32)               _BFGET_(r32, 0, 0)
    #define   SET32NOCS3_WRAPPER_AKL_AKLREG(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16NOCS3_WRAPPER_AKL_AKLREG(r16)               _BFGET_(r16, 0, 0)
    #define   SET16NOCS3_WRAPPER_AKL_AKLREG(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32NOCS3_WRAPPER_AKL                           {\
            UNSG32 uAKL_AKLREG                                 :  1;\
            UNSG32 RSVDx0_b1                                   : 31;\
          }
    union { UNSG32 u32NOCS3_WRAPPER_AKL;
            struct w32NOCS3_WRAPPER_AKL;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx4                                      [4092];
    ///////////////////////////////////////////////////////////
              SIE_RNGReg                                       ie_RNGReg;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1048                                   [184];
    ///////////////////////////////////////////////////////////
              SIE_ARO                                          ie_ARO;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1128                                   [216];
    ///////////////////////////////////////////////////////////
              SIE_NOCS_CTRL                                    ie_NOCS_CTRL;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx12FC                                   [4];
    ///////////////////////////////////////////////////////////
              SIE_KeyGen                                       ie_KeyGen;
    ///////////////////////////////////////////////////////////
    } SIE_NOCS3_WRAPPER;

    typedef union  T32NOCS3_WRAPPER_AKL
          { UNSG32 u32;
            struct w32NOCS3_WRAPPER_AKL;
                 } T32NOCS3_WRAPPER_AKL;
    ///////////////////////////////////////////////////////////

    typedef union  TNOCS3_WRAPPER_AKL
          { UNSG32 u32[1];
            struct {
            struct w32NOCS3_WRAPPER_AKL;
                   };
                 } TNOCS3_WRAPPER_AKL;

    ///////////////////////////////////////////////////////////
     SIGN32 NOCS3_WRAPPER_drvrd(SIE_NOCS3_WRAPPER *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 NOCS3_WRAPPER_drvwr(SIE_NOCS3_WRAPPER *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void NOCS3_WRAPPER_reset(SIE_NOCS3_WRAPPER *p);
     SIGN32 NOCS3_WRAPPER_cmp  (SIE_NOCS3_WRAPPER *p, SIE_NOCS3_WRAPPER *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define NOCS3_WRAPPER_check(p,pie,pfx,hLOG) NOCS3_WRAPPER_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define NOCS3_WRAPPER_print(p,    pfx,hLOG) NOCS3_WRAPPER_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: NOCS3_WRAPPER
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: nocs3.h
////////////////////////////////////////////////////////////

