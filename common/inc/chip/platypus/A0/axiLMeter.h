//////
/// don't edit! auto-generated by docc: axiLMeter.h
////////////////////////////////////////////////////////////
#ifndef axiLMeter_h
#define axiLMeter_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
///
/// $INTERFACE WIDTH32                                  (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///               %unsigned 32 entry                     0x0
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_WIDTH32
#define h_WIDTH32 (){}

    #define     BA_WIDTH32_entry                               0x0000
    #define     B16WIDTH32_entry                               0x0000
    #define   LSb32WIDTH32_entry                                  0
    #define   LSb16WIDTH32_entry                                  0
    #define       bWIDTH32_entry                               32
    #define   MSK32WIDTH32_entry                                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_WIDTH32 {
    ///////////////////////////////////////////////////////////
    #define   GET32WIDTH32_entry(r32)                          _BFGET_(r32,31, 0)
    #define   SET32WIDTH32_entry(r32,v)                        _BFSET_(r32,31, 0,v)

            UNSG32 u_entry                                     : 32;
    ///////////////////////////////////////////////////////////
    } SIE_WIDTH32;

    ///////////////////////////////////////////////////////////
     SIGN32 WIDTH32_drvrd(SIE_WIDTH32 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 WIDTH32_drvwr(SIE_WIDTH32 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void WIDTH32_reset(SIE_WIDTH32 *p);
     SIGN32 WIDTH32_cmp  (SIE_WIDTH32 *p, SIE_WIDTH32 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define WIDTH32_check(p,pie,pfx,hLOG) WIDTH32_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define WIDTH32_print(p,    pfx,hLOG) WIDTH32_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: WIDTH32
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE HISTLUT                                  (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 array
///               $WIDTH32             array             REG      [64]
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     256B, bits:    2048b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_HISTLUT
#define h_HISTLUT (){}

    #define     RA_HISTLUT_array                               0x0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_HISTLUT {
    ///////////////////////////////////////////////////////////
              SIE_WIDTH32                                      ie_array[64];
    ///////////////////////////////////////////////////////////
    } SIE_HISTLUT;

    ///////////////////////////////////////////////////////////
     SIGN32 HISTLUT_drvrd(SIE_HISTLUT *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 HISTLUT_drvwr(SIE_HISTLUT *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void HISTLUT_reset(SIE_HISTLUT *p);
     SIGN32 HISTLUT_cmp  (SIE_HISTLUT *p, SIE_HISTLUT *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define HISTLUT_check(p,pie,pfx,hLOG) HISTLUT_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define HISTLUT_print(p,    pfx,hLOG) HISTLUT_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: HISTLUT
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE axiLMeter                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 rLUT
///               $HISTLUT             rLUT              MEM
///                                    ###
///                                    * Read channel histogram LUT
///                                    ###
///     @ 0x00100                      (P)
///     # 0x00100 wLUT
///               $HISTLUT             wLUT              MEM
///                                    ###
///                                    * write channel histogram LUT
///                                    ###
///     @ 0x00200 CTRL                 (P)
///               %unsigned 1  enable                    0x0
///                                    ###
///                                    * Enable axi latency meter
///                                    ###
///               %unsigned 1  timerSel                  0x0
///                                    ###
///                                    * 1: enable timer. If timer is enabled, the meter will only monitor the traffics in a timing window specified by capTimer
///                                    * 0: The meter will monitor the traffics during enable=1
///                                    ###
///               %unsigned 1  gtclkEn                   0x0
///                                    ###
///                                    * 0: clock gate off
///                                    * 1: clock gate on
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00204 TIMER                (P)
///               %unsigned 32 capTimer                  0x1
///                                    ###
///                                    * Capture timer, define the capture window cycles when timerSel=1
///                                    * 1
///                                    ###
///     @ 0x00208 WBIN                 (P)
///               %unsigned 16 wbin0Hi                   0x10
///                                    ###
///                                    * Upper boundary of bin 0 for write histogram.
///                                    * Bin0 cover the latency from 0 to wbin0Hi
///                                    ###
///               %unsigned 16 wbinSize                  0x10
///                                    ###
///                                    * Write histogram bin size for bin1 to bin62
///                                    * Bin63 covers latency from wbin0Hi+62*wbinSize to 24'hFF_FFFF
///                                    ###
///     @ 0x0020C RBIN                 (P)
///               %unsigned 16 rbin0Hi                   0x10
///                                    ###
///                                    * Upper boundary of bin 0 for read histogram
///                                    * Bin0 cover the latency from 0 to rbin0Hi
///                                    ###
///               %unsigned 16 rbinSize                  0x10
///                                    ###
///                                    * read histogram bin size for bin1 to bin62
///                                    * Bin63 covers latency from rbin0Hi+62*rbinSize to 24'hFF_FFFF
///                                    ###
///     @ 0x00210 STATUS               (R-)
///               %unsigned 1  done
///                                    ###
///                                    * Histogram calculation done
///                                    ###
///               %unsigned 4  rError
///                                    ###
///                                    * Read channel error:
///                                    * {reserve, write ROB full error, read ROB empty error, read ID not found error}
///                                    ###
///               %unsigned 4  wError
///                                    ###
///                                    * Write channel error:
///                                    * {reserve, write ROB full error, read ROB empty error, read ID not found error}
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x00214 RBINOF0              (R-)
///               %unsigned 32 rbinOF
///                                    ###
///                                    * Read agents bin 0~31 overflowed
///                                    ###
///     @ 0x00218 RBINOF1              (R-)
///               %unsigned 32 rbinOF
///                                    ###
///                                    * Read agents bin 32~63 overflowed
///                                    ###
///     @ 0x0021C WBINOF0              (R-)
///               %unsigned 32 wbinOF
///                                    ###
///                                    * Write agents bin 0~31 overflowed
///                                    ###
///     @ 0x00220 WBINOF1              (R-)
///               %unsigned 32 wbinOF
///                                    ###
///                                    * Write agents bin 32~63 overflowed
///                                    ###
///     @ 0x00224 MSTID0               (P)
///               %unsigned 16 ID0                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///               %unsigned 16 ID1                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///     # 0x00228 MSTID01
///               %unsigned 16 ID2                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///               %unsigned 16 ID3                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///     @ 0x0022C MSTID1               (P)
///               %unsigned 16 ID4                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///               %unsigned 16 ID5                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///     # 0x00230 MSTID11
///               %unsigned 16 ID6                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///               %unsigned 16 ID7                       0x0
///                                    ###
///                                    * Read channel master ID to monitor
///                                    ###
///     @ 0x00234 MSTID2               (P)
///               %unsigned 16 ID0                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///               %unsigned 16 ID1                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///     # 0x00238 MSTID21
///               %unsigned 16 ID2                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///               %unsigned 16 ID3                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///     @ 0x0023C MSTID3               (P)
///               %unsigned 16 ID4                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///               %unsigned 16 ID5                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///     # 0x00240 MSTID31
///               %unsigned 16 ID6                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///               %unsigned 16 ID7                       0x0
///                                    ###
///                                    * write channel master ID to monitor
///                                    ###
///     @ 0x00244 MSTMASK0             (P)
///               %unsigned 16 MASK0                     0xFFFF
///                                    ###
///                                    * read channel mstID & MASK0 = read channel ID0 & MASK0, those masters are monitored
///                                    ###
///               %unsigned 16 MASK1                     0xFFFF
///                                    ###
///                                    * read channel mstID & MASK1 = read channel ID1 & MASK1, those masters are monitored
///                                    ###
///     # 0x00248 MSTMASK01
///               %unsigned 16 MASK2                     0xFFFF
///                                    ###
///                                    * read channel mstID & MASK2 = read channel ID2 & MASK2, those masters are monitored
///                                    ###
///               %unsigned 16 MASK3                     0xFFFF
///                                    ###
///                                    * read channel mstID & MASK3 = read channel ID3 & MASK3, those masters are monitored
///                                    ###
///     @ 0x0024C MSTMASK1             (P)
///               %unsigned 16 MASK4                     0xFFFF
///                                    ###
///                                    * read channel mstID & MASK4 = read channel ID4 & MASK4, those masters are monitored
///                                    ###
///               %unsigned 16 MASK5                     0xFFFF
///                                    ###
///                                    * mstID & MASK5 = ID5 & MASK5, those masters are monitored
///                                    ###
///     # 0x00250 MSTMASK11
///               %unsigned 16 MASK6                     0xFFFF
///                                    ###
///                                    * read channel mstID & MASK6 = read channel ID6 & MASK6, those masters are monitored
///                                    ###
///               %unsigned 16 MASK7                     0xFFFF
///                                    ###
///                                    * read channel mstID & MASK7 = read channel ID7 & MASK7, those masters are monitored
///                                    ###
///     @ 0x00254 MSTMASK2             (P)
///               %unsigned 16 MASK0                     0xFFFF
///                                    ###
///                                    * Write channel mstID & MASK0 = write ID0 & MASK0, those masters are monitored
///                                    ###
///               %unsigned 16 MASK1                     0xFFFF
///                                    ###
///                                    * Write channel mstID & MASK1 = write channel ID1 & MASK1, those masters are monitored
///                                    ###
///     # 0x00258 MSTMASK21
///               %unsigned 16 MASK2                     0xFFFF
///                                    ###
///                                    * write channel mstID & MASK2 = write channel ID2 & MASK2, those masters are monitored
///                                    ###
///               %unsigned 16 MASK3                     0xFFFF
///                                    ###
///                                    * write channel mstID & MASK3 = write channel ID3 & MASK3, those masters are monitored
///                                    ###
///     @ 0x0025C MSTMASK3             (P)
///               %unsigned 16 MASK4                     0xFFFF
///                                    ###
///                                    * write channel mstID & MASK4 = write channel ID4 & MASK4, those masters are monitored
///                                    ###
///               %unsigned 16 MASK5                     0xFFFF
///                                    ###
///                                    * write channel mstID & MASK5 = write channel ID5 & MASK5, those masters are monitored
///                                    ###
///     # 0x00260 MSTMASK31
///               %unsigned 16 MASK6                     0xFFFF
///                                    ###
///                                    * write channel mstID & MASK6 = write channel ID6 & MASK6, those masters are monitored
///                                    ###
///               %unsigned 16 MASK7                     0xFFFF
///                                    ###
///                                    * write channel mstID & MASK7 = write channel ID7 & MASK7, those masters are monitored
///                                    ###
///     @ 0x00264 MSTEN                (P)
///               %unsigned 16 mstEn                     0x0
///                                    ###
///                                    * [7:0]Read masters enable to be monitor
///                                    * [15:8]write masters enable to be monitor
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00268                      (W-)
///     #         # Stuffing bytes...
///               %% 1216
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     768B, bits:     828b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_axiLMeter
#define h_axiLMeter (){}

    #define     RA_axiLMeter_rLUT                              0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_wLUT                              0x0100
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_CTRL                              0x0200

    #define     BA_axiLMeter_CTRL_enable                       0x0200
    #define     B16axiLMeter_CTRL_enable                       0x0200
    #define   LSb32axiLMeter_CTRL_enable                          0
    #define   LSb16axiLMeter_CTRL_enable                          0
    #define       baxiLMeter_CTRL_enable                       1
    #define   MSK32axiLMeter_CTRL_enable                          0x00000001

    #define     BA_axiLMeter_CTRL_timerSel                     0x0200
    #define     B16axiLMeter_CTRL_timerSel                     0x0200
    #define   LSb32axiLMeter_CTRL_timerSel                        1
    #define   LSb16axiLMeter_CTRL_timerSel                        1
    #define       baxiLMeter_CTRL_timerSel                     1
    #define   MSK32axiLMeter_CTRL_timerSel                        0x00000002

    #define     BA_axiLMeter_CTRL_gtclkEn                      0x0200
    #define     B16axiLMeter_CTRL_gtclkEn                      0x0200
    #define   LSb32axiLMeter_CTRL_gtclkEn                         2
    #define   LSb16axiLMeter_CTRL_gtclkEn                         2
    #define       baxiLMeter_CTRL_gtclkEn                      1
    #define   MSK32axiLMeter_CTRL_gtclkEn                         0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_TIMER                             0x0204

    #define     BA_axiLMeter_TIMER_capTimer                    0x0204
    #define     B16axiLMeter_TIMER_capTimer                    0x0204
    #define   LSb32axiLMeter_TIMER_capTimer                       0
    #define   LSb16axiLMeter_TIMER_capTimer                       0
    #define       baxiLMeter_TIMER_capTimer                    32
    #define   MSK32axiLMeter_TIMER_capTimer                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_WBIN                              0x0208

    #define     BA_axiLMeter_WBIN_wbin0Hi                      0x0208
    #define     B16axiLMeter_WBIN_wbin0Hi                      0x0208
    #define   LSb32axiLMeter_WBIN_wbin0Hi                         0
    #define   LSb16axiLMeter_WBIN_wbin0Hi                         0
    #define       baxiLMeter_WBIN_wbin0Hi                      16
    #define   MSK32axiLMeter_WBIN_wbin0Hi                         0x0000FFFF

    #define     BA_axiLMeter_WBIN_wbinSize                     0x020A
    #define     B16axiLMeter_WBIN_wbinSize                     0x020A
    #define   LSb32axiLMeter_WBIN_wbinSize                        16
    #define   LSb16axiLMeter_WBIN_wbinSize                        0
    #define       baxiLMeter_WBIN_wbinSize                     16
    #define   MSK32axiLMeter_WBIN_wbinSize                        0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_RBIN                              0x020C

    #define     BA_axiLMeter_RBIN_rbin0Hi                      0x020C
    #define     B16axiLMeter_RBIN_rbin0Hi                      0x020C
    #define   LSb32axiLMeter_RBIN_rbin0Hi                         0
    #define   LSb16axiLMeter_RBIN_rbin0Hi                         0
    #define       baxiLMeter_RBIN_rbin0Hi                      16
    #define   MSK32axiLMeter_RBIN_rbin0Hi                         0x0000FFFF

    #define     BA_axiLMeter_RBIN_rbinSize                     0x020E
    #define     B16axiLMeter_RBIN_rbinSize                     0x020E
    #define   LSb32axiLMeter_RBIN_rbinSize                        16
    #define   LSb16axiLMeter_RBIN_rbinSize                        0
    #define       baxiLMeter_RBIN_rbinSize                     16
    #define   MSK32axiLMeter_RBIN_rbinSize                        0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_STATUS                            0x0210

    #define     BA_axiLMeter_STATUS_done                       0x0210
    #define     B16axiLMeter_STATUS_done                       0x0210
    #define   LSb32axiLMeter_STATUS_done                          0
    #define   LSb16axiLMeter_STATUS_done                          0
    #define       baxiLMeter_STATUS_done                       1
    #define   MSK32axiLMeter_STATUS_done                          0x00000001

    #define     BA_axiLMeter_STATUS_rError                     0x0210
    #define     B16axiLMeter_STATUS_rError                     0x0210
    #define   LSb32axiLMeter_STATUS_rError                        1
    #define   LSb16axiLMeter_STATUS_rError                        1
    #define       baxiLMeter_STATUS_rError                     4
    #define   MSK32axiLMeter_STATUS_rError                        0x0000001E

    #define     BA_axiLMeter_STATUS_wError                     0x0210
    #define     B16axiLMeter_STATUS_wError                     0x0210
    #define   LSb32axiLMeter_STATUS_wError                        5
    #define   LSb16axiLMeter_STATUS_wError                        5
    #define       baxiLMeter_STATUS_wError                     4
    #define   MSK32axiLMeter_STATUS_wError                        0x000001E0
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_RBINOF0                           0x0214

    #define     BA_axiLMeter_RBINOF0_rbinOF                    0x0214
    #define     B16axiLMeter_RBINOF0_rbinOF                    0x0214
    #define   LSb32axiLMeter_RBINOF0_rbinOF                       0
    #define   LSb16axiLMeter_RBINOF0_rbinOF                       0
    #define       baxiLMeter_RBINOF0_rbinOF                    32
    #define   MSK32axiLMeter_RBINOF0_rbinOF                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_RBINOF1                           0x0218

    #define     BA_axiLMeter_RBINOF1_rbinOF                    0x0218
    #define     B16axiLMeter_RBINOF1_rbinOF                    0x0218
    #define   LSb32axiLMeter_RBINOF1_rbinOF                       0
    #define   LSb16axiLMeter_RBINOF1_rbinOF                       0
    #define       baxiLMeter_RBINOF1_rbinOF                    32
    #define   MSK32axiLMeter_RBINOF1_rbinOF                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_WBINOF0                           0x021C

    #define     BA_axiLMeter_WBINOF0_wbinOF                    0x021C
    #define     B16axiLMeter_WBINOF0_wbinOF                    0x021C
    #define   LSb32axiLMeter_WBINOF0_wbinOF                       0
    #define   LSb16axiLMeter_WBINOF0_wbinOF                       0
    #define       baxiLMeter_WBINOF0_wbinOF                    32
    #define   MSK32axiLMeter_WBINOF0_wbinOF                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_WBINOF1                           0x0220

    #define     BA_axiLMeter_WBINOF1_wbinOF                    0x0220
    #define     B16axiLMeter_WBINOF1_wbinOF                    0x0220
    #define   LSb32axiLMeter_WBINOF1_wbinOF                       0
    #define   LSb16axiLMeter_WBINOF1_wbinOF                       0
    #define       baxiLMeter_WBINOF1_wbinOF                    32
    #define   MSK32axiLMeter_WBINOF1_wbinOF                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTID0                            0x0224

    #define     BA_axiLMeter_MSTID0_ID0                        0x0224
    #define     B16axiLMeter_MSTID0_ID0                        0x0224
    #define   LSb32axiLMeter_MSTID0_ID0                           0
    #define   LSb16axiLMeter_MSTID0_ID0                           0
    #define       baxiLMeter_MSTID0_ID0                        16
    #define   MSK32axiLMeter_MSTID0_ID0                           0x0000FFFF

    #define     BA_axiLMeter_MSTID0_ID1                        0x0226
    #define     B16axiLMeter_MSTID0_ID1                        0x0226
    #define   LSb32axiLMeter_MSTID0_ID1                           16
    #define   LSb16axiLMeter_MSTID0_ID1                           0
    #define       baxiLMeter_MSTID0_ID1                        16
    #define   MSK32axiLMeter_MSTID0_ID1                           0xFFFF0000

    #define     RA_axiLMeter_MSTID01                           0x0228

    #define     BA_axiLMeter_MSTID0_ID2                        0x0228
    #define     B16axiLMeter_MSTID0_ID2                        0x0228
    #define   LSb32axiLMeter_MSTID0_ID2                           0
    #define   LSb16axiLMeter_MSTID0_ID2                           0
    #define       baxiLMeter_MSTID0_ID2                        16
    #define   MSK32axiLMeter_MSTID0_ID2                           0x0000FFFF

    #define     BA_axiLMeter_MSTID0_ID3                        0x022A
    #define     B16axiLMeter_MSTID0_ID3                        0x022A
    #define   LSb32axiLMeter_MSTID0_ID3                           16
    #define   LSb16axiLMeter_MSTID0_ID3                           0
    #define       baxiLMeter_MSTID0_ID3                        16
    #define   MSK32axiLMeter_MSTID0_ID3                           0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTID1                            0x022C

    #define     BA_axiLMeter_MSTID1_ID4                        0x022C
    #define     B16axiLMeter_MSTID1_ID4                        0x022C
    #define   LSb32axiLMeter_MSTID1_ID4                           0
    #define   LSb16axiLMeter_MSTID1_ID4                           0
    #define       baxiLMeter_MSTID1_ID4                        16
    #define   MSK32axiLMeter_MSTID1_ID4                           0x0000FFFF

    #define     BA_axiLMeter_MSTID1_ID5                        0x022E
    #define     B16axiLMeter_MSTID1_ID5                        0x022E
    #define   LSb32axiLMeter_MSTID1_ID5                           16
    #define   LSb16axiLMeter_MSTID1_ID5                           0
    #define       baxiLMeter_MSTID1_ID5                        16
    #define   MSK32axiLMeter_MSTID1_ID5                           0xFFFF0000

    #define     RA_axiLMeter_MSTID11                           0x0230

    #define     BA_axiLMeter_MSTID1_ID6                        0x0230
    #define     B16axiLMeter_MSTID1_ID6                        0x0230
    #define   LSb32axiLMeter_MSTID1_ID6                           0
    #define   LSb16axiLMeter_MSTID1_ID6                           0
    #define       baxiLMeter_MSTID1_ID6                        16
    #define   MSK32axiLMeter_MSTID1_ID6                           0x0000FFFF

    #define     BA_axiLMeter_MSTID1_ID7                        0x0232
    #define     B16axiLMeter_MSTID1_ID7                        0x0232
    #define   LSb32axiLMeter_MSTID1_ID7                           16
    #define   LSb16axiLMeter_MSTID1_ID7                           0
    #define       baxiLMeter_MSTID1_ID7                        16
    #define   MSK32axiLMeter_MSTID1_ID7                           0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTID2                            0x0234

    #define     BA_axiLMeter_MSTID2_ID0                        0x0234
    #define     B16axiLMeter_MSTID2_ID0                        0x0234
    #define   LSb32axiLMeter_MSTID2_ID0                           0
    #define   LSb16axiLMeter_MSTID2_ID0                           0
    #define       baxiLMeter_MSTID2_ID0                        16
    #define   MSK32axiLMeter_MSTID2_ID0                           0x0000FFFF

    #define     BA_axiLMeter_MSTID2_ID1                        0x0236
    #define     B16axiLMeter_MSTID2_ID1                        0x0236
    #define   LSb32axiLMeter_MSTID2_ID1                           16
    #define   LSb16axiLMeter_MSTID2_ID1                           0
    #define       baxiLMeter_MSTID2_ID1                        16
    #define   MSK32axiLMeter_MSTID2_ID1                           0xFFFF0000

    #define     RA_axiLMeter_MSTID21                           0x0238

    #define     BA_axiLMeter_MSTID2_ID2                        0x0238
    #define     B16axiLMeter_MSTID2_ID2                        0x0238
    #define   LSb32axiLMeter_MSTID2_ID2                           0
    #define   LSb16axiLMeter_MSTID2_ID2                           0
    #define       baxiLMeter_MSTID2_ID2                        16
    #define   MSK32axiLMeter_MSTID2_ID2                           0x0000FFFF

    #define     BA_axiLMeter_MSTID2_ID3                        0x023A
    #define     B16axiLMeter_MSTID2_ID3                        0x023A
    #define   LSb32axiLMeter_MSTID2_ID3                           16
    #define   LSb16axiLMeter_MSTID2_ID3                           0
    #define       baxiLMeter_MSTID2_ID3                        16
    #define   MSK32axiLMeter_MSTID2_ID3                           0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTID3                            0x023C

    #define     BA_axiLMeter_MSTID3_ID4                        0x023C
    #define     B16axiLMeter_MSTID3_ID4                        0x023C
    #define   LSb32axiLMeter_MSTID3_ID4                           0
    #define   LSb16axiLMeter_MSTID3_ID4                           0
    #define       baxiLMeter_MSTID3_ID4                        16
    #define   MSK32axiLMeter_MSTID3_ID4                           0x0000FFFF

    #define     BA_axiLMeter_MSTID3_ID5                        0x023E
    #define     B16axiLMeter_MSTID3_ID5                        0x023E
    #define   LSb32axiLMeter_MSTID3_ID5                           16
    #define   LSb16axiLMeter_MSTID3_ID5                           0
    #define       baxiLMeter_MSTID3_ID5                        16
    #define   MSK32axiLMeter_MSTID3_ID5                           0xFFFF0000

    #define     RA_axiLMeter_MSTID31                           0x0240

    #define     BA_axiLMeter_MSTID3_ID6                        0x0240
    #define     B16axiLMeter_MSTID3_ID6                        0x0240
    #define   LSb32axiLMeter_MSTID3_ID6                           0
    #define   LSb16axiLMeter_MSTID3_ID6                           0
    #define       baxiLMeter_MSTID3_ID6                        16
    #define   MSK32axiLMeter_MSTID3_ID6                           0x0000FFFF

    #define     BA_axiLMeter_MSTID3_ID7                        0x0242
    #define     B16axiLMeter_MSTID3_ID7                        0x0242
    #define   LSb32axiLMeter_MSTID3_ID7                           16
    #define   LSb16axiLMeter_MSTID3_ID7                           0
    #define       baxiLMeter_MSTID3_ID7                        16
    #define   MSK32axiLMeter_MSTID3_ID7                           0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTMASK0                          0x0244

    #define     BA_axiLMeter_MSTMASK0_MASK0                    0x0244
    #define     B16axiLMeter_MSTMASK0_MASK0                    0x0244
    #define   LSb32axiLMeter_MSTMASK0_MASK0                       0
    #define   LSb16axiLMeter_MSTMASK0_MASK0                       0
    #define       baxiLMeter_MSTMASK0_MASK0                    16
    #define   MSK32axiLMeter_MSTMASK0_MASK0                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK0_MASK1                    0x0246
    #define     B16axiLMeter_MSTMASK0_MASK1                    0x0246
    #define   LSb32axiLMeter_MSTMASK0_MASK1                       16
    #define   LSb16axiLMeter_MSTMASK0_MASK1                       0
    #define       baxiLMeter_MSTMASK0_MASK1                    16
    #define   MSK32axiLMeter_MSTMASK0_MASK1                       0xFFFF0000

    #define     RA_axiLMeter_MSTMASK01                         0x0248

    #define     BA_axiLMeter_MSTMASK0_MASK2                    0x0248
    #define     B16axiLMeter_MSTMASK0_MASK2                    0x0248
    #define   LSb32axiLMeter_MSTMASK0_MASK2                       0
    #define   LSb16axiLMeter_MSTMASK0_MASK2                       0
    #define       baxiLMeter_MSTMASK0_MASK2                    16
    #define   MSK32axiLMeter_MSTMASK0_MASK2                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK0_MASK3                    0x024A
    #define     B16axiLMeter_MSTMASK0_MASK3                    0x024A
    #define   LSb32axiLMeter_MSTMASK0_MASK3                       16
    #define   LSb16axiLMeter_MSTMASK0_MASK3                       0
    #define       baxiLMeter_MSTMASK0_MASK3                    16
    #define   MSK32axiLMeter_MSTMASK0_MASK3                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTMASK1                          0x024C

    #define     BA_axiLMeter_MSTMASK1_MASK4                    0x024C
    #define     B16axiLMeter_MSTMASK1_MASK4                    0x024C
    #define   LSb32axiLMeter_MSTMASK1_MASK4                       0
    #define   LSb16axiLMeter_MSTMASK1_MASK4                       0
    #define       baxiLMeter_MSTMASK1_MASK4                    16
    #define   MSK32axiLMeter_MSTMASK1_MASK4                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK1_MASK5                    0x024E
    #define     B16axiLMeter_MSTMASK1_MASK5                    0x024E
    #define   LSb32axiLMeter_MSTMASK1_MASK5                       16
    #define   LSb16axiLMeter_MSTMASK1_MASK5                       0
    #define       baxiLMeter_MSTMASK1_MASK5                    16
    #define   MSK32axiLMeter_MSTMASK1_MASK5                       0xFFFF0000

    #define     RA_axiLMeter_MSTMASK11                         0x0250

    #define     BA_axiLMeter_MSTMASK1_MASK6                    0x0250
    #define     B16axiLMeter_MSTMASK1_MASK6                    0x0250
    #define   LSb32axiLMeter_MSTMASK1_MASK6                       0
    #define   LSb16axiLMeter_MSTMASK1_MASK6                       0
    #define       baxiLMeter_MSTMASK1_MASK6                    16
    #define   MSK32axiLMeter_MSTMASK1_MASK6                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK1_MASK7                    0x0252
    #define     B16axiLMeter_MSTMASK1_MASK7                    0x0252
    #define   LSb32axiLMeter_MSTMASK1_MASK7                       16
    #define   LSb16axiLMeter_MSTMASK1_MASK7                       0
    #define       baxiLMeter_MSTMASK1_MASK7                    16
    #define   MSK32axiLMeter_MSTMASK1_MASK7                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTMASK2                          0x0254

    #define     BA_axiLMeter_MSTMASK2_MASK0                    0x0254
    #define     B16axiLMeter_MSTMASK2_MASK0                    0x0254
    #define   LSb32axiLMeter_MSTMASK2_MASK0                       0
    #define   LSb16axiLMeter_MSTMASK2_MASK0                       0
    #define       baxiLMeter_MSTMASK2_MASK0                    16
    #define   MSK32axiLMeter_MSTMASK2_MASK0                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK2_MASK1                    0x0256
    #define     B16axiLMeter_MSTMASK2_MASK1                    0x0256
    #define   LSb32axiLMeter_MSTMASK2_MASK1                       16
    #define   LSb16axiLMeter_MSTMASK2_MASK1                       0
    #define       baxiLMeter_MSTMASK2_MASK1                    16
    #define   MSK32axiLMeter_MSTMASK2_MASK1                       0xFFFF0000

    #define     RA_axiLMeter_MSTMASK21                         0x0258

    #define     BA_axiLMeter_MSTMASK2_MASK2                    0x0258
    #define     B16axiLMeter_MSTMASK2_MASK2                    0x0258
    #define   LSb32axiLMeter_MSTMASK2_MASK2                       0
    #define   LSb16axiLMeter_MSTMASK2_MASK2                       0
    #define       baxiLMeter_MSTMASK2_MASK2                    16
    #define   MSK32axiLMeter_MSTMASK2_MASK2                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK2_MASK3                    0x025A
    #define     B16axiLMeter_MSTMASK2_MASK3                    0x025A
    #define   LSb32axiLMeter_MSTMASK2_MASK3                       16
    #define   LSb16axiLMeter_MSTMASK2_MASK3                       0
    #define       baxiLMeter_MSTMASK2_MASK3                    16
    #define   MSK32axiLMeter_MSTMASK2_MASK3                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTMASK3                          0x025C

    #define     BA_axiLMeter_MSTMASK3_MASK4                    0x025C
    #define     B16axiLMeter_MSTMASK3_MASK4                    0x025C
    #define   LSb32axiLMeter_MSTMASK3_MASK4                       0
    #define   LSb16axiLMeter_MSTMASK3_MASK4                       0
    #define       baxiLMeter_MSTMASK3_MASK4                    16
    #define   MSK32axiLMeter_MSTMASK3_MASK4                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK3_MASK5                    0x025E
    #define     B16axiLMeter_MSTMASK3_MASK5                    0x025E
    #define   LSb32axiLMeter_MSTMASK3_MASK5                       16
    #define   LSb16axiLMeter_MSTMASK3_MASK5                       0
    #define       baxiLMeter_MSTMASK3_MASK5                    16
    #define   MSK32axiLMeter_MSTMASK3_MASK5                       0xFFFF0000

    #define     RA_axiLMeter_MSTMASK31                         0x0260

    #define     BA_axiLMeter_MSTMASK3_MASK6                    0x0260
    #define     B16axiLMeter_MSTMASK3_MASK6                    0x0260
    #define   LSb32axiLMeter_MSTMASK3_MASK6                       0
    #define   LSb16axiLMeter_MSTMASK3_MASK6                       0
    #define       baxiLMeter_MSTMASK3_MASK6                    16
    #define   MSK32axiLMeter_MSTMASK3_MASK6                       0x0000FFFF

    #define     BA_axiLMeter_MSTMASK3_MASK7                    0x0262
    #define     B16axiLMeter_MSTMASK3_MASK7                    0x0262
    #define   LSb32axiLMeter_MSTMASK3_MASK7                       16
    #define   LSb16axiLMeter_MSTMASK3_MASK7                       0
    #define       baxiLMeter_MSTMASK3_MASK7                    16
    #define   MSK32axiLMeter_MSTMASK3_MASK7                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_axiLMeter_MSTEN                             0x0264

    #define     BA_axiLMeter_MSTEN_mstEn                       0x0264
    #define     B16axiLMeter_MSTEN_mstEn                       0x0264
    #define   LSb32axiLMeter_MSTEN_mstEn                          0
    #define   LSb16axiLMeter_MSTEN_mstEn                          0
    #define       baxiLMeter_MSTEN_mstEn                       16
    #define   MSK32axiLMeter_MSTEN_mstEn                          0x0000FFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_axiLMeter {
    ///////////////////////////////////////////////////////////
              SIE_HISTLUT                                      ie_rLUT;
    ///////////////////////////////////////////////////////////
              SIE_HISTLUT                                      ie_wLUT;
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_CTRL_enable(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32axiLMeter_CTRL_enable(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16axiLMeter_CTRL_enable(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16axiLMeter_CTRL_enable(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32axiLMeter_CTRL_timerSel(r32)                _BFGET_(r32, 1, 1)
    #define   SET32axiLMeter_CTRL_timerSel(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16axiLMeter_CTRL_timerSel(r16)                _BFGET_(r16, 1, 1)
    #define   SET16axiLMeter_CTRL_timerSel(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32axiLMeter_CTRL_gtclkEn(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32axiLMeter_CTRL_gtclkEn(r32,v)               _BFSET_(r32, 2, 2,v)
    #define   GET16axiLMeter_CTRL_gtclkEn(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16axiLMeter_CTRL_gtclkEn(r16,v)               _BFSET_(r16, 2, 2,v)

    #define     w32axiLMeter_CTRL                              {\
            UNSG32 uCTRL_enable                                :  1;\
            UNSG32 uCTRL_timerSel                              :  1;\
            UNSG32 uCTRL_gtclkEn                               :  1;\
            UNSG32 RSVDx200_b3                                 : 29;\
          }
    union { UNSG32 u32axiLMeter_CTRL;
            struct w32axiLMeter_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_TIMER_capTimer(r32)               _BFGET_(r32,31, 0)
    #define   SET32axiLMeter_TIMER_capTimer(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32axiLMeter_TIMER                             {\
            UNSG32 uTIMER_capTimer                             : 32;\
          }
    union { UNSG32 u32axiLMeter_TIMER;
            struct w32axiLMeter_TIMER;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_WBIN_wbin0Hi(r32)                 _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_WBIN_wbin0Hi(r32,v)               _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_WBIN_wbin0Hi(r16)                 _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_WBIN_wbin0Hi(r16,v)               _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_WBIN_wbinSize(r32)                _BFGET_(r32,31,16)
    #define   SET32axiLMeter_WBIN_wbinSize(r32,v)              _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_WBIN_wbinSize(r16)                _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_WBIN_wbinSize(r16,v)              _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_WBIN                              {\
            UNSG32 uWBIN_wbin0Hi                               : 16;\
            UNSG32 uWBIN_wbinSize                              : 16;\
          }
    union { UNSG32 u32axiLMeter_WBIN;
            struct w32axiLMeter_WBIN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_RBIN_rbin0Hi(r32)                 _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_RBIN_rbin0Hi(r32,v)               _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_RBIN_rbin0Hi(r16)                 _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_RBIN_rbin0Hi(r16,v)               _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_RBIN_rbinSize(r32)                _BFGET_(r32,31,16)
    #define   SET32axiLMeter_RBIN_rbinSize(r32,v)              _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_RBIN_rbinSize(r16)                _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_RBIN_rbinSize(r16,v)              _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_RBIN                              {\
            UNSG32 uRBIN_rbin0Hi                               : 16;\
            UNSG32 uRBIN_rbinSize                              : 16;\
          }
    union { UNSG32 u32axiLMeter_RBIN;
            struct w32axiLMeter_RBIN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_STATUS_done(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32axiLMeter_STATUS_done(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16axiLMeter_STATUS_done(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16axiLMeter_STATUS_done(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32axiLMeter_STATUS_rError(r32)                _BFGET_(r32, 4, 1)
    #define   SET32axiLMeter_STATUS_rError(r32,v)              _BFSET_(r32, 4, 1,v)
    #define   GET16axiLMeter_STATUS_rError(r16)                _BFGET_(r16, 4, 1)
    #define   SET16axiLMeter_STATUS_rError(r16,v)              _BFSET_(r16, 4, 1,v)

    #define   GET32axiLMeter_STATUS_wError(r32)                _BFGET_(r32, 8, 5)
    #define   SET32axiLMeter_STATUS_wError(r32,v)              _BFSET_(r32, 8, 5,v)
    #define   GET16axiLMeter_STATUS_wError(r16)                _BFGET_(r16, 8, 5)
    #define   SET16axiLMeter_STATUS_wError(r16,v)              _BFSET_(r16, 8, 5,v)

    #define     w32axiLMeter_STATUS                            {\
            UNSG32 uSTATUS_done                                :  1;\
            UNSG32 uSTATUS_rError                              :  4;\
            UNSG32 uSTATUS_wError                              :  4;\
            UNSG32 RSVDx210_b9                                 : 23;\
          }
    union { UNSG32 u32axiLMeter_STATUS;
            struct w32axiLMeter_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_RBINOF0_rbinOF(r32)               _BFGET_(r32,31, 0)
    #define   SET32axiLMeter_RBINOF0_rbinOF(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32axiLMeter_RBINOF0                           {\
            UNSG32 uRBINOF0_rbinOF                             : 32;\
          }
    union { UNSG32 u32axiLMeter_RBINOF0;
            struct w32axiLMeter_RBINOF0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_RBINOF1_rbinOF(r32)               _BFGET_(r32,31, 0)
    #define   SET32axiLMeter_RBINOF1_rbinOF(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32axiLMeter_RBINOF1                           {\
            UNSG32 uRBINOF1_rbinOF                             : 32;\
          }
    union { UNSG32 u32axiLMeter_RBINOF1;
            struct w32axiLMeter_RBINOF1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_WBINOF0_wbinOF(r32)               _BFGET_(r32,31, 0)
    #define   SET32axiLMeter_WBINOF0_wbinOF(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32axiLMeter_WBINOF0                           {\
            UNSG32 uWBINOF0_wbinOF                             : 32;\
          }
    union { UNSG32 u32axiLMeter_WBINOF0;
            struct w32axiLMeter_WBINOF0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_WBINOF1_wbinOF(r32)               _BFGET_(r32,31, 0)
    #define   SET32axiLMeter_WBINOF1_wbinOF(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32axiLMeter_WBINOF1                           {\
            UNSG32 uWBINOF1_wbinOF                             : 32;\
          }
    union { UNSG32 u32axiLMeter_WBINOF1;
            struct w32axiLMeter_WBINOF1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTID0_ID0(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID0_ID0(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID0_ID0(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID0_ID0(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID0_ID1(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID0_ID1(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID0_ID1(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID0_ID1(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID0                            {\
            UNSG32 uMSTID0_ID0                                 : 16;\
            UNSG32 uMSTID0_ID1                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID0;
            struct w32axiLMeter_MSTID0;
          };
    #define   GET32axiLMeter_MSTID0_ID2(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID0_ID2(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID0_ID2(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID0_ID2(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID0_ID3(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID0_ID3(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID0_ID3(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID0_ID3(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID01                           {\
            UNSG32 uMSTID0_ID2                                 : 16;\
            UNSG32 uMSTID0_ID3                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID01;
            struct w32axiLMeter_MSTID01;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTID1_ID4(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID1_ID4(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID1_ID4(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID1_ID4(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID1_ID5(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID1_ID5(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID1_ID5(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID1_ID5(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID1                            {\
            UNSG32 uMSTID1_ID4                                 : 16;\
            UNSG32 uMSTID1_ID5                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID1;
            struct w32axiLMeter_MSTID1;
          };
    #define   GET32axiLMeter_MSTID1_ID6(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID1_ID6(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID1_ID6(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID1_ID6(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID1_ID7(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID1_ID7(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID1_ID7(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID1_ID7(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID11                           {\
            UNSG32 uMSTID1_ID6                                 : 16;\
            UNSG32 uMSTID1_ID7                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID11;
            struct w32axiLMeter_MSTID11;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTID2_ID0(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID2_ID0(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID2_ID0(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID2_ID0(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID2_ID1(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID2_ID1(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID2_ID1(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID2_ID1(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID2                            {\
            UNSG32 uMSTID2_ID0                                 : 16;\
            UNSG32 uMSTID2_ID1                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID2;
            struct w32axiLMeter_MSTID2;
          };
    #define   GET32axiLMeter_MSTID2_ID2(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID2_ID2(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID2_ID2(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID2_ID2(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID2_ID3(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID2_ID3(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID2_ID3(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID2_ID3(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID21                           {\
            UNSG32 uMSTID2_ID2                                 : 16;\
            UNSG32 uMSTID2_ID3                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID21;
            struct w32axiLMeter_MSTID21;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTID3_ID4(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID3_ID4(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID3_ID4(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID3_ID4(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID3_ID5(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID3_ID5(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID3_ID5(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID3_ID5(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID3                            {\
            UNSG32 uMSTID3_ID4                                 : 16;\
            UNSG32 uMSTID3_ID5                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID3;
            struct w32axiLMeter_MSTID3;
          };
    #define   GET32axiLMeter_MSTID3_ID6(r32)                   _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTID3_ID6(r32,v)                 _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTID3_ID6(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID3_ID6(r16,v)                 _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTID3_ID7(r32)                   _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTID3_ID7(r32,v)                 _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTID3_ID7(r16)                   _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTID3_ID7(r16,v)                 _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTID31                           {\
            UNSG32 uMSTID3_ID6                                 : 16;\
            UNSG32 uMSTID3_ID7                                 : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTID31;
            struct w32axiLMeter_MSTID31;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTMASK0_MASK0(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK0_MASK0(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK0_MASK0(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK0_MASK0(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK0_MASK1(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK0_MASK1(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK0_MASK1(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK0_MASK1(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK0                          {\
            UNSG32 uMSTMASK0_MASK0                             : 16;\
            UNSG32 uMSTMASK0_MASK1                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK0;
            struct w32axiLMeter_MSTMASK0;
          };
    #define   GET32axiLMeter_MSTMASK0_MASK2(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK0_MASK2(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK0_MASK2(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK0_MASK2(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK0_MASK3(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK0_MASK3(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK0_MASK3(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK0_MASK3(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK01                         {\
            UNSG32 uMSTMASK0_MASK2                             : 16;\
            UNSG32 uMSTMASK0_MASK3                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK01;
            struct w32axiLMeter_MSTMASK01;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTMASK1_MASK4(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK1_MASK4(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK1_MASK4(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK1_MASK4(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK1_MASK5(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK1_MASK5(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK1_MASK5(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK1_MASK5(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK1                          {\
            UNSG32 uMSTMASK1_MASK4                             : 16;\
            UNSG32 uMSTMASK1_MASK5                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK1;
            struct w32axiLMeter_MSTMASK1;
          };
    #define   GET32axiLMeter_MSTMASK1_MASK6(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK1_MASK6(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK1_MASK6(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK1_MASK6(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK1_MASK7(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK1_MASK7(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK1_MASK7(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK1_MASK7(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK11                         {\
            UNSG32 uMSTMASK1_MASK6                             : 16;\
            UNSG32 uMSTMASK1_MASK7                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK11;
            struct w32axiLMeter_MSTMASK11;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTMASK2_MASK0(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK2_MASK0(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK2_MASK0(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK2_MASK0(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK2_MASK1(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK2_MASK1(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK2_MASK1(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK2_MASK1(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK2                          {\
            UNSG32 uMSTMASK2_MASK0                             : 16;\
            UNSG32 uMSTMASK2_MASK1                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK2;
            struct w32axiLMeter_MSTMASK2;
          };
    #define   GET32axiLMeter_MSTMASK2_MASK2(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK2_MASK2(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK2_MASK2(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK2_MASK2(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK2_MASK3(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK2_MASK3(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK2_MASK3(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK2_MASK3(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK21                         {\
            UNSG32 uMSTMASK2_MASK2                             : 16;\
            UNSG32 uMSTMASK2_MASK3                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK21;
            struct w32axiLMeter_MSTMASK21;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTMASK3_MASK4(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK3_MASK4(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK3_MASK4(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK3_MASK4(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK3_MASK5(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK3_MASK5(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK3_MASK5(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK3_MASK5(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK3                          {\
            UNSG32 uMSTMASK3_MASK4                             : 16;\
            UNSG32 uMSTMASK3_MASK5                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK3;
            struct w32axiLMeter_MSTMASK3;
          };
    #define   GET32axiLMeter_MSTMASK3_MASK6(r32)               _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTMASK3_MASK6(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTMASK3_MASK6(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK3_MASK6(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32axiLMeter_MSTMASK3_MASK7(r32)               _BFGET_(r32,31,16)
    #define   SET32axiLMeter_MSTMASK3_MASK7(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16axiLMeter_MSTMASK3_MASK7(r16)               _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTMASK3_MASK7(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTMASK31                         {\
            UNSG32 uMSTMASK3_MASK6                             : 16;\
            UNSG32 uMSTMASK3_MASK7                             : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTMASK31;
            struct w32axiLMeter_MSTMASK31;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32axiLMeter_MSTEN_mstEn(r32)                  _BFGET_(r32,15, 0)
    #define   SET32axiLMeter_MSTEN_mstEn(r32,v)                _BFSET_(r32,15, 0,v)
    #define   GET16axiLMeter_MSTEN_mstEn(r16)                  _BFGET_(r16,15, 0)
    #define   SET16axiLMeter_MSTEN_mstEn(r16,v)                _BFSET_(r16,15, 0,v)

    #define     w32axiLMeter_MSTEN                             {\
            UNSG32 uMSTEN_mstEn                                : 16;\
            UNSG32 RSVDx264_b16                                : 16;\
          }
    union { UNSG32 u32axiLMeter_MSTEN;
            struct w32axiLMeter_MSTEN;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx268                                    [152];
    ///////////////////////////////////////////////////////////
    } SIE_axiLMeter;

    typedef union  T32axiLMeter_CTRL
          { UNSG32 u32;
            struct w32axiLMeter_CTRL;
                 } T32axiLMeter_CTRL;
    typedef union  T32axiLMeter_TIMER
          { UNSG32 u32;
            struct w32axiLMeter_TIMER;
                 } T32axiLMeter_TIMER;
    typedef union  T32axiLMeter_WBIN
          { UNSG32 u32;
            struct w32axiLMeter_WBIN;
                 } T32axiLMeter_WBIN;
    typedef union  T32axiLMeter_RBIN
          { UNSG32 u32;
            struct w32axiLMeter_RBIN;
                 } T32axiLMeter_RBIN;
    typedef union  T32axiLMeter_STATUS
          { UNSG32 u32;
            struct w32axiLMeter_STATUS;
                 } T32axiLMeter_STATUS;
    typedef union  T32axiLMeter_RBINOF0
          { UNSG32 u32;
            struct w32axiLMeter_RBINOF0;
                 } T32axiLMeter_RBINOF0;
    typedef union  T32axiLMeter_RBINOF1
          { UNSG32 u32;
            struct w32axiLMeter_RBINOF1;
                 } T32axiLMeter_RBINOF1;
    typedef union  T32axiLMeter_WBINOF0
          { UNSG32 u32;
            struct w32axiLMeter_WBINOF0;
                 } T32axiLMeter_WBINOF0;
    typedef union  T32axiLMeter_WBINOF1
          { UNSG32 u32;
            struct w32axiLMeter_WBINOF1;
                 } T32axiLMeter_WBINOF1;
    typedef union  T32axiLMeter_MSTID0
          { UNSG32 u32;
            struct w32axiLMeter_MSTID0;
                 } T32axiLMeter_MSTID0;
    typedef union  T32axiLMeter_MSTID01
          { UNSG32 u32;
            struct w32axiLMeter_MSTID01;
                 } T32axiLMeter_MSTID01;
    typedef union  T32axiLMeter_MSTID1
          { UNSG32 u32;
            struct w32axiLMeter_MSTID1;
                 } T32axiLMeter_MSTID1;
    typedef union  T32axiLMeter_MSTID11
          { UNSG32 u32;
            struct w32axiLMeter_MSTID11;
                 } T32axiLMeter_MSTID11;
    typedef union  T32axiLMeter_MSTID2
          { UNSG32 u32;
            struct w32axiLMeter_MSTID2;
                 } T32axiLMeter_MSTID2;
    typedef union  T32axiLMeter_MSTID21
          { UNSG32 u32;
            struct w32axiLMeter_MSTID21;
                 } T32axiLMeter_MSTID21;
    typedef union  T32axiLMeter_MSTID3
          { UNSG32 u32;
            struct w32axiLMeter_MSTID3;
                 } T32axiLMeter_MSTID3;
    typedef union  T32axiLMeter_MSTID31
          { UNSG32 u32;
            struct w32axiLMeter_MSTID31;
                 } T32axiLMeter_MSTID31;
    typedef union  T32axiLMeter_MSTMASK0
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK0;
                 } T32axiLMeter_MSTMASK0;
    typedef union  T32axiLMeter_MSTMASK01
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK01;
                 } T32axiLMeter_MSTMASK01;
    typedef union  T32axiLMeter_MSTMASK1
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK1;
                 } T32axiLMeter_MSTMASK1;
    typedef union  T32axiLMeter_MSTMASK11
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK11;
                 } T32axiLMeter_MSTMASK11;
    typedef union  T32axiLMeter_MSTMASK2
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK2;
                 } T32axiLMeter_MSTMASK2;
    typedef union  T32axiLMeter_MSTMASK21
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK21;
                 } T32axiLMeter_MSTMASK21;
    typedef union  T32axiLMeter_MSTMASK3
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK3;
                 } T32axiLMeter_MSTMASK3;
    typedef union  T32axiLMeter_MSTMASK31
          { UNSG32 u32;
            struct w32axiLMeter_MSTMASK31;
                 } T32axiLMeter_MSTMASK31;
    typedef union  T32axiLMeter_MSTEN
          { UNSG32 u32;
            struct w32axiLMeter_MSTEN;
                 } T32axiLMeter_MSTEN;
    ///////////////////////////////////////////////////////////

    typedef union  TaxiLMeter_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_CTRL;
                   };
                 } TaxiLMeter_CTRL;
    typedef union  TaxiLMeter_TIMER
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_TIMER;
                   };
                 } TaxiLMeter_TIMER;
    typedef union  TaxiLMeter_WBIN
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_WBIN;
                   };
                 } TaxiLMeter_WBIN;
    typedef union  TaxiLMeter_RBIN
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_RBIN;
                   };
                 } TaxiLMeter_RBIN;
    typedef union  TaxiLMeter_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_STATUS;
                   };
                 } TaxiLMeter_STATUS;
    typedef union  TaxiLMeter_RBINOF0
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_RBINOF0;
                   };
                 } TaxiLMeter_RBINOF0;
    typedef union  TaxiLMeter_RBINOF1
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_RBINOF1;
                   };
                 } TaxiLMeter_RBINOF1;
    typedef union  TaxiLMeter_WBINOF0
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_WBINOF0;
                   };
                 } TaxiLMeter_WBINOF0;
    typedef union  TaxiLMeter_WBINOF1
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_WBINOF1;
                   };
                 } TaxiLMeter_WBINOF1;
    typedef union  TaxiLMeter_MSTID0
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTID0;
            struct w32axiLMeter_MSTID01;
                   };
                 } TaxiLMeter_MSTID0;
    typedef union  TaxiLMeter_MSTID1
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTID1;
            struct w32axiLMeter_MSTID11;
                   };
                 } TaxiLMeter_MSTID1;
    typedef union  TaxiLMeter_MSTID2
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTID2;
            struct w32axiLMeter_MSTID21;
                   };
                 } TaxiLMeter_MSTID2;
    typedef union  TaxiLMeter_MSTID3
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTID3;
            struct w32axiLMeter_MSTID31;
                   };
                 } TaxiLMeter_MSTID3;
    typedef union  TaxiLMeter_MSTMASK0
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTMASK0;
            struct w32axiLMeter_MSTMASK01;
                   };
                 } TaxiLMeter_MSTMASK0;
    typedef union  TaxiLMeter_MSTMASK1
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTMASK1;
            struct w32axiLMeter_MSTMASK11;
                   };
                 } TaxiLMeter_MSTMASK1;
    typedef union  TaxiLMeter_MSTMASK2
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTMASK2;
            struct w32axiLMeter_MSTMASK21;
                   };
                 } TaxiLMeter_MSTMASK2;
    typedef union  TaxiLMeter_MSTMASK3
          { UNSG32 u32[2];
            struct {
            struct w32axiLMeter_MSTMASK3;
            struct w32axiLMeter_MSTMASK31;
                   };
                 } TaxiLMeter_MSTMASK3;
    typedef union  TaxiLMeter_MSTEN
          { UNSG32 u32[1];
            struct {
            struct w32axiLMeter_MSTEN;
                   };
                 } TaxiLMeter_MSTEN;

    ///////////////////////////////////////////////////////////
     SIGN32 axiLMeter_drvrd(SIE_axiLMeter *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 axiLMeter_drvwr(SIE_axiLMeter *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void axiLMeter_reset(SIE_axiLMeter *p);
     SIGN32 axiLMeter_cmp  (SIE_axiLMeter *p, SIE_axiLMeter *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define axiLMeter_check(p,pie,pfx,hLOG) axiLMeter_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define axiLMeter_print(p,    pfx,hLOG) axiLMeter_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: axiLMeter
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE ALM                     biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 almIP
///               $axiLMeter           almIP             REG
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     768B, bits:     828b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_ALM
#define h_ALM (){}

    #define     RA_ALM_almIP                                   0x0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_ALM {
    ///////////////////////////////////////////////////////////
              SIE_axiLMeter                                    ie_almIP;
    ///////////////////////////////////////////////////////////
    } SIE_ALM;

    ///////////////////////////////////////////////////////////
     SIGN32 ALM_drvrd(SIE_ALM *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 ALM_drvwr(SIE_ALM *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void ALM_reset(SIE_ALM *p);
     SIGN32 ALM_cmp  (SIE_ALM *p, SIE_ALM *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define ALM_check(p,pie,pfx,hLOG) ALM_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define ALM_print(p,    pfx,hLOG) ALM_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: ALM
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: axiLMeter.h
////////////////////////////////////////////////////////////

