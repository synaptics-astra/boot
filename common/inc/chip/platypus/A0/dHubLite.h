//////
/// don't edit! auto-generated by docc: dHubLite.h
////////////////////////////////////////////////////////////
#ifndef dHubLite_h
#define dHubLite_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
///
/// $INTERFACE SemaINTRLite                             (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 mask                 (W-)
///               %unsigned 1  empty                     0x0
///                                    ###
///                                    * Enable interrupt on 'empty' condition
///                                    ###
///               %unsigned 1  full                      0x0
///                                    ###
///                                    * Enable interrupt on 'full' condition
///                                    ###
///               %unsigned 1  almostEmpty               0x0
///                                    ###
///                                    * Enable interrupt on 'almostEmpty' condition
///                                    ###
///               %unsigned 1  almostFull                0x0
///                                    ###
///                                    * Enable interrupt on 'almostFull' condition
///                                    ###
///               %%        28         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       4b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SemaINTRLite
#define h_SemaINTRLite (){}

    #define     RA_SemaINTRLite_mask                           0x0000

    #define     BA_SemaINTRLite_mask_empty                     0x0000
    #define     B16SemaINTRLite_mask_empty                     0x0000
    #define   LSb32SemaINTRLite_mask_empty                        0
    #define   LSb16SemaINTRLite_mask_empty                        0
    #define       bSemaINTRLite_mask_empty                     1
    #define   MSK32SemaINTRLite_mask_empty                        0x00000001

    #define     BA_SemaINTRLite_mask_full                      0x0000
    #define     B16SemaINTRLite_mask_full                      0x0000
    #define   LSb32SemaINTRLite_mask_full                         1
    #define   LSb16SemaINTRLite_mask_full                         1
    #define       bSemaINTRLite_mask_full                      1
    #define   MSK32SemaINTRLite_mask_full                         0x00000002

    #define     BA_SemaINTRLite_mask_almostEmpty               0x0000
    #define     B16SemaINTRLite_mask_almostEmpty               0x0000
    #define   LSb32SemaINTRLite_mask_almostEmpty                  2
    #define   LSb16SemaINTRLite_mask_almostEmpty                  2
    #define       bSemaINTRLite_mask_almostEmpty               1
    #define   MSK32SemaINTRLite_mask_almostEmpty                  0x00000004

    #define     BA_SemaINTRLite_mask_almostFull                0x0000
    #define     B16SemaINTRLite_mask_almostFull                0x0000
    #define   LSb32SemaINTRLite_mask_almostFull                   3
    #define   LSb16SemaINTRLite_mask_almostFull                   3
    #define       bSemaINTRLite_mask_almostFull                1
    #define   MSK32SemaINTRLite_mask_almostFull                   0x00000008
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SemaINTRLite {
    ///////////////////////////////////////////////////////////
    #define   GET32SemaINTRLite_mask_empty(r32)                _BFGET_(r32, 0, 0)
    #define   SET32SemaINTRLite_mask_empty(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16SemaINTRLite_mask_empty(r16)                _BFGET_(r16, 0, 0)
    #define   SET16SemaINTRLite_mask_empty(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32SemaINTRLite_mask_full(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32SemaINTRLite_mask_full(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16SemaINTRLite_mask_full(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16SemaINTRLite_mask_full(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32SemaINTRLite_mask_almostEmpty(r32)          _BFGET_(r32, 2, 2)
    #define   SET32SemaINTRLite_mask_almostEmpty(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16SemaINTRLite_mask_almostEmpty(r16)          _BFGET_(r16, 2, 2)
    #define   SET16SemaINTRLite_mask_almostEmpty(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32SemaINTRLite_mask_almostFull(r32)           _BFGET_(r32, 3, 3)
    #define   SET32SemaINTRLite_mask_almostFull(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16SemaINTRLite_mask_almostFull(r16)           _BFGET_(r16, 3, 3)
    #define   SET16SemaINTRLite_mask_almostFull(r16,v)         _BFSET_(r16, 3, 3,v)

    #define     w32SemaINTRLite_mask                           {\
            UNSG32 umask_empty                                 :  1;\
            UNSG32 umask_full                                  :  1;\
            UNSG32 umask_almostEmpty                           :  1;\
            UNSG32 umask_almostFull                            :  1;\
            UNSG32 RSVDx0_b4                                   : 28;\
          }
    union { UNSG32 u32SemaINTRLite_mask;
            struct w32SemaINTRLite_mask;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SemaINTRLite;

    typedef union  T32SemaINTRLite_mask
          { UNSG32 u32;
            struct w32SemaINTRLite_mask;
                 } T32SemaINTRLite_mask;
    ///////////////////////////////////////////////////////////

    typedef union  TSemaINTRLite_mask
          { UNSG32 u32[1];
            struct {
            struct w32SemaINTRLite_mask;
                   };
                 } TSemaINTRLite_mask;

    ///////////////////////////////////////////////////////////
     SIGN32 SemaINTRLite_drvrd(SIE_SemaINTRLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SemaINTRLite_drvwr(SIE_SemaINTRLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SemaINTRLite_reset(SIE_SemaINTRLite *p);
     SIGN32 SemaINTRLite_cmp  (SIE_SemaINTRLite *p, SIE_SemaINTRLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SemaINTRLite_check(p,pie,pfx,hLOG) SemaINTRLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SemaINTRLite_print(p,    pfx,hLOG) SemaINTRLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SemaINTRLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SemaphoreLite           biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG                  (W-)
///               %unsigned 16 DEPTH                     0xF
///                                    ###
///                                    * Max level of semaphore
///                                    * Note: write this register will trigger counter reset
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00004                      (P)
///     # 0x00004 INTR
///               $SemaINTRLite        INTR              REG       [3]
///                                    ###
///                                    * Interrupt mask for 3 CPUs
///                                    ###
///     @ 0x00010 mask                 (W-)
///               %unsigned 1  full                      0x0
///               %unsigned 1  emp                       0x0
///                                    ###
///                                    * When full bit is set to one, to the producer, the semaphore will never be full, so that the producer will never be blocked.
///                                    * When emp bit is set to one, to the consumer, the semaphore will never be empty, so that the consumer will never be blocked.
///                                    * When the emp/full bit is set, the semaphore/FIFO pointer will be maintained, but the counter will be not correct anymore.
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      20B, bits:      30b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SemaphoreLite
#define h_SemaphoreLite (){}

    #define     RA_SemaphoreLite_CFG                           0x0000

    #define     BA_SemaphoreLite_CFG_DEPTH                     0x0000
    #define     B16SemaphoreLite_CFG_DEPTH                     0x0000
    #define   LSb32SemaphoreLite_CFG_DEPTH                        0
    #define   LSb16SemaphoreLite_CFG_DEPTH                        0
    #define       bSemaphoreLite_CFG_DEPTH                     16
    #define   MSK32SemaphoreLite_CFG_DEPTH                        0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_SemaphoreLite_INTR                          0x0004
    ///////////////////////////////////////////////////////////
    #define     RA_SemaphoreLite_mask                          0x0010

    #define     BA_SemaphoreLite_mask_full                     0x0010
    #define     B16SemaphoreLite_mask_full                     0x0010
    #define   LSb32SemaphoreLite_mask_full                        0
    #define   LSb16SemaphoreLite_mask_full                        0
    #define       bSemaphoreLite_mask_full                     1
    #define   MSK32SemaphoreLite_mask_full                        0x00000001

    #define     BA_SemaphoreLite_mask_emp                      0x0010
    #define     B16SemaphoreLite_mask_emp                      0x0010
    #define   LSb32SemaphoreLite_mask_emp                         1
    #define   LSb16SemaphoreLite_mask_emp                         1
    #define       bSemaphoreLite_mask_emp                      1
    #define   MSK32SemaphoreLite_mask_emp                         0x00000002
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SemaphoreLite {
    ///////////////////////////////////////////////////////////
    #define   GET32SemaphoreLite_CFG_DEPTH(r32)                _BFGET_(r32,15, 0)
    #define   SET32SemaphoreLite_CFG_DEPTH(r32,v)              _BFSET_(r32,15, 0,v)
    #define   GET16SemaphoreLite_CFG_DEPTH(r16)                _BFGET_(r16,15, 0)
    #define   SET16SemaphoreLite_CFG_DEPTH(r16,v)              _BFSET_(r16,15, 0,v)

    #define     w32SemaphoreLite_CFG                           {\
            UNSG32 uCFG_DEPTH                                  : 16;\
            UNSG32 RSVDx0_b16                                  : 16;\
          }
    union { UNSG32 u32SemaphoreLite_CFG;
            struct w32SemaphoreLite_CFG;
          };
    ///////////////////////////////////////////////////////////
              SIE_SemaINTRLite                                 ie_INTR[3];
    ///////////////////////////////////////////////////////////
    #define   GET32SemaphoreLite_mask_full(r32)                _BFGET_(r32, 0, 0)
    #define   SET32SemaphoreLite_mask_full(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16SemaphoreLite_mask_full(r16)                _BFGET_(r16, 0, 0)
    #define   SET16SemaphoreLite_mask_full(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32SemaphoreLite_mask_emp(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32SemaphoreLite_mask_emp(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16SemaphoreLite_mask_emp(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16SemaphoreLite_mask_emp(r16,v)               _BFSET_(r16, 1, 1,v)

    #define     w32SemaphoreLite_mask                          {\
            UNSG32 umask_full                                  :  1;\
            UNSG32 umask_emp                                   :  1;\
            UNSG32 RSVDx10_b2                                  : 30;\
          }
    union { UNSG32 u32SemaphoreLite_mask;
            struct w32SemaphoreLite_mask;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SemaphoreLite;

    typedef union  T32SemaphoreLite_CFG
          { UNSG32 u32;
            struct w32SemaphoreLite_CFG;
                 } T32SemaphoreLite_CFG;
    typedef union  T32SemaphoreLite_mask
          { UNSG32 u32;
            struct w32SemaphoreLite_mask;
                 } T32SemaphoreLite_mask;
    ///////////////////////////////////////////////////////////

    typedef union  TSemaphoreLite_CFG
          { UNSG32 u32[1];
            struct {
            struct w32SemaphoreLite_CFG;
                   };
                 } TSemaphoreLite_CFG;
    typedef union  TSemaphoreLite_mask
          { UNSG32 u32[1];
            struct {
            struct w32SemaphoreLite_mask;
                   };
                 } TSemaphoreLite_mask;

    ///////////////////////////////////////////////////////////
     SIGN32 SemaphoreLite_drvrd(SIE_SemaphoreLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SemaphoreLite_drvwr(SIE_SemaphoreLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SemaphoreLite_reset(SIE_SemaphoreLite *p);
     SIGN32 SemaphoreLite_cmp  (SIE_SemaphoreLite *p, SIE_SemaphoreLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SemaphoreLite_check(p,pie,pfx,hLOG) SemaphoreLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SemaphoreLite_print(p,    pfx,hLOG) SemaphoreLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SemaphoreLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SemaQueryLite                            (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 RESP                 (R-)
///               %unsigned 16 CNT
///                                    ###
///                                    * Semaphore counter level
///                                    ###
///               %unsigned 16 PTR
///                                    ###
///                                    * Semaphore pointer:
///                                    * producer-wptr or consumer-rptr
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SemaQueryLite
#define h_SemaQueryLite (){}

    #define     RA_SemaQueryLite_RESP                          0x0000

    #define     BA_SemaQueryLite_RESP_CNT                      0x0000
    #define     B16SemaQueryLite_RESP_CNT                      0x0000
    #define   LSb32SemaQueryLite_RESP_CNT                         0
    #define   LSb16SemaQueryLite_RESP_CNT                         0
    #define       bSemaQueryLite_RESP_CNT                      16
    #define   MSK32SemaQueryLite_RESP_CNT                         0x0000FFFF

    #define     BA_SemaQueryLite_RESP_PTR                      0x0002
    #define     B16SemaQueryLite_RESP_PTR                      0x0002
    #define   LSb32SemaQueryLite_RESP_PTR                         16
    #define   LSb16SemaQueryLite_RESP_PTR                         0
    #define       bSemaQueryLite_RESP_PTR                      16
    #define   MSK32SemaQueryLite_RESP_PTR                         0xFFFF0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SemaQueryLite {
    ///////////////////////////////////////////////////////////
    #define   GET32SemaQueryLite_RESP_CNT(r32)                 _BFGET_(r32,15, 0)
    #define   SET32SemaQueryLite_RESP_CNT(r32,v)               _BFSET_(r32,15, 0,v)
    #define   GET16SemaQueryLite_RESP_CNT(r16)                 _BFGET_(r16,15, 0)
    #define   SET16SemaQueryLite_RESP_CNT(r16,v)               _BFSET_(r16,15, 0,v)

    #define   GET32SemaQueryLite_RESP_PTR(r32)                 _BFGET_(r32,31,16)
    #define   SET32SemaQueryLite_RESP_PTR(r32,v)               _BFSET_(r32,31,16,v)
    #define   GET16SemaQueryLite_RESP_PTR(r16)                 _BFGET_(r16,15, 0)
    #define   SET16SemaQueryLite_RESP_PTR(r16,v)               _BFSET_(r16,15, 0,v)

    #define     w32SemaQueryLite_RESP                          {\
            UNSG32 uRESP_CNT                                   : 16;\
            UNSG32 uRESP_PTR                                   : 16;\
          }
    union { UNSG32 u32SemaQueryLite_RESP;
            struct w32SemaQueryLite_RESP;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SemaQueryLite;

    typedef union  T32SemaQueryLite_RESP
          { UNSG32 u32;
            struct w32SemaQueryLite_RESP;
                 } T32SemaQueryLite_RESP;
    ///////////////////////////////////////////////////////////

    typedef union  TSemaQueryLite_RESP
          { UNSG32 u32[1];
            struct {
            struct w32SemaQueryLite_RESP;
                   };
                 } TSemaQueryLite_RESP;

    ///////////////////////////////////////////////////////////
     SIGN32 SemaQueryLite_drvrd(SIE_SemaQueryLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SemaQueryLite_drvwr(SIE_SemaQueryLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SemaQueryLite_reset(SIE_SemaQueryLite *p);
     SIGN32 SemaQueryLite_cmp  (SIE_SemaQueryLite *p, SIE_SemaQueryLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SemaQueryLite_check(p,pie,pfx,hLOG) SemaQueryLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SemaQueryLite_print(p,    pfx,hLOG) SemaQueryLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SemaQueryLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SemaQueryMapLite                         (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ADDR                 (P)
///               %unsigned 2  byte
///               %unsigned 5  ID
///                                    ###
///                                    * Semaphore cell index
///                                    ###
///               %unsigned 1  master
///                                    : producer                  0x0
///                                    : consumer                  0x1
///                                                 ###
///                                                 * Select which counter to read
///                                                 ###
///               %%        24         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       8b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SemaQueryMapLite
#define h_SemaQueryMapLite (){}

    #define     RA_SemaQueryMapLite_ADDR                       0x0000

    #define     BA_SemaQueryMapLite_ADDR_byte                  0x0000
    #define     B16SemaQueryMapLite_ADDR_byte                  0x0000
    #define   LSb32SemaQueryMapLite_ADDR_byte                     0
    #define   LSb16SemaQueryMapLite_ADDR_byte                     0
    #define       bSemaQueryMapLite_ADDR_byte                  2
    #define   MSK32SemaQueryMapLite_ADDR_byte                     0x00000003

    #define     BA_SemaQueryMapLite_ADDR_ID                    0x0000
    #define     B16SemaQueryMapLite_ADDR_ID                    0x0000
    #define   LSb32SemaQueryMapLite_ADDR_ID                       2
    #define   LSb16SemaQueryMapLite_ADDR_ID                       2
    #define       bSemaQueryMapLite_ADDR_ID                    5
    #define   MSK32SemaQueryMapLite_ADDR_ID                       0x0000007C

    #define     BA_SemaQueryMapLite_ADDR_master                0x0000
    #define     B16SemaQueryMapLite_ADDR_master                0x0000
    #define   LSb32SemaQueryMapLite_ADDR_master                   7
    #define   LSb16SemaQueryMapLite_ADDR_master                   7
    #define       bSemaQueryMapLite_ADDR_master                1
    #define   MSK32SemaQueryMapLite_ADDR_master                   0x00000080
    #define        SemaQueryMapLite_ADDR_master_producer                    0x0
    #define        SemaQueryMapLite_ADDR_master_consumer                    0x1
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SemaQueryMapLite {
    ///////////////////////////////////////////////////////////
    #define   GET32SemaQueryMapLite_ADDR_byte(r32)             _BFGET_(r32, 1, 0)
    #define   SET32SemaQueryMapLite_ADDR_byte(r32,v)           _BFSET_(r32, 1, 0,v)
    #define   GET16SemaQueryMapLite_ADDR_byte(r16)             _BFGET_(r16, 1, 0)
    #define   SET16SemaQueryMapLite_ADDR_byte(r16,v)           _BFSET_(r16, 1, 0,v)

    #define   GET32SemaQueryMapLite_ADDR_ID(r32)               _BFGET_(r32, 6, 2)
    #define   SET32SemaQueryMapLite_ADDR_ID(r32,v)             _BFSET_(r32, 6, 2,v)
    #define   GET16SemaQueryMapLite_ADDR_ID(r16)               _BFGET_(r16, 6, 2)
    #define   SET16SemaQueryMapLite_ADDR_ID(r16,v)             _BFSET_(r16, 6, 2,v)

    #define   GET32SemaQueryMapLite_ADDR_master(r32)           _BFGET_(r32, 7, 7)
    #define   SET32SemaQueryMapLite_ADDR_master(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16SemaQueryMapLite_ADDR_master(r16)           _BFGET_(r16, 7, 7)
    #define   SET16SemaQueryMapLite_ADDR_master(r16,v)         _BFSET_(r16, 7, 7,v)

    #define     w32SemaQueryMapLite_ADDR                       {\
            UNSG32 uADDR_byte                                  :  2;\
            UNSG32 uADDR_ID                                    :  5;\
            UNSG32 uADDR_master                                :  1;\
            UNSG32 RSVDx0_b8                                   : 24;\
          }
    union { UNSG32 u32SemaQueryMapLite_ADDR;
            struct w32SemaQueryMapLite_ADDR;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SemaQueryMapLite;

    typedef union  T32SemaQueryMapLite_ADDR
          { UNSG32 u32;
            struct w32SemaQueryMapLite_ADDR;
                 } T32SemaQueryMapLite_ADDR;
    ///////////////////////////////////////////////////////////

    typedef union  TSemaQueryMapLite_ADDR
          { UNSG32 u32[1];
            struct {
            struct w32SemaQueryMapLite_ADDR;
                   };
                 } TSemaQueryMapLite_ADDR;

    ///////////////////////////////////////////////////////////
     SIGN32 SemaQueryMapLite_drvrd(SIE_SemaQueryMapLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SemaQueryMapLite_drvwr(SIE_SemaQueryMapLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SemaQueryMapLite_reset(SIE_SemaQueryMapLite *p);
     SIGN32 SemaQueryMapLite_cmp  (SIE_SemaQueryMapLite *p, SIE_SemaQueryMapLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SemaQueryMapLite_check(p,pie,pfx,hLOG) SemaQueryMapLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SemaQueryMapLite_print(p,    pfx,hLOG) SemaQueryMapLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SemaQueryMapLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SemaHubLite             biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Query                (R-)
///     # 0x00000 counter
///               $SemaQueryLite       counter           MEM      [64]
///                                    ###
///                                    * Access address as defined above
///                                    ###
///     @ 0x00100 ARR                  (P)
///     # 0x00100 cell
///               $SemaphoreLite       cell              REG      [32]
///                                    ###
///                                    * Up-to 32 semaphore cells
///                                    ###
///     @ 0x00380 PUSH                 (W-)
///               %unsigned 8  ID
///               %unsigned 8  delta
///                                    ###
///                                    * CPU increases PCounter by delta (0 as push 256)
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00384 POP                  (W-)
///               %unsigned 8  ID
///               %unsigned 8  delta
///                                    ###
///                                    * CPU decreases CCounter by delta (0 as pop 256)
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00388 empty                (WOC-)
///               %unsigned 1  ST_0i                     0x0
///               %unsigned 1  ST_1i                     0x0
///               %unsigned 1  ST_2i                     0x0
///               %unsigned 1  ST_3i                     0x0
///               %unsigned 1  ST_4i                     0x0
///               %unsigned 1  ST_5i                     0x0
///               %unsigned 1  ST_6i                     0x0
///               %unsigned 1  ST_7i                     0x0
///               %unsigned 1  ST_8i                     0x0
///               %unsigned 1  ST_9i                     0x0
///               %unsigned 1  ST_10i                    0x0
///               %unsigned 1  ST_11i                    0x0
///               %unsigned 1  ST_12i                    0x0
///               %unsigned 1  ST_13i                    0x0
///               %unsigned 1  ST_14i                    0x0
///               %unsigned 1  ST_15i                    0x0
///               %unsigned 1  ST_16i                    0x0
///               %unsigned 1  ST_17i                    0x0
///               %unsigned 1  ST_18i                    0x0
///               %unsigned 1  ST_19i                    0x0
///               %unsigned 1  ST_20i                    0x0
///               %unsigned 1  ST_21i                    0x0
///               %unsigned 1  ST_22i                    0x0
///               %unsigned 1  ST_23i                    0x0
///               %unsigned 1  ST_24i                    0x0
///               %unsigned 1  ST_25i                    0x0
///               %unsigned 1  ST_26i                    0x0
///               %unsigned 1  ST_27i                    0x0
///               %unsigned 1  ST_28i                    0x0
///               %unsigned 1  ST_29i                    0x0
///               %unsigned 1  ST_30i                    0x0
///               %unsigned 1  ST_31i                    0x0
///                                    ###
///                                    * All cell 'empty' status
///                                    ###
///     @ 0x0038C full                 (WOC-)
///               %unsigned 1  ST_0i                     0x0
///               %unsigned 1  ST_1i                     0x0
///               %unsigned 1  ST_2i                     0x0
///               %unsigned 1  ST_3i                     0x0
///               %unsigned 1  ST_4i                     0x0
///               %unsigned 1  ST_5i                     0x0
///               %unsigned 1  ST_6i                     0x0
///               %unsigned 1  ST_7i                     0x0
///               %unsigned 1  ST_8i                     0x0
///               %unsigned 1  ST_9i                     0x0
///               %unsigned 1  ST_10i                    0x0
///               %unsigned 1  ST_11i                    0x0
///               %unsigned 1  ST_12i                    0x0
///               %unsigned 1  ST_13i                    0x0
///               %unsigned 1  ST_14i                    0x0
///               %unsigned 1  ST_15i                    0x0
///               %unsigned 1  ST_16i                    0x0
///               %unsigned 1  ST_17i                    0x0
///               %unsigned 1  ST_18i                    0x0
///               %unsigned 1  ST_19i                    0x0
///               %unsigned 1  ST_20i                    0x0
///               %unsigned 1  ST_21i                    0x0
///               %unsigned 1  ST_22i                    0x0
///               %unsigned 1  ST_23i                    0x0
///               %unsigned 1  ST_24i                    0x0
///               %unsigned 1  ST_25i                    0x0
///               %unsigned 1  ST_26i                    0x0
///               %unsigned 1  ST_27i                    0x0
///               %unsigned 1  ST_28i                    0x0
///               %unsigned 1  ST_29i                    0x0
///               %unsigned 1  ST_30i                    0x0
///               %unsigned 1  ST_31i                    0x0
///                                    ###
///                                    * All cell 'full' status
///                                    ###
///     @ 0x00390 almostEmpty          (WOC-)
///               %unsigned 1  ST_0i                     0x0
///               %unsigned 1  ST_1i                     0x0
///               %unsigned 1  ST_2i                     0x0
///               %unsigned 1  ST_3i                     0x0
///               %unsigned 1  ST_4i                     0x0
///               %unsigned 1  ST_5i                     0x0
///               %unsigned 1  ST_6i                     0x0
///               %unsigned 1  ST_7i                     0x0
///               %unsigned 1  ST_8i                     0x0
///               %unsigned 1  ST_9i                     0x0
///               %unsigned 1  ST_10i                    0x0
///               %unsigned 1  ST_11i                    0x0
///               %unsigned 1  ST_12i                    0x0
///               %unsigned 1  ST_13i                    0x0
///               %unsigned 1  ST_14i                    0x0
///               %unsigned 1  ST_15i                    0x0
///               %unsigned 1  ST_16i                    0x0
///               %unsigned 1  ST_17i                    0x0
///               %unsigned 1  ST_18i                    0x0
///               %unsigned 1  ST_19i                    0x0
///               %unsigned 1  ST_20i                    0x0
///               %unsigned 1  ST_21i                    0x0
///               %unsigned 1  ST_22i                    0x0
///               %unsigned 1  ST_23i                    0x0
///               %unsigned 1  ST_24i                    0x0
///               %unsigned 1  ST_25i                    0x0
///               %unsigned 1  ST_26i                    0x0
///               %unsigned 1  ST_27i                    0x0
///               %unsigned 1  ST_28i                    0x0
///               %unsigned 1  ST_29i                    0x0
///               %unsigned 1  ST_30i                    0x0
///               %unsigned 1  ST_31i                    0x0
///                                    ###
///                                    * All cell 'almostEmpty' status
///                                    ###
///     @ 0x00394 almostFull           (WOC-)
///               %unsigned 1  ST_0i                     0x0
///               %unsigned 1  ST_1i                     0x0
///               %unsigned 1  ST_2i                     0x0
///               %unsigned 1  ST_3i                     0x0
///               %unsigned 1  ST_4i                     0x0
///               %unsigned 1  ST_5i                     0x0
///               %unsigned 1  ST_6i                     0x0
///               %unsigned 1  ST_7i                     0x0
///               %unsigned 1  ST_8i                     0x0
///               %unsigned 1  ST_9i                     0x0
///               %unsigned 1  ST_10i                    0x0
///               %unsigned 1  ST_11i                    0x0
///               %unsigned 1  ST_12i                    0x0
///               %unsigned 1  ST_13i                    0x0
///               %unsigned 1  ST_14i                    0x0
///               %unsigned 1  ST_15i                    0x0
///               %unsigned 1  ST_16i                    0x0
///               %unsigned 1  ST_17i                    0x0
///               %unsigned 1  ST_18i                    0x0
///               %unsigned 1  ST_19i                    0x0
///               %unsigned 1  ST_20i                    0x0
///               %unsigned 1  ST_21i                    0x0
///               %unsigned 1  ST_22i                    0x0
///               %unsigned 1  ST_23i                    0x0
///               %unsigned 1  ST_24i                    0x0
///               %unsigned 1  ST_25i                    0x0
///               %unsigned 1  ST_26i                    0x0
///               %unsigned 1  ST_27i                    0x0
///               %unsigned 1  ST_28i                    0x0
///               %unsigned 1  ST_29i                    0x0
///               %unsigned 1  ST_30i                    0x0
///               %unsigned 1  ST_31i                    0x0
///                                    ###
///                                    * All cell 'almostFull' status
///                                    ###
///     @ 0x00398                      (W-)
///     #         # Stuffing bytes...
///               %% 832
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:    1024B, bits:    1152b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SemaHubLite
#define h_SemaHubLite (){}

    #define     RA_SemaHubLite_Query                           0x0000
    #define     RA_SemaHubLite_counter                         0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_SemaHubLite_ARR                             0x0100
    #define     RA_SemaHubLite_cell                            0x0100
    ///////////////////////////////////////////////////////////
    #define     RA_SemaHubLite_PUSH                            0x0380

    #define     BA_SemaHubLite_PUSH_ID                         0x0380
    #define     B16SemaHubLite_PUSH_ID                         0x0380
    #define   LSb32SemaHubLite_PUSH_ID                            0
    #define   LSb16SemaHubLite_PUSH_ID                            0
    #define       bSemaHubLite_PUSH_ID                         8
    #define   MSK32SemaHubLite_PUSH_ID                            0x000000FF

    #define     BA_SemaHubLite_PUSH_delta                      0x0381
    #define     B16SemaHubLite_PUSH_delta                      0x0380
    #define   LSb32SemaHubLite_PUSH_delta                         8
    #define   LSb16SemaHubLite_PUSH_delta                         8
    #define       bSemaHubLite_PUSH_delta                      8
    #define   MSK32SemaHubLite_PUSH_delta                         0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_SemaHubLite_POP                             0x0384

    #define     BA_SemaHubLite_POP_ID                          0x0384
    #define     B16SemaHubLite_POP_ID                          0x0384
    #define   LSb32SemaHubLite_POP_ID                             0
    #define   LSb16SemaHubLite_POP_ID                             0
    #define       bSemaHubLite_POP_ID                          8
    #define   MSK32SemaHubLite_POP_ID                             0x000000FF

    #define     BA_SemaHubLite_POP_delta                       0x0385
    #define     B16SemaHubLite_POP_delta                       0x0384
    #define   LSb32SemaHubLite_POP_delta                          8
    #define   LSb16SemaHubLite_POP_delta                          8
    #define       bSemaHubLite_POP_delta                       8
    #define   MSK32SemaHubLite_POP_delta                          0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_SemaHubLite_empty                           0x0388

    #define     BA_SemaHubLite_empty_ST_0i                     0x0388
    #define     B16SemaHubLite_empty_ST_0i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_0i                        0
    #define   LSb16SemaHubLite_empty_ST_0i                        0
    #define       bSemaHubLite_empty_ST_0i                     1
    #define   MSK32SemaHubLite_empty_ST_0i                        0x00000001

    #define     BA_SemaHubLite_empty_ST_1i                     0x0388
    #define     B16SemaHubLite_empty_ST_1i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_1i                        1
    #define   LSb16SemaHubLite_empty_ST_1i                        1
    #define       bSemaHubLite_empty_ST_1i                     1
    #define   MSK32SemaHubLite_empty_ST_1i                        0x00000002

    #define     BA_SemaHubLite_empty_ST_2i                     0x0388
    #define     B16SemaHubLite_empty_ST_2i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_2i                        2
    #define   LSb16SemaHubLite_empty_ST_2i                        2
    #define       bSemaHubLite_empty_ST_2i                     1
    #define   MSK32SemaHubLite_empty_ST_2i                        0x00000004

    #define     BA_SemaHubLite_empty_ST_3i                     0x0388
    #define     B16SemaHubLite_empty_ST_3i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_3i                        3
    #define   LSb16SemaHubLite_empty_ST_3i                        3
    #define       bSemaHubLite_empty_ST_3i                     1
    #define   MSK32SemaHubLite_empty_ST_3i                        0x00000008

    #define     BA_SemaHubLite_empty_ST_4i                     0x0388
    #define     B16SemaHubLite_empty_ST_4i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_4i                        4
    #define   LSb16SemaHubLite_empty_ST_4i                        4
    #define       bSemaHubLite_empty_ST_4i                     1
    #define   MSK32SemaHubLite_empty_ST_4i                        0x00000010

    #define     BA_SemaHubLite_empty_ST_5i                     0x0388
    #define     B16SemaHubLite_empty_ST_5i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_5i                        5
    #define   LSb16SemaHubLite_empty_ST_5i                        5
    #define       bSemaHubLite_empty_ST_5i                     1
    #define   MSK32SemaHubLite_empty_ST_5i                        0x00000020

    #define     BA_SemaHubLite_empty_ST_6i                     0x0388
    #define     B16SemaHubLite_empty_ST_6i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_6i                        6
    #define   LSb16SemaHubLite_empty_ST_6i                        6
    #define       bSemaHubLite_empty_ST_6i                     1
    #define   MSK32SemaHubLite_empty_ST_6i                        0x00000040

    #define     BA_SemaHubLite_empty_ST_7i                     0x0388
    #define     B16SemaHubLite_empty_ST_7i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_7i                        7
    #define   LSb16SemaHubLite_empty_ST_7i                        7
    #define       bSemaHubLite_empty_ST_7i                     1
    #define   MSK32SemaHubLite_empty_ST_7i                        0x00000080

    #define     BA_SemaHubLite_empty_ST_8i                     0x0389
    #define     B16SemaHubLite_empty_ST_8i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_8i                        8
    #define   LSb16SemaHubLite_empty_ST_8i                        8
    #define       bSemaHubLite_empty_ST_8i                     1
    #define   MSK32SemaHubLite_empty_ST_8i                        0x00000100

    #define     BA_SemaHubLite_empty_ST_9i                     0x0389
    #define     B16SemaHubLite_empty_ST_9i                     0x0388
    #define   LSb32SemaHubLite_empty_ST_9i                        9
    #define   LSb16SemaHubLite_empty_ST_9i                        9
    #define       bSemaHubLite_empty_ST_9i                     1
    #define   MSK32SemaHubLite_empty_ST_9i                        0x00000200

    #define     BA_SemaHubLite_empty_ST_10i                    0x0389
    #define     B16SemaHubLite_empty_ST_10i                    0x0388
    #define   LSb32SemaHubLite_empty_ST_10i                       10
    #define   LSb16SemaHubLite_empty_ST_10i                       10
    #define       bSemaHubLite_empty_ST_10i                    1
    #define   MSK32SemaHubLite_empty_ST_10i                       0x00000400

    #define     BA_SemaHubLite_empty_ST_11i                    0x0389
    #define     B16SemaHubLite_empty_ST_11i                    0x0388
    #define   LSb32SemaHubLite_empty_ST_11i                       11
    #define   LSb16SemaHubLite_empty_ST_11i                       11
    #define       bSemaHubLite_empty_ST_11i                    1
    #define   MSK32SemaHubLite_empty_ST_11i                       0x00000800

    #define     BA_SemaHubLite_empty_ST_12i                    0x0389
    #define     B16SemaHubLite_empty_ST_12i                    0x0388
    #define   LSb32SemaHubLite_empty_ST_12i                       12
    #define   LSb16SemaHubLite_empty_ST_12i                       12
    #define       bSemaHubLite_empty_ST_12i                    1
    #define   MSK32SemaHubLite_empty_ST_12i                       0x00001000

    #define     BA_SemaHubLite_empty_ST_13i                    0x0389
    #define     B16SemaHubLite_empty_ST_13i                    0x0388
    #define   LSb32SemaHubLite_empty_ST_13i                       13
    #define   LSb16SemaHubLite_empty_ST_13i                       13
    #define       bSemaHubLite_empty_ST_13i                    1
    #define   MSK32SemaHubLite_empty_ST_13i                       0x00002000

    #define     BA_SemaHubLite_empty_ST_14i                    0x0389
    #define     B16SemaHubLite_empty_ST_14i                    0x0388
    #define   LSb32SemaHubLite_empty_ST_14i                       14
    #define   LSb16SemaHubLite_empty_ST_14i                       14
    #define       bSemaHubLite_empty_ST_14i                    1
    #define   MSK32SemaHubLite_empty_ST_14i                       0x00004000

    #define     BA_SemaHubLite_empty_ST_15i                    0x0389
    #define     B16SemaHubLite_empty_ST_15i                    0x0388
    #define   LSb32SemaHubLite_empty_ST_15i                       15
    #define   LSb16SemaHubLite_empty_ST_15i                       15
    #define       bSemaHubLite_empty_ST_15i                    1
    #define   MSK32SemaHubLite_empty_ST_15i                       0x00008000

    #define     BA_SemaHubLite_empty_ST_16i                    0x038A
    #define     B16SemaHubLite_empty_ST_16i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_16i                       16
    #define   LSb16SemaHubLite_empty_ST_16i                       0
    #define       bSemaHubLite_empty_ST_16i                    1
    #define   MSK32SemaHubLite_empty_ST_16i                       0x00010000

    #define     BA_SemaHubLite_empty_ST_17i                    0x038A
    #define     B16SemaHubLite_empty_ST_17i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_17i                       17
    #define   LSb16SemaHubLite_empty_ST_17i                       1
    #define       bSemaHubLite_empty_ST_17i                    1
    #define   MSK32SemaHubLite_empty_ST_17i                       0x00020000

    #define     BA_SemaHubLite_empty_ST_18i                    0x038A
    #define     B16SemaHubLite_empty_ST_18i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_18i                       18
    #define   LSb16SemaHubLite_empty_ST_18i                       2
    #define       bSemaHubLite_empty_ST_18i                    1
    #define   MSK32SemaHubLite_empty_ST_18i                       0x00040000

    #define     BA_SemaHubLite_empty_ST_19i                    0x038A
    #define     B16SemaHubLite_empty_ST_19i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_19i                       19
    #define   LSb16SemaHubLite_empty_ST_19i                       3
    #define       bSemaHubLite_empty_ST_19i                    1
    #define   MSK32SemaHubLite_empty_ST_19i                       0x00080000

    #define     BA_SemaHubLite_empty_ST_20i                    0x038A
    #define     B16SemaHubLite_empty_ST_20i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_20i                       20
    #define   LSb16SemaHubLite_empty_ST_20i                       4
    #define       bSemaHubLite_empty_ST_20i                    1
    #define   MSK32SemaHubLite_empty_ST_20i                       0x00100000

    #define     BA_SemaHubLite_empty_ST_21i                    0x038A
    #define     B16SemaHubLite_empty_ST_21i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_21i                       21
    #define   LSb16SemaHubLite_empty_ST_21i                       5
    #define       bSemaHubLite_empty_ST_21i                    1
    #define   MSK32SemaHubLite_empty_ST_21i                       0x00200000

    #define     BA_SemaHubLite_empty_ST_22i                    0x038A
    #define     B16SemaHubLite_empty_ST_22i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_22i                       22
    #define   LSb16SemaHubLite_empty_ST_22i                       6
    #define       bSemaHubLite_empty_ST_22i                    1
    #define   MSK32SemaHubLite_empty_ST_22i                       0x00400000

    #define     BA_SemaHubLite_empty_ST_23i                    0x038A
    #define     B16SemaHubLite_empty_ST_23i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_23i                       23
    #define   LSb16SemaHubLite_empty_ST_23i                       7
    #define       bSemaHubLite_empty_ST_23i                    1
    #define   MSK32SemaHubLite_empty_ST_23i                       0x00800000

    #define     BA_SemaHubLite_empty_ST_24i                    0x038B
    #define     B16SemaHubLite_empty_ST_24i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_24i                       24
    #define   LSb16SemaHubLite_empty_ST_24i                       8
    #define       bSemaHubLite_empty_ST_24i                    1
    #define   MSK32SemaHubLite_empty_ST_24i                       0x01000000

    #define     BA_SemaHubLite_empty_ST_25i                    0x038B
    #define     B16SemaHubLite_empty_ST_25i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_25i                       25
    #define   LSb16SemaHubLite_empty_ST_25i                       9
    #define       bSemaHubLite_empty_ST_25i                    1
    #define   MSK32SemaHubLite_empty_ST_25i                       0x02000000

    #define     BA_SemaHubLite_empty_ST_26i                    0x038B
    #define     B16SemaHubLite_empty_ST_26i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_26i                       26
    #define   LSb16SemaHubLite_empty_ST_26i                       10
    #define       bSemaHubLite_empty_ST_26i                    1
    #define   MSK32SemaHubLite_empty_ST_26i                       0x04000000

    #define     BA_SemaHubLite_empty_ST_27i                    0x038B
    #define     B16SemaHubLite_empty_ST_27i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_27i                       27
    #define   LSb16SemaHubLite_empty_ST_27i                       11
    #define       bSemaHubLite_empty_ST_27i                    1
    #define   MSK32SemaHubLite_empty_ST_27i                       0x08000000

    #define     BA_SemaHubLite_empty_ST_28i                    0x038B
    #define     B16SemaHubLite_empty_ST_28i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_28i                       28
    #define   LSb16SemaHubLite_empty_ST_28i                       12
    #define       bSemaHubLite_empty_ST_28i                    1
    #define   MSK32SemaHubLite_empty_ST_28i                       0x10000000

    #define     BA_SemaHubLite_empty_ST_29i                    0x038B
    #define     B16SemaHubLite_empty_ST_29i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_29i                       29
    #define   LSb16SemaHubLite_empty_ST_29i                       13
    #define       bSemaHubLite_empty_ST_29i                    1
    #define   MSK32SemaHubLite_empty_ST_29i                       0x20000000

    #define     BA_SemaHubLite_empty_ST_30i                    0x038B
    #define     B16SemaHubLite_empty_ST_30i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_30i                       30
    #define   LSb16SemaHubLite_empty_ST_30i                       14
    #define       bSemaHubLite_empty_ST_30i                    1
    #define   MSK32SemaHubLite_empty_ST_30i                       0x40000000

    #define     BA_SemaHubLite_empty_ST_31i                    0x038B
    #define     B16SemaHubLite_empty_ST_31i                    0x038A
    #define   LSb32SemaHubLite_empty_ST_31i                       31
    #define   LSb16SemaHubLite_empty_ST_31i                       15
    #define       bSemaHubLite_empty_ST_31i                    1
    #define   MSK32SemaHubLite_empty_ST_31i                       0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_SemaHubLite_full                            0x038C

    #define     BA_SemaHubLite_full_ST_0i                      0x038C
    #define     B16SemaHubLite_full_ST_0i                      0x038C
    #define   LSb32SemaHubLite_full_ST_0i                         0
    #define   LSb16SemaHubLite_full_ST_0i                         0
    #define       bSemaHubLite_full_ST_0i                      1
    #define   MSK32SemaHubLite_full_ST_0i                         0x00000001

    #define     BA_SemaHubLite_full_ST_1i                      0x038C
    #define     B16SemaHubLite_full_ST_1i                      0x038C
    #define   LSb32SemaHubLite_full_ST_1i                         1
    #define   LSb16SemaHubLite_full_ST_1i                         1
    #define       bSemaHubLite_full_ST_1i                      1
    #define   MSK32SemaHubLite_full_ST_1i                         0x00000002

    #define     BA_SemaHubLite_full_ST_2i                      0x038C
    #define     B16SemaHubLite_full_ST_2i                      0x038C
    #define   LSb32SemaHubLite_full_ST_2i                         2
    #define   LSb16SemaHubLite_full_ST_2i                         2
    #define       bSemaHubLite_full_ST_2i                      1
    #define   MSK32SemaHubLite_full_ST_2i                         0x00000004

    #define     BA_SemaHubLite_full_ST_3i                      0x038C
    #define     B16SemaHubLite_full_ST_3i                      0x038C
    #define   LSb32SemaHubLite_full_ST_3i                         3
    #define   LSb16SemaHubLite_full_ST_3i                         3
    #define       bSemaHubLite_full_ST_3i                      1
    #define   MSK32SemaHubLite_full_ST_3i                         0x00000008

    #define     BA_SemaHubLite_full_ST_4i                      0x038C
    #define     B16SemaHubLite_full_ST_4i                      0x038C
    #define   LSb32SemaHubLite_full_ST_4i                         4
    #define   LSb16SemaHubLite_full_ST_4i                         4
    #define       bSemaHubLite_full_ST_4i                      1
    #define   MSK32SemaHubLite_full_ST_4i                         0x00000010

    #define     BA_SemaHubLite_full_ST_5i                      0x038C
    #define     B16SemaHubLite_full_ST_5i                      0x038C
    #define   LSb32SemaHubLite_full_ST_5i                         5
    #define   LSb16SemaHubLite_full_ST_5i                         5
    #define       bSemaHubLite_full_ST_5i                      1
    #define   MSK32SemaHubLite_full_ST_5i                         0x00000020

    #define     BA_SemaHubLite_full_ST_6i                      0x038C
    #define     B16SemaHubLite_full_ST_6i                      0x038C
    #define   LSb32SemaHubLite_full_ST_6i                         6
    #define   LSb16SemaHubLite_full_ST_6i                         6
    #define       bSemaHubLite_full_ST_6i                      1
    #define   MSK32SemaHubLite_full_ST_6i                         0x00000040

    #define     BA_SemaHubLite_full_ST_7i                      0x038C
    #define     B16SemaHubLite_full_ST_7i                      0x038C
    #define   LSb32SemaHubLite_full_ST_7i                         7
    #define   LSb16SemaHubLite_full_ST_7i                         7
    #define       bSemaHubLite_full_ST_7i                      1
    #define   MSK32SemaHubLite_full_ST_7i                         0x00000080

    #define     BA_SemaHubLite_full_ST_8i                      0x038D
    #define     B16SemaHubLite_full_ST_8i                      0x038C
    #define   LSb32SemaHubLite_full_ST_8i                         8
    #define   LSb16SemaHubLite_full_ST_8i                         8
    #define       bSemaHubLite_full_ST_8i                      1
    #define   MSK32SemaHubLite_full_ST_8i                         0x00000100

    #define     BA_SemaHubLite_full_ST_9i                      0x038D
    #define     B16SemaHubLite_full_ST_9i                      0x038C
    #define   LSb32SemaHubLite_full_ST_9i                         9
    #define   LSb16SemaHubLite_full_ST_9i                         9
    #define       bSemaHubLite_full_ST_9i                      1
    #define   MSK32SemaHubLite_full_ST_9i                         0x00000200

    #define     BA_SemaHubLite_full_ST_10i                     0x038D
    #define     B16SemaHubLite_full_ST_10i                     0x038C
    #define   LSb32SemaHubLite_full_ST_10i                        10
    #define   LSb16SemaHubLite_full_ST_10i                        10
    #define       bSemaHubLite_full_ST_10i                     1
    #define   MSK32SemaHubLite_full_ST_10i                        0x00000400

    #define     BA_SemaHubLite_full_ST_11i                     0x038D
    #define     B16SemaHubLite_full_ST_11i                     0x038C
    #define   LSb32SemaHubLite_full_ST_11i                        11
    #define   LSb16SemaHubLite_full_ST_11i                        11
    #define       bSemaHubLite_full_ST_11i                     1
    #define   MSK32SemaHubLite_full_ST_11i                        0x00000800

    #define     BA_SemaHubLite_full_ST_12i                     0x038D
    #define     B16SemaHubLite_full_ST_12i                     0x038C
    #define   LSb32SemaHubLite_full_ST_12i                        12
    #define   LSb16SemaHubLite_full_ST_12i                        12
    #define       bSemaHubLite_full_ST_12i                     1
    #define   MSK32SemaHubLite_full_ST_12i                        0x00001000

    #define     BA_SemaHubLite_full_ST_13i                     0x038D
    #define     B16SemaHubLite_full_ST_13i                     0x038C
    #define   LSb32SemaHubLite_full_ST_13i                        13
    #define   LSb16SemaHubLite_full_ST_13i                        13
    #define       bSemaHubLite_full_ST_13i                     1
    #define   MSK32SemaHubLite_full_ST_13i                        0x00002000

    #define     BA_SemaHubLite_full_ST_14i                     0x038D
    #define     B16SemaHubLite_full_ST_14i                     0x038C
    #define   LSb32SemaHubLite_full_ST_14i                        14
    #define   LSb16SemaHubLite_full_ST_14i                        14
    #define       bSemaHubLite_full_ST_14i                     1
    #define   MSK32SemaHubLite_full_ST_14i                        0x00004000

    #define     BA_SemaHubLite_full_ST_15i                     0x038D
    #define     B16SemaHubLite_full_ST_15i                     0x038C
    #define   LSb32SemaHubLite_full_ST_15i                        15
    #define   LSb16SemaHubLite_full_ST_15i                        15
    #define       bSemaHubLite_full_ST_15i                     1
    #define   MSK32SemaHubLite_full_ST_15i                        0x00008000

    #define     BA_SemaHubLite_full_ST_16i                     0x038E
    #define     B16SemaHubLite_full_ST_16i                     0x038E
    #define   LSb32SemaHubLite_full_ST_16i                        16
    #define   LSb16SemaHubLite_full_ST_16i                        0
    #define       bSemaHubLite_full_ST_16i                     1
    #define   MSK32SemaHubLite_full_ST_16i                        0x00010000

    #define     BA_SemaHubLite_full_ST_17i                     0x038E
    #define     B16SemaHubLite_full_ST_17i                     0x038E
    #define   LSb32SemaHubLite_full_ST_17i                        17
    #define   LSb16SemaHubLite_full_ST_17i                        1
    #define       bSemaHubLite_full_ST_17i                     1
    #define   MSK32SemaHubLite_full_ST_17i                        0x00020000

    #define     BA_SemaHubLite_full_ST_18i                     0x038E
    #define     B16SemaHubLite_full_ST_18i                     0x038E
    #define   LSb32SemaHubLite_full_ST_18i                        18
    #define   LSb16SemaHubLite_full_ST_18i                        2
    #define       bSemaHubLite_full_ST_18i                     1
    #define   MSK32SemaHubLite_full_ST_18i                        0x00040000

    #define     BA_SemaHubLite_full_ST_19i                     0x038E
    #define     B16SemaHubLite_full_ST_19i                     0x038E
    #define   LSb32SemaHubLite_full_ST_19i                        19
    #define   LSb16SemaHubLite_full_ST_19i                        3
    #define       bSemaHubLite_full_ST_19i                     1
    #define   MSK32SemaHubLite_full_ST_19i                        0x00080000

    #define     BA_SemaHubLite_full_ST_20i                     0x038E
    #define     B16SemaHubLite_full_ST_20i                     0x038E
    #define   LSb32SemaHubLite_full_ST_20i                        20
    #define   LSb16SemaHubLite_full_ST_20i                        4
    #define       bSemaHubLite_full_ST_20i                     1
    #define   MSK32SemaHubLite_full_ST_20i                        0x00100000

    #define     BA_SemaHubLite_full_ST_21i                     0x038E
    #define     B16SemaHubLite_full_ST_21i                     0x038E
    #define   LSb32SemaHubLite_full_ST_21i                        21
    #define   LSb16SemaHubLite_full_ST_21i                        5
    #define       bSemaHubLite_full_ST_21i                     1
    #define   MSK32SemaHubLite_full_ST_21i                        0x00200000

    #define     BA_SemaHubLite_full_ST_22i                     0x038E
    #define     B16SemaHubLite_full_ST_22i                     0x038E
    #define   LSb32SemaHubLite_full_ST_22i                        22
    #define   LSb16SemaHubLite_full_ST_22i                        6
    #define       bSemaHubLite_full_ST_22i                     1
    #define   MSK32SemaHubLite_full_ST_22i                        0x00400000

    #define     BA_SemaHubLite_full_ST_23i                     0x038E
    #define     B16SemaHubLite_full_ST_23i                     0x038E
    #define   LSb32SemaHubLite_full_ST_23i                        23
    #define   LSb16SemaHubLite_full_ST_23i                        7
    #define       bSemaHubLite_full_ST_23i                     1
    #define   MSK32SemaHubLite_full_ST_23i                        0x00800000

    #define     BA_SemaHubLite_full_ST_24i                     0x038F
    #define     B16SemaHubLite_full_ST_24i                     0x038E
    #define   LSb32SemaHubLite_full_ST_24i                        24
    #define   LSb16SemaHubLite_full_ST_24i                        8
    #define       bSemaHubLite_full_ST_24i                     1
    #define   MSK32SemaHubLite_full_ST_24i                        0x01000000

    #define     BA_SemaHubLite_full_ST_25i                     0x038F
    #define     B16SemaHubLite_full_ST_25i                     0x038E
    #define   LSb32SemaHubLite_full_ST_25i                        25
    #define   LSb16SemaHubLite_full_ST_25i                        9
    #define       bSemaHubLite_full_ST_25i                     1
    #define   MSK32SemaHubLite_full_ST_25i                        0x02000000

    #define     BA_SemaHubLite_full_ST_26i                     0x038F
    #define     B16SemaHubLite_full_ST_26i                     0x038E
    #define   LSb32SemaHubLite_full_ST_26i                        26
    #define   LSb16SemaHubLite_full_ST_26i                        10
    #define       bSemaHubLite_full_ST_26i                     1
    #define   MSK32SemaHubLite_full_ST_26i                        0x04000000

    #define     BA_SemaHubLite_full_ST_27i                     0x038F
    #define     B16SemaHubLite_full_ST_27i                     0x038E
    #define   LSb32SemaHubLite_full_ST_27i                        27
    #define   LSb16SemaHubLite_full_ST_27i                        11
    #define       bSemaHubLite_full_ST_27i                     1
    #define   MSK32SemaHubLite_full_ST_27i                        0x08000000

    #define     BA_SemaHubLite_full_ST_28i                     0x038F
    #define     B16SemaHubLite_full_ST_28i                     0x038E
    #define   LSb32SemaHubLite_full_ST_28i                        28
    #define   LSb16SemaHubLite_full_ST_28i                        12
    #define       bSemaHubLite_full_ST_28i                     1
    #define   MSK32SemaHubLite_full_ST_28i                        0x10000000

    #define     BA_SemaHubLite_full_ST_29i                     0x038F
    #define     B16SemaHubLite_full_ST_29i                     0x038E
    #define   LSb32SemaHubLite_full_ST_29i                        29
    #define   LSb16SemaHubLite_full_ST_29i                        13
    #define       bSemaHubLite_full_ST_29i                     1
    #define   MSK32SemaHubLite_full_ST_29i                        0x20000000

    #define     BA_SemaHubLite_full_ST_30i                     0x038F
    #define     B16SemaHubLite_full_ST_30i                     0x038E
    #define   LSb32SemaHubLite_full_ST_30i                        30
    #define   LSb16SemaHubLite_full_ST_30i                        14
    #define       bSemaHubLite_full_ST_30i                     1
    #define   MSK32SemaHubLite_full_ST_30i                        0x40000000

    #define     BA_SemaHubLite_full_ST_31i                     0x038F
    #define     B16SemaHubLite_full_ST_31i                     0x038E
    #define   LSb32SemaHubLite_full_ST_31i                        31
    #define   LSb16SemaHubLite_full_ST_31i                        15
    #define       bSemaHubLite_full_ST_31i                     1
    #define   MSK32SemaHubLite_full_ST_31i                        0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_SemaHubLite_almostEmpty                     0x0390

    #define     BA_SemaHubLite_almostEmpty_ST_0i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_0i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_0i                  0
    #define   LSb16SemaHubLite_almostEmpty_ST_0i                  0
    #define       bSemaHubLite_almostEmpty_ST_0i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_0i                  0x00000001

    #define     BA_SemaHubLite_almostEmpty_ST_1i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_1i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_1i                  1
    #define   LSb16SemaHubLite_almostEmpty_ST_1i                  1
    #define       bSemaHubLite_almostEmpty_ST_1i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_1i                  0x00000002

    #define     BA_SemaHubLite_almostEmpty_ST_2i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_2i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_2i                  2
    #define   LSb16SemaHubLite_almostEmpty_ST_2i                  2
    #define       bSemaHubLite_almostEmpty_ST_2i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_2i                  0x00000004

    #define     BA_SemaHubLite_almostEmpty_ST_3i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_3i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_3i                  3
    #define   LSb16SemaHubLite_almostEmpty_ST_3i                  3
    #define       bSemaHubLite_almostEmpty_ST_3i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_3i                  0x00000008

    #define     BA_SemaHubLite_almostEmpty_ST_4i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_4i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_4i                  4
    #define   LSb16SemaHubLite_almostEmpty_ST_4i                  4
    #define       bSemaHubLite_almostEmpty_ST_4i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_4i                  0x00000010

    #define     BA_SemaHubLite_almostEmpty_ST_5i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_5i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_5i                  5
    #define   LSb16SemaHubLite_almostEmpty_ST_5i                  5
    #define       bSemaHubLite_almostEmpty_ST_5i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_5i                  0x00000020

    #define     BA_SemaHubLite_almostEmpty_ST_6i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_6i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_6i                  6
    #define   LSb16SemaHubLite_almostEmpty_ST_6i                  6
    #define       bSemaHubLite_almostEmpty_ST_6i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_6i                  0x00000040

    #define     BA_SemaHubLite_almostEmpty_ST_7i               0x0390
    #define     B16SemaHubLite_almostEmpty_ST_7i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_7i                  7
    #define   LSb16SemaHubLite_almostEmpty_ST_7i                  7
    #define       bSemaHubLite_almostEmpty_ST_7i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_7i                  0x00000080

    #define     BA_SemaHubLite_almostEmpty_ST_8i               0x0391
    #define     B16SemaHubLite_almostEmpty_ST_8i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_8i                  8
    #define   LSb16SemaHubLite_almostEmpty_ST_8i                  8
    #define       bSemaHubLite_almostEmpty_ST_8i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_8i                  0x00000100

    #define     BA_SemaHubLite_almostEmpty_ST_9i               0x0391
    #define     B16SemaHubLite_almostEmpty_ST_9i               0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_9i                  9
    #define   LSb16SemaHubLite_almostEmpty_ST_9i                  9
    #define       bSemaHubLite_almostEmpty_ST_9i               1
    #define   MSK32SemaHubLite_almostEmpty_ST_9i                  0x00000200

    #define     BA_SemaHubLite_almostEmpty_ST_10i              0x0391
    #define     B16SemaHubLite_almostEmpty_ST_10i              0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_10i                 10
    #define   LSb16SemaHubLite_almostEmpty_ST_10i                 10
    #define       bSemaHubLite_almostEmpty_ST_10i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_10i                 0x00000400

    #define     BA_SemaHubLite_almostEmpty_ST_11i              0x0391
    #define     B16SemaHubLite_almostEmpty_ST_11i              0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_11i                 11
    #define   LSb16SemaHubLite_almostEmpty_ST_11i                 11
    #define       bSemaHubLite_almostEmpty_ST_11i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_11i                 0x00000800

    #define     BA_SemaHubLite_almostEmpty_ST_12i              0x0391
    #define     B16SemaHubLite_almostEmpty_ST_12i              0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_12i                 12
    #define   LSb16SemaHubLite_almostEmpty_ST_12i                 12
    #define       bSemaHubLite_almostEmpty_ST_12i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_12i                 0x00001000

    #define     BA_SemaHubLite_almostEmpty_ST_13i              0x0391
    #define     B16SemaHubLite_almostEmpty_ST_13i              0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_13i                 13
    #define   LSb16SemaHubLite_almostEmpty_ST_13i                 13
    #define       bSemaHubLite_almostEmpty_ST_13i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_13i                 0x00002000

    #define     BA_SemaHubLite_almostEmpty_ST_14i              0x0391
    #define     B16SemaHubLite_almostEmpty_ST_14i              0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_14i                 14
    #define   LSb16SemaHubLite_almostEmpty_ST_14i                 14
    #define       bSemaHubLite_almostEmpty_ST_14i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_14i                 0x00004000

    #define     BA_SemaHubLite_almostEmpty_ST_15i              0x0391
    #define     B16SemaHubLite_almostEmpty_ST_15i              0x0390
    #define   LSb32SemaHubLite_almostEmpty_ST_15i                 15
    #define   LSb16SemaHubLite_almostEmpty_ST_15i                 15
    #define       bSemaHubLite_almostEmpty_ST_15i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_15i                 0x00008000

    #define     BA_SemaHubLite_almostEmpty_ST_16i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_16i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_16i                 16
    #define   LSb16SemaHubLite_almostEmpty_ST_16i                 0
    #define       bSemaHubLite_almostEmpty_ST_16i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_16i                 0x00010000

    #define     BA_SemaHubLite_almostEmpty_ST_17i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_17i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_17i                 17
    #define   LSb16SemaHubLite_almostEmpty_ST_17i                 1
    #define       bSemaHubLite_almostEmpty_ST_17i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_17i                 0x00020000

    #define     BA_SemaHubLite_almostEmpty_ST_18i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_18i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_18i                 18
    #define   LSb16SemaHubLite_almostEmpty_ST_18i                 2
    #define       bSemaHubLite_almostEmpty_ST_18i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_18i                 0x00040000

    #define     BA_SemaHubLite_almostEmpty_ST_19i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_19i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_19i                 19
    #define   LSb16SemaHubLite_almostEmpty_ST_19i                 3
    #define       bSemaHubLite_almostEmpty_ST_19i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_19i                 0x00080000

    #define     BA_SemaHubLite_almostEmpty_ST_20i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_20i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_20i                 20
    #define   LSb16SemaHubLite_almostEmpty_ST_20i                 4
    #define       bSemaHubLite_almostEmpty_ST_20i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_20i                 0x00100000

    #define     BA_SemaHubLite_almostEmpty_ST_21i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_21i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_21i                 21
    #define   LSb16SemaHubLite_almostEmpty_ST_21i                 5
    #define       bSemaHubLite_almostEmpty_ST_21i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_21i                 0x00200000

    #define     BA_SemaHubLite_almostEmpty_ST_22i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_22i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_22i                 22
    #define   LSb16SemaHubLite_almostEmpty_ST_22i                 6
    #define       bSemaHubLite_almostEmpty_ST_22i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_22i                 0x00400000

    #define     BA_SemaHubLite_almostEmpty_ST_23i              0x0392
    #define     B16SemaHubLite_almostEmpty_ST_23i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_23i                 23
    #define   LSb16SemaHubLite_almostEmpty_ST_23i                 7
    #define       bSemaHubLite_almostEmpty_ST_23i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_23i                 0x00800000

    #define     BA_SemaHubLite_almostEmpty_ST_24i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_24i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_24i                 24
    #define   LSb16SemaHubLite_almostEmpty_ST_24i                 8
    #define       bSemaHubLite_almostEmpty_ST_24i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_24i                 0x01000000

    #define     BA_SemaHubLite_almostEmpty_ST_25i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_25i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_25i                 25
    #define   LSb16SemaHubLite_almostEmpty_ST_25i                 9
    #define       bSemaHubLite_almostEmpty_ST_25i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_25i                 0x02000000

    #define     BA_SemaHubLite_almostEmpty_ST_26i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_26i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_26i                 26
    #define   LSb16SemaHubLite_almostEmpty_ST_26i                 10
    #define       bSemaHubLite_almostEmpty_ST_26i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_26i                 0x04000000

    #define     BA_SemaHubLite_almostEmpty_ST_27i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_27i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_27i                 27
    #define   LSb16SemaHubLite_almostEmpty_ST_27i                 11
    #define       bSemaHubLite_almostEmpty_ST_27i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_27i                 0x08000000

    #define     BA_SemaHubLite_almostEmpty_ST_28i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_28i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_28i                 28
    #define   LSb16SemaHubLite_almostEmpty_ST_28i                 12
    #define       bSemaHubLite_almostEmpty_ST_28i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_28i                 0x10000000

    #define     BA_SemaHubLite_almostEmpty_ST_29i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_29i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_29i                 29
    #define   LSb16SemaHubLite_almostEmpty_ST_29i                 13
    #define       bSemaHubLite_almostEmpty_ST_29i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_29i                 0x20000000

    #define     BA_SemaHubLite_almostEmpty_ST_30i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_30i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_30i                 30
    #define   LSb16SemaHubLite_almostEmpty_ST_30i                 14
    #define       bSemaHubLite_almostEmpty_ST_30i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_30i                 0x40000000

    #define     BA_SemaHubLite_almostEmpty_ST_31i              0x0393
    #define     B16SemaHubLite_almostEmpty_ST_31i              0x0392
    #define   LSb32SemaHubLite_almostEmpty_ST_31i                 31
    #define   LSb16SemaHubLite_almostEmpty_ST_31i                 15
    #define       bSemaHubLite_almostEmpty_ST_31i              1
    #define   MSK32SemaHubLite_almostEmpty_ST_31i                 0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_SemaHubLite_almostFull                      0x0394

    #define     BA_SemaHubLite_almostFull_ST_0i                0x0394
    #define     B16SemaHubLite_almostFull_ST_0i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_0i                   0
    #define   LSb16SemaHubLite_almostFull_ST_0i                   0
    #define       bSemaHubLite_almostFull_ST_0i                1
    #define   MSK32SemaHubLite_almostFull_ST_0i                   0x00000001

    #define     BA_SemaHubLite_almostFull_ST_1i                0x0394
    #define     B16SemaHubLite_almostFull_ST_1i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_1i                   1
    #define   LSb16SemaHubLite_almostFull_ST_1i                   1
    #define       bSemaHubLite_almostFull_ST_1i                1
    #define   MSK32SemaHubLite_almostFull_ST_1i                   0x00000002

    #define     BA_SemaHubLite_almostFull_ST_2i                0x0394
    #define     B16SemaHubLite_almostFull_ST_2i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_2i                   2
    #define   LSb16SemaHubLite_almostFull_ST_2i                   2
    #define       bSemaHubLite_almostFull_ST_2i                1
    #define   MSK32SemaHubLite_almostFull_ST_2i                   0x00000004

    #define     BA_SemaHubLite_almostFull_ST_3i                0x0394
    #define     B16SemaHubLite_almostFull_ST_3i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_3i                   3
    #define   LSb16SemaHubLite_almostFull_ST_3i                   3
    #define       bSemaHubLite_almostFull_ST_3i                1
    #define   MSK32SemaHubLite_almostFull_ST_3i                   0x00000008

    #define     BA_SemaHubLite_almostFull_ST_4i                0x0394
    #define     B16SemaHubLite_almostFull_ST_4i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_4i                   4
    #define   LSb16SemaHubLite_almostFull_ST_4i                   4
    #define       bSemaHubLite_almostFull_ST_4i                1
    #define   MSK32SemaHubLite_almostFull_ST_4i                   0x00000010

    #define     BA_SemaHubLite_almostFull_ST_5i                0x0394
    #define     B16SemaHubLite_almostFull_ST_5i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_5i                   5
    #define   LSb16SemaHubLite_almostFull_ST_5i                   5
    #define       bSemaHubLite_almostFull_ST_5i                1
    #define   MSK32SemaHubLite_almostFull_ST_5i                   0x00000020

    #define     BA_SemaHubLite_almostFull_ST_6i                0x0394
    #define     B16SemaHubLite_almostFull_ST_6i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_6i                   6
    #define   LSb16SemaHubLite_almostFull_ST_6i                   6
    #define       bSemaHubLite_almostFull_ST_6i                1
    #define   MSK32SemaHubLite_almostFull_ST_6i                   0x00000040

    #define     BA_SemaHubLite_almostFull_ST_7i                0x0394
    #define     B16SemaHubLite_almostFull_ST_7i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_7i                   7
    #define   LSb16SemaHubLite_almostFull_ST_7i                   7
    #define       bSemaHubLite_almostFull_ST_7i                1
    #define   MSK32SemaHubLite_almostFull_ST_7i                   0x00000080

    #define     BA_SemaHubLite_almostFull_ST_8i                0x0395
    #define     B16SemaHubLite_almostFull_ST_8i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_8i                   8
    #define   LSb16SemaHubLite_almostFull_ST_8i                   8
    #define       bSemaHubLite_almostFull_ST_8i                1
    #define   MSK32SemaHubLite_almostFull_ST_8i                   0x00000100

    #define     BA_SemaHubLite_almostFull_ST_9i                0x0395
    #define     B16SemaHubLite_almostFull_ST_9i                0x0394
    #define   LSb32SemaHubLite_almostFull_ST_9i                   9
    #define   LSb16SemaHubLite_almostFull_ST_9i                   9
    #define       bSemaHubLite_almostFull_ST_9i                1
    #define   MSK32SemaHubLite_almostFull_ST_9i                   0x00000200

    #define     BA_SemaHubLite_almostFull_ST_10i               0x0395
    #define     B16SemaHubLite_almostFull_ST_10i               0x0394
    #define   LSb32SemaHubLite_almostFull_ST_10i                  10
    #define   LSb16SemaHubLite_almostFull_ST_10i                  10
    #define       bSemaHubLite_almostFull_ST_10i               1
    #define   MSK32SemaHubLite_almostFull_ST_10i                  0x00000400

    #define     BA_SemaHubLite_almostFull_ST_11i               0x0395
    #define     B16SemaHubLite_almostFull_ST_11i               0x0394
    #define   LSb32SemaHubLite_almostFull_ST_11i                  11
    #define   LSb16SemaHubLite_almostFull_ST_11i                  11
    #define       bSemaHubLite_almostFull_ST_11i               1
    #define   MSK32SemaHubLite_almostFull_ST_11i                  0x00000800

    #define     BA_SemaHubLite_almostFull_ST_12i               0x0395
    #define     B16SemaHubLite_almostFull_ST_12i               0x0394
    #define   LSb32SemaHubLite_almostFull_ST_12i                  12
    #define   LSb16SemaHubLite_almostFull_ST_12i                  12
    #define       bSemaHubLite_almostFull_ST_12i               1
    #define   MSK32SemaHubLite_almostFull_ST_12i                  0x00001000

    #define     BA_SemaHubLite_almostFull_ST_13i               0x0395
    #define     B16SemaHubLite_almostFull_ST_13i               0x0394
    #define   LSb32SemaHubLite_almostFull_ST_13i                  13
    #define   LSb16SemaHubLite_almostFull_ST_13i                  13
    #define       bSemaHubLite_almostFull_ST_13i               1
    #define   MSK32SemaHubLite_almostFull_ST_13i                  0x00002000

    #define     BA_SemaHubLite_almostFull_ST_14i               0x0395
    #define     B16SemaHubLite_almostFull_ST_14i               0x0394
    #define   LSb32SemaHubLite_almostFull_ST_14i                  14
    #define   LSb16SemaHubLite_almostFull_ST_14i                  14
    #define       bSemaHubLite_almostFull_ST_14i               1
    #define   MSK32SemaHubLite_almostFull_ST_14i                  0x00004000

    #define     BA_SemaHubLite_almostFull_ST_15i               0x0395
    #define     B16SemaHubLite_almostFull_ST_15i               0x0394
    #define   LSb32SemaHubLite_almostFull_ST_15i                  15
    #define   LSb16SemaHubLite_almostFull_ST_15i                  15
    #define       bSemaHubLite_almostFull_ST_15i               1
    #define   MSK32SemaHubLite_almostFull_ST_15i                  0x00008000

    #define     BA_SemaHubLite_almostFull_ST_16i               0x0396
    #define     B16SemaHubLite_almostFull_ST_16i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_16i                  16
    #define   LSb16SemaHubLite_almostFull_ST_16i                  0
    #define       bSemaHubLite_almostFull_ST_16i               1
    #define   MSK32SemaHubLite_almostFull_ST_16i                  0x00010000

    #define     BA_SemaHubLite_almostFull_ST_17i               0x0396
    #define     B16SemaHubLite_almostFull_ST_17i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_17i                  17
    #define   LSb16SemaHubLite_almostFull_ST_17i                  1
    #define       bSemaHubLite_almostFull_ST_17i               1
    #define   MSK32SemaHubLite_almostFull_ST_17i                  0x00020000

    #define     BA_SemaHubLite_almostFull_ST_18i               0x0396
    #define     B16SemaHubLite_almostFull_ST_18i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_18i                  18
    #define   LSb16SemaHubLite_almostFull_ST_18i                  2
    #define       bSemaHubLite_almostFull_ST_18i               1
    #define   MSK32SemaHubLite_almostFull_ST_18i                  0x00040000

    #define     BA_SemaHubLite_almostFull_ST_19i               0x0396
    #define     B16SemaHubLite_almostFull_ST_19i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_19i                  19
    #define   LSb16SemaHubLite_almostFull_ST_19i                  3
    #define       bSemaHubLite_almostFull_ST_19i               1
    #define   MSK32SemaHubLite_almostFull_ST_19i                  0x00080000

    #define     BA_SemaHubLite_almostFull_ST_20i               0x0396
    #define     B16SemaHubLite_almostFull_ST_20i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_20i                  20
    #define   LSb16SemaHubLite_almostFull_ST_20i                  4
    #define       bSemaHubLite_almostFull_ST_20i               1
    #define   MSK32SemaHubLite_almostFull_ST_20i                  0x00100000

    #define     BA_SemaHubLite_almostFull_ST_21i               0x0396
    #define     B16SemaHubLite_almostFull_ST_21i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_21i                  21
    #define   LSb16SemaHubLite_almostFull_ST_21i                  5
    #define       bSemaHubLite_almostFull_ST_21i               1
    #define   MSK32SemaHubLite_almostFull_ST_21i                  0x00200000

    #define     BA_SemaHubLite_almostFull_ST_22i               0x0396
    #define     B16SemaHubLite_almostFull_ST_22i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_22i                  22
    #define   LSb16SemaHubLite_almostFull_ST_22i                  6
    #define       bSemaHubLite_almostFull_ST_22i               1
    #define   MSK32SemaHubLite_almostFull_ST_22i                  0x00400000

    #define     BA_SemaHubLite_almostFull_ST_23i               0x0396
    #define     B16SemaHubLite_almostFull_ST_23i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_23i                  23
    #define   LSb16SemaHubLite_almostFull_ST_23i                  7
    #define       bSemaHubLite_almostFull_ST_23i               1
    #define   MSK32SemaHubLite_almostFull_ST_23i                  0x00800000

    #define     BA_SemaHubLite_almostFull_ST_24i               0x0397
    #define     B16SemaHubLite_almostFull_ST_24i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_24i                  24
    #define   LSb16SemaHubLite_almostFull_ST_24i                  8
    #define       bSemaHubLite_almostFull_ST_24i               1
    #define   MSK32SemaHubLite_almostFull_ST_24i                  0x01000000

    #define     BA_SemaHubLite_almostFull_ST_25i               0x0397
    #define     B16SemaHubLite_almostFull_ST_25i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_25i                  25
    #define   LSb16SemaHubLite_almostFull_ST_25i                  9
    #define       bSemaHubLite_almostFull_ST_25i               1
    #define   MSK32SemaHubLite_almostFull_ST_25i                  0x02000000

    #define     BA_SemaHubLite_almostFull_ST_26i               0x0397
    #define     B16SemaHubLite_almostFull_ST_26i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_26i                  26
    #define   LSb16SemaHubLite_almostFull_ST_26i                  10
    #define       bSemaHubLite_almostFull_ST_26i               1
    #define   MSK32SemaHubLite_almostFull_ST_26i                  0x04000000

    #define     BA_SemaHubLite_almostFull_ST_27i               0x0397
    #define     B16SemaHubLite_almostFull_ST_27i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_27i                  27
    #define   LSb16SemaHubLite_almostFull_ST_27i                  11
    #define       bSemaHubLite_almostFull_ST_27i               1
    #define   MSK32SemaHubLite_almostFull_ST_27i                  0x08000000

    #define     BA_SemaHubLite_almostFull_ST_28i               0x0397
    #define     B16SemaHubLite_almostFull_ST_28i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_28i                  28
    #define   LSb16SemaHubLite_almostFull_ST_28i                  12
    #define       bSemaHubLite_almostFull_ST_28i               1
    #define   MSK32SemaHubLite_almostFull_ST_28i                  0x10000000

    #define     BA_SemaHubLite_almostFull_ST_29i               0x0397
    #define     B16SemaHubLite_almostFull_ST_29i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_29i                  29
    #define   LSb16SemaHubLite_almostFull_ST_29i                  13
    #define       bSemaHubLite_almostFull_ST_29i               1
    #define   MSK32SemaHubLite_almostFull_ST_29i                  0x20000000

    #define     BA_SemaHubLite_almostFull_ST_30i               0x0397
    #define     B16SemaHubLite_almostFull_ST_30i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_30i                  30
    #define   LSb16SemaHubLite_almostFull_ST_30i                  14
    #define       bSemaHubLite_almostFull_ST_30i               1
    #define   MSK32SemaHubLite_almostFull_ST_30i                  0x40000000

    #define     BA_SemaHubLite_almostFull_ST_31i               0x0397
    #define     B16SemaHubLite_almostFull_ST_31i               0x0396
    #define   LSb32SemaHubLite_almostFull_ST_31i                  31
    #define   LSb16SemaHubLite_almostFull_ST_31i                  15
    #define       bSemaHubLite_almostFull_ST_31i               1
    #define   MSK32SemaHubLite_almostFull_ST_31i                  0x80000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SemaHubLite {
    ///////////////////////////////////////////////////////////
              SIE_SemaQueryLite                                ie_counter[64];
    ///////////////////////////////////////////////////////////
              SIE_SemaphoreLite                                ie_cell[32];
    ///////////////////////////////////////////////////////////
    #define   GET32SemaHubLite_PUSH_ID(r32)                    _BFGET_(r32, 7, 0)
    #define   SET32SemaHubLite_PUSH_ID(r32,v)                  _BFSET_(r32, 7, 0,v)
    #define   GET16SemaHubLite_PUSH_ID(r16)                    _BFGET_(r16, 7, 0)
    #define   SET16SemaHubLite_PUSH_ID(r16,v)                  _BFSET_(r16, 7, 0,v)

    #define   GET32SemaHubLite_PUSH_delta(r32)                 _BFGET_(r32,15, 8)
    #define   SET32SemaHubLite_PUSH_delta(r32,v)               _BFSET_(r32,15, 8,v)
    #define   GET16SemaHubLite_PUSH_delta(r16)                 _BFGET_(r16,15, 8)
    #define   SET16SemaHubLite_PUSH_delta(r16,v)               _BFSET_(r16,15, 8,v)

    #define     w32SemaHubLite_PUSH                            {\
            UNSG32 uPUSH_ID                                    :  8;\
            UNSG32 uPUSH_delta                                 :  8;\
            UNSG32 RSVDx380_b16                                : 16;\
          }
    union { UNSG32 u32SemaHubLite_PUSH;
            struct w32SemaHubLite_PUSH;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SemaHubLite_POP_ID(r32)                     _BFGET_(r32, 7, 0)
    #define   SET32SemaHubLite_POP_ID(r32,v)                   _BFSET_(r32, 7, 0,v)
    #define   GET16SemaHubLite_POP_ID(r16)                     _BFGET_(r16, 7, 0)
    #define   SET16SemaHubLite_POP_ID(r16,v)                   _BFSET_(r16, 7, 0,v)

    #define   GET32SemaHubLite_POP_delta(r32)                  _BFGET_(r32,15, 8)
    #define   SET32SemaHubLite_POP_delta(r32,v)                _BFSET_(r32,15, 8,v)
    #define   GET16SemaHubLite_POP_delta(r16)                  _BFGET_(r16,15, 8)
    #define   SET16SemaHubLite_POP_delta(r16,v)                _BFSET_(r16,15, 8,v)

    #define     w32SemaHubLite_POP                             {\
            UNSG32 uPOP_ID                                     :  8;\
            UNSG32 uPOP_delta                                  :  8;\
            UNSG32 RSVDx384_b16                                : 16;\
          }
    union { UNSG32 u32SemaHubLite_POP;
            struct w32SemaHubLite_POP;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SemaHubLite_empty_ST_0i(r32)                _BFGET_(r32, 0, 0)
    #define   SET32SemaHubLite_empty_ST_0i(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16SemaHubLite_empty_ST_0i(r16)                _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_empty_ST_0i(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_empty_ST_1i(r32)                _BFGET_(r32, 1, 1)
    #define   SET32SemaHubLite_empty_ST_1i(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16SemaHubLite_empty_ST_1i(r16)                _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_empty_ST_1i(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_empty_ST_2i(r32)                _BFGET_(r32, 2, 2)
    #define   SET32SemaHubLite_empty_ST_2i(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16SemaHubLite_empty_ST_2i(r16)                _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_empty_ST_2i(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_empty_ST_3i(r32)                _BFGET_(r32, 3, 3)
    #define   SET32SemaHubLite_empty_ST_3i(r32,v)              _BFSET_(r32, 3, 3,v)
    #define   GET16SemaHubLite_empty_ST_3i(r16)                _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_empty_ST_3i(r16,v)              _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_empty_ST_4i(r32)                _BFGET_(r32, 4, 4)
    #define   SET32SemaHubLite_empty_ST_4i(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16SemaHubLite_empty_ST_4i(r16)                _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_empty_ST_4i(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_empty_ST_5i(r32)                _BFGET_(r32, 5, 5)
    #define   SET32SemaHubLite_empty_ST_5i(r32,v)              _BFSET_(r32, 5, 5,v)
    #define   GET16SemaHubLite_empty_ST_5i(r16)                _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_empty_ST_5i(r16,v)              _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_empty_ST_6i(r32)                _BFGET_(r32, 6, 6)
    #define   SET32SemaHubLite_empty_ST_6i(r32,v)              _BFSET_(r32, 6, 6,v)
    #define   GET16SemaHubLite_empty_ST_6i(r16)                _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_empty_ST_6i(r16,v)              _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_empty_ST_7i(r32)                _BFGET_(r32, 7, 7)
    #define   SET32SemaHubLite_empty_ST_7i(r32,v)              _BFSET_(r32, 7, 7,v)
    #define   GET16SemaHubLite_empty_ST_7i(r16)                _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_empty_ST_7i(r16,v)              _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_empty_ST_8i(r32)                _BFGET_(r32, 8, 8)
    #define   SET32SemaHubLite_empty_ST_8i(r32,v)              _BFSET_(r32, 8, 8,v)
    #define   GET16SemaHubLite_empty_ST_8i(r16)                _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_empty_ST_8i(r16,v)              _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_empty_ST_9i(r32)                _BFGET_(r32, 9, 9)
    #define   SET32SemaHubLite_empty_ST_9i(r32,v)              _BFSET_(r32, 9, 9,v)
    #define   GET16SemaHubLite_empty_ST_9i(r16)                _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_empty_ST_9i(r16,v)              _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_empty_ST_10i(r32)               _BFGET_(r32,10,10)
    #define   SET32SemaHubLite_empty_ST_10i(r32,v)             _BFSET_(r32,10,10,v)
    #define   GET16SemaHubLite_empty_ST_10i(r16)               _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_empty_ST_10i(r16,v)             _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_empty_ST_11i(r32)               _BFGET_(r32,11,11)
    #define   SET32SemaHubLite_empty_ST_11i(r32,v)             _BFSET_(r32,11,11,v)
    #define   GET16SemaHubLite_empty_ST_11i(r16)               _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_empty_ST_11i(r16,v)             _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_empty_ST_12i(r32)               _BFGET_(r32,12,12)
    #define   SET32SemaHubLite_empty_ST_12i(r32,v)             _BFSET_(r32,12,12,v)
    #define   GET16SemaHubLite_empty_ST_12i(r16)               _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_empty_ST_12i(r16,v)             _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_empty_ST_13i(r32)               _BFGET_(r32,13,13)
    #define   SET32SemaHubLite_empty_ST_13i(r32,v)             _BFSET_(r32,13,13,v)
    #define   GET16SemaHubLite_empty_ST_13i(r16)               _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_empty_ST_13i(r16,v)             _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_empty_ST_14i(r32)               _BFGET_(r32,14,14)
    #define   SET32SemaHubLite_empty_ST_14i(r32,v)             _BFSET_(r32,14,14,v)
    #define   GET16SemaHubLite_empty_ST_14i(r16)               _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_empty_ST_14i(r16,v)             _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_empty_ST_15i(r32)               _BFGET_(r32,15,15)
    #define   SET32SemaHubLite_empty_ST_15i(r32,v)             _BFSET_(r32,15,15,v)
    #define   GET16SemaHubLite_empty_ST_15i(r16)               _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_empty_ST_15i(r16,v)             _BFSET_(r16,15,15,v)

    #define   GET32SemaHubLite_empty_ST_16i(r32)               _BFGET_(r32,16,16)
    #define   SET32SemaHubLite_empty_ST_16i(r32,v)             _BFSET_(r32,16,16,v)
    #define   GET16SemaHubLite_empty_ST_16i(r16)               _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_empty_ST_16i(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_empty_ST_17i(r32)               _BFGET_(r32,17,17)
    #define   SET32SemaHubLite_empty_ST_17i(r32,v)             _BFSET_(r32,17,17,v)
    #define   GET16SemaHubLite_empty_ST_17i(r16)               _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_empty_ST_17i(r16,v)             _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_empty_ST_18i(r32)               _BFGET_(r32,18,18)
    #define   SET32SemaHubLite_empty_ST_18i(r32,v)             _BFSET_(r32,18,18,v)
    #define   GET16SemaHubLite_empty_ST_18i(r16)               _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_empty_ST_18i(r16,v)             _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_empty_ST_19i(r32)               _BFGET_(r32,19,19)
    #define   SET32SemaHubLite_empty_ST_19i(r32,v)             _BFSET_(r32,19,19,v)
    #define   GET16SemaHubLite_empty_ST_19i(r16)               _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_empty_ST_19i(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_empty_ST_20i(r32)               _BFGET_(r32,20,20)
    #define   SET32SemaHubLite_empty_ST_20i(r32,v)             _BFSET_(r32,20,20,v)
    #define   GET16SemaHubLite_empty_ST_20i(r16)               _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_empty_ST_20i(r16,v)             _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_empty_ST_21i(r32)               _BFGET_(r32,21,21)
    #define   SET32SemaHubLite_empty_ST_21i(r32,v)             _BFSET_(r32,21,21,v)
    #define   GET16SemaHubLite_empty_ST_21i(r16)               _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_empty_ST_21i(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_empty_ST_22i(r32)               _BFGET_(r32,22,22)
    #define   SET32SemaHubLite_empty_ST_22i(r32,v)             _BFSET_(r32,22,22,v)
    #define   GET16SemaHubLite_empty_ST_22i(r16)               _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_empty_ST_22i(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_empty_ST_23i(r32)               _BFGET_(r32,23,23)
    #define   SET32SemaHubLite_empty_ST_23i(r32,v)             _BFSET_(r32,23,23,v)
    #define   GET16SemaHubLite_empty_ST_23i(r16)               _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_empty_ST_23i(r16,v)             _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_empty_ST_24i(r32)               _BFGET_(r32,24,24)
    #define   SET32SemaHubLite_empty_ST_24i(r32,v)             _BFSET_(r32,24,24,v)
    #define   GET16SemaHubLite_empty_ST_24i(r16)               _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_empty_ST_24i(r16,v)             _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_empty_ST_25i(r32)               _BFGET_(r32,25,25)
    #define   SET32SemaHubLite_empty_ST_25i(r32,v)             _BFSET_(r32,25,25,v)
    #define   GET16SemaHubLite_empty_ST_25i(r16)               _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_empty_ST_25i(r16,v)             _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_empty_ST_26i(r32)               _BFGET_(r32,26,26)
    #define   SET32SemaHubLite_empty_ST_26i(r32,v)             _BFSET_(r32,26,26,v)
    #define   GET16SemaHubLite_empty_ST_26i(r16)               _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_empty_ST_26i(r16,v)             _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_empty_ST_27i(r32)               _BFGET_(r32,27,27)
    #define   SET32SemaHubLite_empty_ST_27i(r32,v)             _BFSET_(r32,27,27,v)
    #define   GET16SemaHubLite_empty_ST_27i(r16)               _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_empty_ST_27i(r16,v)             _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_empty_ST_28i(r32)               _BFGET_(r32,28,28)
    #define   SET32SemaHubLite_empty_ST_28i(r32,v)             _BFSET_(r32,28,28,v)
    #define   GET16SemaHubLite_empty_ST_28i(r16)               _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_empty_ST_28i(r16,v)             _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_empty_ST_29i(r32)               _BFGET_(r32,29,29)
    #define   SET32SemaHubLite_empty_ST_29i(r32,v)             _BFSET_(r32,29,29,v)
    #define   GET16SemaHubLite_empty_ST_29i(r16)               _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_empty_ST_29i(r16,v)             _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_empty_ST_30i(r32)               _BFGET_(r32,30,30)
    #define   SET32SemaHubLite_empty_ST_30i(r32,v)             _BFSET_(r32,30,30,v)
    #define   GET16SemaHubLite_empty_ST_30i(r16)               _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_empty_ST_30i(r16,v)             _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_empty_ST_31i(r32)               _BFGET_(r32,31,31)
    #define   SET32SemaHubLite_empty_ST_31i(r32,v)             _BFSET_(r32,31,31,v)
    #define   GET16SemaHubLite_empty_ST_31i(r16)               _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_empty_ST_31i(r16,v)             _BFSET_(r16,15,15,v)

    #define     w32SemaHubLite_empty                           {\
            UNSG32 uempty_ST_0i                                :  1;\
            UNSG32 uempty_ST_1i                                :  1;\
            UNSG32 uempty_ST_2i                                :  1;\
            UNSG32 uempty_ST_3i                                :  1;\
            UNSG32 uempty_ST_4i                                :  1;\
            UNSG32 uempty_ST_5i                                :  1;\
            UNSG32 uempty_ST_6i                                :  1;\
            UNSG32 uempty_ST_7i                                :  1;\
            UNSG32 uempty_ST_8i                                :  1;\
            UNSG32 uempty_ST_9i                                :  1;\
            UNSG32 uempty_ST_10i                               :  1;\
            UNSG32 uempty_ST_11i                               :  1;\
            UNSG32 uempty_ST_12i                               :  1;\
            UNSG32 uempty_ST_13i                               :  1;\
            UNSG32 uempty_ST_14i                               :  1;\
            UNSG32 uempty_ST_15i                               :  1;\
            UNSG32 uempty_ST_16i                               :  1;\
            UNSG32 uempty_ST_17i                               :  1;\
            UNSG32 uempty_ST_18i                               :  1;\
            UNSG32 uempty_ST_19i                               :  1;\
            UNSG32 uempty_ST_20i                               :  1;\
            UNSG32 uempty_ST_21i                               :  1;\
            UNSG32 uempty_ST_22i                               :  1;\
            UNSG32 uempty_ST_23i                               :  1;\
            UNSG32 uempty_ST_24i                               :  1;\
            UNSG32 uempty_ST_25i                               :  1;\
            UNSG32 uempty_ST_26i                               :  1;\
            UNSG32 uempty_ST_27i                               :  1;\
            UNSG32 uempty_ST_28i                               :  1;\
            UNSG32 uempty_ST_29i                               :  1;\
            UNSG32 uempty_ST_30i                               :  1;\
            UNSG32 uempty_ST_31i                               :  1;\
          }
    union { UNSG32 u32SemaHubLite_empty;
            struct w32SemaHubLite_empty;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SemaHubLite_full_ST_0i(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32SemaHubLite_full_ST_0i(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16SemaHubLite_full_ST_0i(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_full_ST_0i(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_full_ST_1i(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32SemaHubLite_full_ST_1i(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16SemaHubLite_full_ST_1i(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_full_ST_1i(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_full_ST_2i(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32SemaHubLite_full_ST_2i(r32,v)               _BFSET_(r32, 2, 2,v)
    #define   GET16SemaHubLite_full_ST_2i(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_full_ST_2i(r16,v)               _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_full_ST_3i(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32SemaHubLite_full_ST_3i(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16SemaHubLite_full_ST_3i(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_full_ST_3i(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_full_ST_4i(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32SemaHubLite_full_ST_4i(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16SemaHubLite_full_ST_4i(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_full_ST_4i(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_full_ST_5i(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32SemaHubLite_full_ST_5i(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16SemaHubLite_full_ST_5i(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_full_ST_5i(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_full_ST_6i(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32SemaHubLite_full_ST_6i(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16SemaHubLite_full_ST_6i(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_full_ST_6i(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_full_ST_7i(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32SemaHubLite_full_ST_7i(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16SemaHubLite_full_ST_7i(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_full_ST_7i(r16,v)               _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_full_ST_8i(r32)                 _BFGET_(r32, 8, 8)
    #define   SET32SemaHubLite_full_ST_8i(r32,v)               _BFSET_(r32, 8, 8,v)
    #define   GET16SemaHubLite_full_ST_8i(r16)                 _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_full_ST_8i(r16,v)               _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_full_ST_9i(r32)                 _BFGET_(r32, 9, 9)
    #define   SET32SemaHubLite_full_ST_9i(r32,v)               _BFSET_(r32, 9, 9,v)
    #define   GET16SemaHubLite_full_ST_9i(r16)                 _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_full_ST_9i(r16,v)               _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_full_ST_10i(r32)                _BFGET_(r32,10,10)
    #define   SET32SemaHubLite_full_ST_10i(r32,v)              _BFSET_(r32,10,10,v)
    #define   GET16SemaHubLite_full_ST_10i(r16)                _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_full_ST_10i(r16,v)              _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_full_ST_11i(r32)                _BFGET_(r32,11,11)
    #define   SET32SemaHubLite_full_ST_11i(r32,v)              _BFSET_(r32,11,11,v)
    #define   GET16SemaHubLite_full_ST_11i(r16)                _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_full_ST_11i(r16,v)              _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_full_ST_12i(r32)                _BFGET_(r32,12,12)
    #define   SET32SemaHubLite_full_ST_12i(r32,v)              _BFSET_(r32,12,12,v)
    #define   GET16SemaHubLite_full_ST_12i(r16)                _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_full_ST_12i(r16,v)              _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_full_ST_13i(r32)                _BFGET_(r32,13,13)
    #define   SET32SemaHubLite_full_ST_13i(r32,v)              _BFSET_(r32,13,13,v)
    #define   GET16SemaHubLite_full_ST_13i(r16)                _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_full_ST_13i(r16,v)              _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_full_ST_14i(r32)                _BFGET_(r32,14,14)
    #define   SET32SemaHubLite_full_ST_14i(r32,v)              _BFSET_(r32,14,14,v)
    #define   GET16SemaHubLite_full_ST_14i(r16)                _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_full_ST_14i(r16,v)              _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_full_ST_15i(r32)                _BFGET_(r32,15,15)
    #define   SET32SemaHubLite_full_ST_15i(r32,v)              _BFSET_(r32,15,15,v)
    #define   GET16SemaHubLite_full_ST_15i(r16)                _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_full_ST_15i(r16,v)              _BFSET_(r16,15,15,v)

    #define   GET32SemaHubLite_full_ST_16i(r32)                _BFGET_(r32,16,16)
    #define   SET32SemaHubLite_full_ST_16i(r32,v)              _BFSET_(r32,16,16,v)
    #define   GET16SemaHubLite_full_ST_16i(r16)                _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_full_ST_16i(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_full_ST_17i(r32)                _BFGET_(r32,17,17)
    #define   SET32SemaHubLite_full_ST_17i(r32,v)              _BFSET_(r32,17,17,v)
    #define   GET16SemaHubLite_full_ST_17i(r16)                _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_full_ST_17i(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_full_ST_18i(r32)                _BFGET_(r32,18,18)
    #define   SET32SemaHubLite_full_ST_18i(r32,v)              _BFSET_(r32,18,18,v)
    #define   GET16SemaHubLite_full_ST_18i(r16)                _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_full_ST_18i(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_full_ST_19i(r32)                _BFGET_(r32,19,19)
    #define   SET32SemaHubLite_full_ST_19i(r32,v)              _BFSET_(r32,19,19,v)
    #define   GET16SemaHubLite_full_ST_19i(r16)                _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_full_ST_19i(r16,v)              _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_full_ST_20i(r32)                _BFGET_(r32,20,20)
    #define   SET32SemaHubLite_full_ST_20i(r32,v)              _BFSET_(r32,20,20,v)
    #define   GET16SemaHubLite_full_ST_20i(r16)                _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_full_ST_20i(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_full_ST_21i(r32)                _BFGET_(r32,21,21)
    #define   SET32SemaHubLite_full_ST_21i(r32,v)              _BFSET_(r32,21,21,v)
    #define   GET16SemaHubLite_full_ST_21i(r16)                _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_full_ST_21i(r16,v)              _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_full_ST_22i(r32)                _BFGET_(r32,22,22)
    #define   SET32SemaHubLite_full_ST_22i(r32,v)              _BFSET_(r32,22,22,v)
    #define   GET16SemaHubLite_full_ST_22i(r16)                _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_full_ST_22i(r16,v)              _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_full_ST_23i(r32)                _BFGET_(r32,23,23)
    #define   SET32SemaHubLite_full_ST_23i(r32,v)              _BFSET_(r32,23,23,v)
    #define   GET16SemaHubLite_full_ST_23i(r16)                _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_full_ST_23i(r16,v)              _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_full_ST_24i(r32)                _BFGET_(r32,24,24)
    #define   SET32SemaHubLite_full_ST_24i(r32,v)              _BFSET_(r32,24,24,v)
    #define   GET16SemaHubLite_full_ST_24i(r16)                _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_full_ST_24i(r16,v)              _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_full_ST_25i(r32)                _BFGET_(r32,25,25)
    #define   SET32SemaHubLite_full_ST_25i(r32,v)              _BFSET_(r32,25,25,v)
    #define   GET16SemaHubLite_full_ST_25i(r16)                _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_full_ST_25i(r16,v)              _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_full_ST_26i(r32)                _BFGET_(r32,26,26)
    #define   SET32SemaHubLite_full_ST_26i(r32,v)              _BFSET_(r32,26,26,v)
    #define   GET16SemaHubLite_full_ST_26i(r16)                _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_full_ST_26i(r16,v)              _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_full_ST_27i(r32)                _BFGET_(r32,27,27)
    #define   SET32SemaHubLite_full_ST_27i(r32,v)              _BFSET_(r32,27,27,v)
    #define   GET16SemaHubLite_full_ST_27i(r16)                _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_full_ST_27i(r16,v)              _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_full_ST_28i(r32)                _BFGET_(r32,28,28)
    #define   SET32SemaHubLite_full_ST_28i(r32,v)              _BFSET_(r32,28,28,v)
    #define   GET16SemaHubLite_full_ST_28i(r16)                _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_full_ST_28i(r16,v)              _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_full_ST_29i(r32)                _BFGET_(r32,29,29)
    #define   SET32SemaHubLite_full_ST_29i(r32,v)              _BFSET_(r32,29,29,v)
    #define   GET16SemaHubLite_full_ST_29i(r16)                _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_full_ST_29i(r16,v)              _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_full_ST_30i(r32)                _BFGET_(r32,30,30)
    #define   SET32SemaHubLite_full_ST_30i(r32,v)              _BFSET_(r32,30,30,v)
    #define   GET16SemaHubLite_full_ST_30i(r16)                _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_full_ST_30i(r16,v)              _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_full_ST_31i(r32)                _BFGET_(r32,31,31)
    #define   SET32SemaHubLite_full_ST_31i(r32,v)              _BFSET_(r32,31,31,v)
    #define   GET16SemaHubLite_full_ST_31i(r16)                _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_full_ST_31i(r16,v)              _BFSET_(r16,15,15,v)

    #define     w32SemaHubLite_full                            {\
            UNSG32 ufull_ST_0i                                 :  1;\
            UNSG32 ufull_ST_1i                                 :  1;\
            UNSG32 ufull_ST_2i                                 :  1;\
            UNSG32 ufull_ST_3i                                 :  1;\
            UNSG32 ufull_ST_4i                                 :  1;\
            UNSG32 ufull_ST_5i                                 :  1;\
            UNSG32 ufull_ST_6i                                 :  1;\
            UNSG32 ufull_ST_7i                                 :  1;\
            UNSG32 ufull_ST_8i                                 :  1;\
            UNSG32 ufull_ST_9i                                 :  1;\
            UNSG32 ufull_ST_10i                                :  1;\
            UNSG32 ufull_ST_11i                                :  1;\
            UNSG32 ufull_ST_12i                                :  1;\
            UNSG32 ufull_ST_13i                                :  1;\
            UNSG32 ufull_ST_14i                                :  1;\
            UNSG32 ufull_ST_15i                                :  1;\
            UNSG32 ufull_ST_16i                                :  1;\
            UNSG32 ufull_ST_17i                                :  1;\
            UNSG32 ufull_ST_18i                                :  1;\
            UNSG32 ufull_ST_19i                                :  1;\
            UNSG32 ufull_ST_20i                                :  1;\
            UNSG32 ufull_ST_21i                                :  1;\
            UNSG32 ufull_ST_22i                                :  1;\
            UNSG32 ufull_ST_23i                                :  1;\
            UNSG32 ufull_ST_24i                                :  1;\
            UNSG32 ufull_ST_25i                                :  1;\
            UNSG32 ufull_ST_26i                                :  1;\
            UNSG32 ufull_ST_27i                                :  1;\
            UNSG32 ufull_ST_28i                                :  1;\
            UNSG32 ufull_ST_29i                                :  1;\
            UNSG32 ufull_ST_30i                                :  1;\
            UNSG32 ufull_ST_31i                                :  1;\
          }
    union { UNSG32 u32SemaHubLite_full;
            struct w32SemaHubLite_full;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SemaHubLite_almostEmpty_ST_0i(r32)          _BFGET_(r32, 0, 0)
    #define   SET32SemaHubLite_almostEmpty_ST_0i(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16SemaHubLite_almostEmpty_ST_0i(r16)          _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_almostEmpty_ST_0i(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_almostEmpty_ST_1i(r32)          _BFGET_(r32, 1, 1)
    #define   SET32SemaHubLite_almostEmpty_ST_1i(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16SemaHubLite_almostEmpty_ST_1i(r16)          _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_almostEmpty_ST_1i(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_almostEmpty_ST_2i(r32)          _BFGET_(r32, 2, 2)
    #define   SET32SemaHubLite_almostEmpty_ST_2i(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16SemaHubLite_almostEmpty_ST_2i(r16)          _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_almostEmpty_ST_2i(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_almostEmpty_ST_3i(r32)          _BFGET_(r32, 3, 3)
    #define   SET32SemaHubLite_almostEmpty_ST_3i(r32,v)        _BFSET_(r32, 3, 3,v)
    #define   GET16SemaHubLite_almostEmpty_ST_3i(r16)          _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_almostEmpty_ST_3i(r16,v)        _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_almostEmpty_ST_4i(r32)          _BFGET_(r32, 4, 4)
    #define   SET32SemaHubLite_almostEmpty_ST_4i(r32,v)        _BFSET_(r32, 4, 4,v)
    #define   GET16SemaHubLite_almostEmpty_ST_4i(r16)          _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_almostEmpty_ST_4i(r16,v)        _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_almostEmpty_ST_5i(r32)          _BFGET_(r32, 5, 5)
    #define   SET32SemaHubLite_almostEmpty_ST_5i(r32,v)        _BFSET_(r32, 5, 5,v)
    #define   GET16SemaHubLite_almostEmpty_ST_5i(r16)          _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_almostEmpty_ST_5i(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_almostEmpty_ST_6i(r32)          _BFGET_(r32, 6, 6)
    #define   SET32SemaHubLite_almostEmpty_ST_6i(r32,v)        _BFSET_(r32, 6, 6,v)
    #define   GET16SemaHubLite_almostEmpty_ST_6i(r16)          _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_almostEmpty_ST_6i(r16,v)        _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_almostEmpty_ST_7i(r32)          _BFGET_(r32, 7, 7)
    #define   SET32SemaHubLite_almostEmpty_ST_7i(r32,v)        _BFSET_(r32, 7, 7,v)
    #define   GET16SemaHubLite_almostEmpty_ST_7i(r16)          _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_almostEmpty_ST_7i(r16,v)        _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_almostEmpty_ST_8i(r32)          _BFGET_(r32, 8, 8)
    #define   SET32SemaHubLite_almostEmpty_ST_8i(r32,v)        _BFSET_(r32, 8, 8,v)
    #define   GET16SemaHubLite_almostEmpty_ST_8i(r16)          _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_almostEmpty_ST_8i(r16,v)        _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_almostEmpty_ST_9i(r32)          _BFGET_(r32, 9, 9)
    #define   SET32SemaHubLite_almostEmpty_ST_9i(r32,v)        _BFSET_(r32, 9, 9,v)
    #define   GET16SemaHubLite_almostEmpty_ST_9i(r16)          _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_almostEmpty_ST_9i(r16,v)        _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_almostEmpty_ST_10i(r32)         _BFGET_(r32,10,10)
    #define   SET32SemaHubLite_almostEmpty_ST_10i(r32,v)       _BFSET_(r32,10,10,v)
    #define   GET16SemaHubLite_almostEmpty_ST_10i(r16)         _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_almostEmpty_ST_10i(r16,v)       _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_almostEmpty_ST_11i(r32)         _BFGET_(r32,11,11)
    #define   SET32SemaHubLite_almostEmpty_ST_11i(r32,v)       _BFSET_(r32,11,11,v)
    #define   GET16SemaHubLite_almostEmpty_ST_11i(r16)         _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_almostEmpty_ST_11i(r16,v)       _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_almostEmpty_ST_12i(r32)         _BFGET_(r32,12,12)
    #define   SET32SemaHubLite_almostEmpty_ST_12i(r32,v)       _BFSET_(r32,12,12,v)
    #define   GET16SemaHubLite_almostEmpty_ST_12i(r16)         _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_almostEmpty_ST_12i(r16,v)       _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_almostEmpty_ST_13i(r32)         _BFGET_(r32,13,13)
    #define   SET32SemaHubLite_almostEmpty_ST_13i(r32,v)       _BFSET_(r32,13,13,v)
    #define   GET16SemaHubLite_almostEmpty_ST_13i(r16)         _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_almostEmpty_ST_13i(r16,v)       _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_almostEmpty_ST_14i(r32)         _BFGET_(r32,14,14)
    #define   SET32SemaHubLite_almostEmpty_ST_14i(r32,v)       _BFSET_(r32,14,14,v)
    #define   GET16SemaHubLite_almostEmpty_ST_14i(r16)         _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_almostEmpty_ST_14i(r16,v)       _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_almostEmpty_ST_15i(r32)         _BFGET_(r32,15,15)
    #define   SET32SemaHubLite_almostEmpty_ST_15i(r32,v)       _BFSET_(r32,15,15,v)
    #define   GET16SemaHubLite_almostEmpty_ST_15i(r16)         _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_almostEmpty_ST_15i(r16,v)       _BFSET_(r16,15,15,v)

    #define   GET32SemaHubLite_almostEmpty_ST_16i(r32)         _BFGET_(r32,16,16)
    #define   SET32SemaHubLite_almostEmpty_ST_16i(r32,v)       _BFSET_(r32,16,16,v)
    #define   GET16SemaHubLite_almostEmpty_ST_16i(r16)         _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_almostEmpty_ST_16i(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_almostEmpty_ST_17i(r32)         _BFGET_(r32,17,17)
    #define   SET32SemaHubLite_almostEmpty_ST_17i(r32,v)       _BFSET_(r32,17,17,v)
    #define   GET16SemaHubLite_almostEmpty_ST_17i(r16)         _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_almostEmpty_ST_17i(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_almostEmpty_ST_18i(r32)         _BFGET_(r32,18,18)
    #define   SET32SemaHubLite_almostEmpty_ST_18i(r32,v)       _BFSET_(r32,18,18,v)
    #define   GET16SemaHubLite_almostEmpty_ST_18i(r16)         _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_almostEmpty_ST_18i(r16,v)       _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_almostEmpty_ST_19i(r32)         _BFGET_(r32,19,19)
    #define   SET32SemaHubLite_almostEmpty_ST_19i(r32,v)       _BFSET_(r32,19,19,v)
    #define   GET16SemaHubLite_almostEmpty_ST_19i(r16)         _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_almostEmpty_ST_19i(r16,v)       _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_almostEmpty_ST_20i(r32)         _BFGET_(r32,20,20)
    #define   SET32SemaHubLite_almostEmpty_ST_20i(r32,v)       _BFSET_(r32,20,20,v)
    #define   GET16SemaHubLite_almostEmpty_ST_20i(r16)         _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_almostEmpty_ST_20i(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_almostEmpty_ST_21i(r32)         _BFGET_(r32,21,21)
    #define   SET32SemaHubLite_almostEmpty_ST_21i(r32,v)       _BFSET_(r32,21,21,v)
    #define   GET16SemaHubLite_almostEmpty_ST_21i(r16)         _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_almostEmpty_ST_21i(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_almostEmpty_ST_22i(r32)         _BFGET_(r32,22,22)
    #define   SET32SemaHubLite_almostEmpty_ST_22i(r32,v)       _BFSET_(r32,22,22,v)
    #define   GET16SemaHubLite_almostEmpty_ST_22i(r16)         _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_almostEmpty_ST_22i(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_almostEmpty_ST_23i(r32)         _BFGET_(r32,23,23)
    #define   SET32SemaHubLite_almostEmpty_ST_23i(r32,v)       _BFSET_(r32,23,23,v)
    #define   GET16SemaHubLite_almostEmpty_ST_23i(r16)         _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_almostEmpty_ST_23i(r16,v)       _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_almostEmpty_ST_24i(r32)         _BFGET_(r32,24,24)
    #define   SET32SemaHubLite_almostEmpty_ST_24i(r32,v)       _BFSET_(r32,24,24,v)
    #define   GET16SemaHubLite_almostEmpty_ST_24i(r16)         _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_almostEmpty_ST_24i(r16,v)       _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_almostEmpty_ST_25i(r32)         _BFGET_(r32,25,25)
    #define   SET32SemaHubLite_almostEmpty_ST_25i(r32,v)       _BFSET_(r32,25,25,v)
    #define   GET16SemaHubLite_almostEmpty_ST_25i(r16)         _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_almostEmpty_ST_25i(r16,v)       _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_almostEmpty_ST_26i(r32)         _BFGET_(r32,26,26)
    #define   SET32SemaHubLite_almostEmpty_ST_26i(r32,v)       _BFSET_(r32,26,26,v)
    #define   GET16SemaHubLite_almostEmpty_ST_26i(r16)         _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_almostEmpty_ST_26i(r16,v)       _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_almostEmpty_ST_27i(r32)         _BFGET_(r32,27,27)
    #define   SET32SemaHubLite_almostEmpty_ST_27i(r32,v)       _BFSET_(r32,27,27,v)
    #define   GET16SemaHubLite_almostEmpty_ST_27i(r16)         _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_almostEmpty_ST_27i(r16,v)       _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_almostEmpty_ST_28i(r32)         _BFGET_(r32,28,28)
    #define   SET32SemaHubLite_almostEmpty_ST_28i(r32,v)       _BFSET_(r32,28,28,v)
    #define   GET16SemaHubLite_almostEmpty_ST_28i(r16)         _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_almostEmpty_ST_28i(r16,v)       _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_almostEmpty_ST_29i(r32)         _BFGET_(r32,29,29)
    #define   SET32SemaHubLite_almostEmpty_ST_29i(r32,v)       _BFSET_(r32,29,29,v)
    #define   GET16SemaHubLite_almostEmpty_ST_29i(r16)         _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_almostEmpty_ST_29i(r16,v)       _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_almostEmpty_ST_30i(r32)         _BFGET_(r32,30,30)
    #define   SET32SemaHubLite_almostEmpty_ST_30i(r32,v)       _BFSET_(r32,30,30,v)
    #define   GET16SemaHubLite_almostEmpty_ST_30i(r16)         _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_almostEmpty_ST_30i(r16,v)       _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_almostEmpty_ST_31i(r32)         _BFGET_(r32,31,31)
    #define   SET32SemaHubLite_almostEmpty_ST_31i(r32,v)       _BFSET_(r32,31,31,v)
    #define   GET16SemaHubLite_almostEmpty_ST_31i(r16)         _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_almostEmpty_ST_31i(r16,v)       _BFSET_(r16,15,15,v)

    #define     w32SemaHubLite_almostEmpty                     {\
            UNSG32 ualmostEmpty_ST_0i                          :  1;\
            UNSG32 ualmostEmpty_ST_1i                          :  1;\
            UNSG32 ualmostEmpty_ST_2i                          :  1;\
            UNSG32 ualmostEmpty_ST_3i                          :  1;\
            UNSG32 ualmostEmpty_ST_4i                          :  1;\
            UNSG32 ualmostEmpty_ST_5i                          :  1;\
            UNSG32 ualmostEmpty_ST_6i                          :  1;\
            UNSG32 ualmostEmpty_ST_7i                          :  1;\
            UNSG32 ualmostEmpty_ST_8i                          :  1;\
            UNSG32 ualmostEmpty_ST_9i                          :  1;\
            UNSG32 ualmostEmpty_ST_10i                         :  1;\
            UNSG32 ualmostEmpty_ST_11i                         :  1;\
            UNSG32 ualmostEmpty_ST_12i                         :  1;\
            UNSG32 ualmostEmpty_ST_13i                         :  1;\
            UNSG32 ualmostEmpty_ST_14i                         :  1;\
            UNSG32 ualmostEmpty_ST_15i                         :  1;\
            UNSG32 ualmostEmpty_ST_16i                         :  1;\
            UNSG32 ualmostEmpty_ST_17i                         :  1;\
            UNSG32 ualmostEmpty_ST_18i                         :  1;\
            UNSG32 ualmostEmpty_ST_19i                         :  1;\
            UNSG32 ualmostEmpty_ST_20i                         :  1;\
            UNSG32 ualmostEmpty_ST_21i                         :  1;\
            UNSG32 ualmostEmpty_ST_22i                         :  1;\
            UNSG32 ualmostEmpty_ST_23i                         :  1;\
            UNSG32 ualmostEmpty_ST_24i                         :  1;\
            UNSG32 ualmostEmpty_ST_25i                         :  1;\
            UNSG32 ualmostEmpty_ST_26i                         :  1;\
            UNSG32 ualmostEmpty_ST_27i                         :  1;\
            UNSG32 ualmostEmpty_ST_28i                         :  1;\
            UNSG32 ualmostEmpty_ST_29i                         :  1;\
            UNSG32 ualmostEmpty_ST_30i                         :  1;\
            UNSG32 ualmostEmpty_ST_31i                         :  1;\
          }
    union { UNSG32 u32SemaHubLite_almostEmpty;
            struct w32SemaHubLite_almostEmpty;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SemaHubLite_almostFull_ST_0i(r32)           _BFGET_(r32, 0, 0)
    #define   SET32SemaHubLite_almostFull_ST_0i(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16SemaHubLite_almostFull_ST_0i(r16)           _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_almostFull_ST_0i(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_almostFull_ST_1i(r32)           _BFGET_(r32, 1, 1)
    #define   SET32SemaHubLite_almostFull_ST_1i(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16SemaHubLite_almostFull_ST_1i(r16)           _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_almostFull_ST_1i(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_almostFull_ST_2i(r32)           _BFGET_(r32, 2, 2)
    #define   SET32SemaHubLite_almostFull_ST_2i(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16SemaHubLite_almostFull_ST_2i(r16)           _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_almostFull_ST_2i(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_almostFull_ST_3i(r32)           _BFGET_(r32, 3, 3)
    #define   SET32SemaHubLite_almostFull_ST_3i(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16SemaHubLite_almostFull_ST_3i(r16)           _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_almostFull_ST_3i(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_almostFull_ST_4i(r32)           _BFGET_(r32, 4, 4)
    #define   SET32SemaHubLite_almostFull_ST_4i(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16SemaHubLite_almostFull_ST_4i(r16)           _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_almostFull_ST_4i(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_almostFull_ST_5i(r32)           _BFGET_(r32, 5, 5)
    #define   SET32SemaHubLite_almostFull_ST_5i(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16SemaHubLite_almostFull_ST_5i(r16)           _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_almostFull_ST_5i(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_almostFull_ST_6i(r32)           _BFGET_(r32, 6, 6)
    #define   SET32SemaHubLite_almostFull_ST_6i(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16SemaHubLite_almostFull_ST_6i(r16)           _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_almostFull_ST_6i(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_almostFull_ST_7i(r32)           _BFGET_(r32, 7, 7)
    #define   SET32SemaHubLite_almostFull_ST_7i(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16SemaHubLite_almostFull_ST_7i(r16)           _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_almostFull_ST_7i(r16,v)         _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_almostFull_ST_8i(r32)           _BFGET_(r32, 8, 8)
    #define   SET32SemaHubLite_almostFull_ST_8i(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16SemaHubLite_almostFull_ST_8i(r16)           _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_almostFull_ST_8i(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_almostFull_ST_9i(r32)           _BFGET_(r32, 9, 9)
    #define   SET32SemaHubLite_almostFull_ST_9i(r32,v)         _BFSET_(r32, 9, 9,v)
    #define   GET16SemaHubLite_almostFull_ST_9i(r16)           _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_almostFull_ST_9i(r16,v)         _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_almostFull_ST_10i(r32)          _BFGET_(r32,10,10)
    #define   SET32SemaHubLite_almostFull_ST_10i(r32,v)        _BFSET_(r32,10,10,v)
    #define   GET16SemaHubLite_almostFull_ST_10i(r16)          _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_almostFull_ST_10i(r16,v)        _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_almostFull_ST_11i(r32)          _BFGET_(r32,11,11)
    #define   SET32SemaHubLite_almostFull_ST_11i(r32,v)        _BFSET_(r32,11,11,v)
    #define   GET16SemaHubLite_almostFull_ST_11i(r16)          _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_almostFull_ST_11i(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_almostFull_ST_12i(r32)          _BFGET_(r32,12,12)
    #define   SET32SemaHubLite_almostFull_ST_12i(r32,v)        _BFSET_(r32,12,12,v)
    #define   GET16SemaHubLite_almostFull_ST_12i(r16)          _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_almostFull_ST_12i(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_almostFull_ST_13i(r32)          _BFGET_(r32,13,13)
    #define   SET32SemaHubLite_almostFull_ST_13i(r32,v)        _BFSET_(r32,13,13,v)
    #define   GET16SemaHubLite_almostFull_ST_13i(r16)          _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_almostFull_ST_13i(r16,v)        _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_almostFull_ST_14i(r32)          _BFGET_(r32,14,14)
    #define   SET32SemaHubLite_almostFull_ST_14i(r32,v)        _BFSET_(r32,14,14,v)
    #define   GET16SemaHubLite_almostFull_ST_14i(r16)          _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_almostFull_ST_14i(r16,v)        _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_almostFull_ST_15i(r32)          _BFGET_(r32,15,15)
    #define   SET32SemaHubLite_almostFull_ST_15i(r32,v)        _BFSET_(r32,15,15,v)
    #define   GET16SemaHubLite_almostFull_ST_15i(r16)          _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_almostFull_ST_15i(r16,v)        _BFSET_(r16,15,15,v)

    #define   GET32SemaHubLite_almostFull_ST_16i(r32)          _BFGET_(r32,16,16)
    #define   SET32SemaHubLite_almostFull_ST_16i(r32,v)        _BFSET_(r32,16,16,v)
    #define   GET16SemaHubLite_almostFull_ST_16i(r16)          _BFGET_(r16, 0, 0)
    #define   SET16SemaHubLite_almostFull_ST_16i(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32SemaHubLite_almostFull_ST_17i(r32)          _BFGET_(r32,17,17)
    #define   SET32SemaHubLite_almostFull_ST_17i(r32,v)        _BFSET_(r32,17,17,v)
    #define   GET16SemaHubLite_almostFull_ST_17i(r16)          _BFGET_(r16, 1, 1)
    #define   SET16SemaHubLite_almostFull_ST_17i(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32SemaHubLite_almostFull_ST_18i(r32)          _BFGET_(r32,18,18)
    #define   SET32SemaHubLite_almostFull_ST_18i(r32,v)        _BFSET_(r32,18,18,v)
    #define   GET16SemaHubLite_almostFull_ST_18i(r16)          _BFGET_(r16, 2, 2)
    #define   SET16SemaHubLite_almostFull_ST_18i(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32SemaHubLite_almostFull_ST_19i(r32)          _BFGET_(r32,19,19)
    #define   SET32SemaHubLite_almostFull_ST_19i(r32,v)        _BFSET_(r32,19,19,v)
    #define   GET16SemaHubLite_almostFull_ST_19i(r16)          _BFGET_(r16, 3, 3)
    #define   SET16SemaHubLite_almostFull_ST_19i(r16,v)        _BFSET_(r16, 3, 3,v)

    #define   GET32SemaHubLite_almostFull_ST_20i(r32)          _BFGET_(r32,20,20)
    #define   SET32SemaHubLite_almostFull_ST_20i(r32,v)        _BFSET_(r32,20,20,v)
    #define   GET16SemaHubLite_almostFull_ST_20i(r16)          _BFGET_(r16, 4, 4)
    #define   SET16SemaHubLite_almostFull_ST_20i(r16,v)        _BFSET_(r16, 4, 4,v)

    #define   GET32SemaHubLite_almostFull_ST_21i(r32)          _BFGET_(r32,21,21)
    #define   SET32SemaHubLite_almostFull_ST_21i(r32,v)        _BFSET_(r32,21,21,v)
    #define   GET16SemaHubLite_almostFull_ST_21i(r16)          _BFGET_(r16, 5, 5)
    #define   SET16SemaHubLite_almostFull_ST_21i(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32SemaHubLite_almostFull_ST_22i(r32)          _BFGET_(r32,22,22)
    #define   SET32SemaHubLite_almostFull_ST_22i(r32,v)        _BFSET_(r32,22,22,v)
    #define   GET16SemaHubLite_almostFull_ST_22i(r16)          _BFGET_(r16, 6, 6)
    #define   SET16SemaHubLite_almostFull_ST_22i(r16,v)        _BFSET_(r16, 6, 6,v)

    #define   GET32SemaHubLite_almostFull_ST_23i(r32)          _BFGET_(r32,23,23)
    #define   SET32SemaHubLite_almostFull_ST_23i(r32,v)        _BFSET_(r32,23,23,v)
    #define   GET16SemaHubLite_almostFull_ST_23i(r16)          _BFGET_(r16, 7, 7)
    #define   SET16SemaHubLite_almostFull_ST_23i(r16,v)        _BFSET_(r16, 7, 7,v)

    #define   GET32SemaHubLite_almostFull_ST_24i(r32)          _BFGET_(r32,24,24)
    #define   SET32SemaHubLite_almostFull_ST_24i(r32,v)        _BFSET_(r32,24,24,v)
    #define   GET16SemaHubLite_almostFull_ST_24i(r16)          _BFGET_(r16, 8, 8)
    #define   SET16SemaHubLite_almostFull_ST_24i(r16,v)        _BFSET_(r16, 8, 8,v)

    #define   GET32SemaHubLite_almostFull_ST_25i(r32)          _BFGET_(r32,25,25)
    #define   SET32SemaHubLite_almostFull_ST_25i(r32,v)        _BFSET_(r32,25,25,v)
    #define   GET16SemaHubLite_almostFull_ST_25i(r16)          _BFGET_(r16, 9, 9)
    #define   SET16SemaHubLite_almostFull_ST_25i(r16,v)        _BFSET_(r16, 9, 9,v)

    #define   GET32SemaHubLite_almostFull_ST_26i(r32)          _BFGET_(r32,26,26)
    #define   SET32SemaHubLite_almostFull_ST_26i(r32,v)        _BFSET_(r32,26,26,v)
    #define   GET16SemaHubLite_almostFull_ST_26i(r16)          _BFGET_(r16,10,10)
    #define   SET16SemaHubLite_almostFull_ST_26i(r16,v)        _BFSET_(r16,10,10,v)

    #define   GET32SemaHubLite_almostFull_ST_27i(r32)          _BFGET_(r32,27,27)
    #define   SET32SemaHubLite_almostFull_ST_27i(r32,v)        _BFSET_(r32,27,27,v)
    #define   GET16SemaHubLite_almostFull_ST_27i(r16)          _BFGET_(r16,11,11)
    #define   SET16SemaHubLite_almostFull_ST_27i(r16,v)        _BFSET_(r16,11,11,v)

    #define   GET32SemaHubLite_almostFull_ST_28i(r32)          _BFGET_(r32,28,28)
    #define   SET32SemaHubLite_almostFull_ST_28i(r32,v)        _BFSET_(r32,28,28,v)
    #define   GET16SemaHubLite_almostFull_ST_28i(r16)          _BFGET_(r16,12,12)
    #define   SET16SemaHubLite_almostFull_ST_28i(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32SemaHubLite_almostFull_ST_29i(r32)          _BFGET_(r32,29,29)
    #define   SET32SemaHubLite_almostFull_ST_29i(r32,v)        _BFSET_(r32,29,29,v)
    #define   GET16SemaHubLite_almostFull_ST_29i(r16)          _BFGET_(r16,13,13)
    #define   SET16SemaHubLite_almostFull_ST_29i(r16,v)        _BFSET_(r16,13,13,v)

    #define   GET32SemaHubLite_almostFull_ST_30i(r32)          _BFGET_(r32,30,30)
    #define   SET32SemaHubLite_almostFull_ST_30i(r32,v)        _BFSET_(r32,30,30,v)
    #define   GET16SemaHubLite_almostFull_ST_30i(r16)          _BFGET_(r16,14,14)
    #define   SET16SemaHubLite_almostFull_ST_30i(r16,v)        _BFSET_(r16,14,14,v)

    #define   GET32SemaHubLite_almostFull_ST_31i(r32)          _BFGET_(r32,31,31)
    #define   SET32SemaHubLite_almostFull_ST_31i(r32,v)        _BFSET_(r32,31,31,v)
    #define   GET16SemaHubLite_almostFull_ST_31i(r16)          _BFGET_(r16,15,15)
    #define   SET16SemaHubLite_almostFull_ST_31i(r16,v)        _BFSET_(r16,15,15,v)

    #define     w32SemaHubLite_almostFull                      {\
            UNSG32 ualmostFull_ST_0i                           :  1;\
            UNSG32 ualmostFull_ST_1i                           :  1;\
            UNSG32 ualmostFull_ST_2i                           :  1;\
            UNSG32 ualmostFull_ST_3i                           :  1;\
            UNSG32 ualmostFull_ST_4i                           :  1;\
            UNSG32 ualmostFull_ST_5i                           :  1;\
            UNSG32 ualmostFull_ST_6i                           :  1;\
            UNSG32 ualmostFull_ST_7i                           :  1;\
            UNSG32 ualmostFull_ST_8i                           :  1;\
            UNSG32 ualmostFull_ST_9i                           :  1;\
            UNSG32 ualmostFull_ST_10i                          :  1;\
            UNSG32 ualmostFull_ST_11i                          :  1;\
            UNSG32 ualmostFull_ST_12i                          :  1;\
            UNSG32 ualmostFull_ST_13i                          :  1;\
            UNSG32 ualmostFull_ST_14i                          :  1;\
            UNSG32 ualmostFull_ST_15i                          :  1;\
            UNSG32 ualmostFull_ST_16i                          :  1;\
            UNSG32 ualmostFull_ST_17i                          :  1;\
            UNSG32 ualmostFull_ST_18i                          :  1;\
            UNSG32 ualmostFull_ST_19i                          :  1;\
            UNSG32 ualmostFull_ST_20i                          :  1;\
            UNSG32 ualmostFull_ST_21i                          :  1;\
            UNSG32 ualmostFull_ST_22i                          :  1;\
            UNSG32 ualmostFull_ST_23i                          :  1;\
            UNSG32 ualmostFull_ST_24i                          :  1;\
            UNSG32 ualmostFull_ST_25i                          :  1;\
            UNSG32 ualmostFull_ST_26i                          :  1;\
            UNSG32 ualmostFull_ST_27i                          :  1;\
            UNSG32 ualmostFull_ST_28i                          :  1;\
            UNSG32 ualmostFull_ST_29i                          :  1;\
            UNSG32 ualmostFull_ST_30i                          :  1;\
            UNSG32 ualmostFull_ST_31i                          :  1;\
          }
    union { UNSG32 u32SemaHubLite_almostFull;
            struct w32SemaHubLite_almostFull;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx398                                    [104];
    ///////////////////////////////////////////////////////////
    } SIE_SemaHubLite;

    typedef union  T32SemaHubLite_PUSH
          { UNSG32 u32;
            struct w32SemaHubLite_PUSH;
                 } T32SemaHubLite_PUSH;
    typedef union  T32SemaHubLite_POP
          { UNSG32 u32;
            struct w32SemaHubLite_POP;
                 } T32SemaHubLite_POP;
    typedef union  T32SemaHubLite_empty
          { UNSG32 u32;
            struct w32SemaHubLite_empty;
                 } T32SemaHubLite_empty;
    typedef union  T32SemaHubLite_full
          { UNSG32 u32;
            struct w32SemaHubLite_full;
                 } T32SemaHubLite_full;
    typedef union  T32SemaHubLite_almostEmpty
          { UNSG32 u32;
            struct w32SemaHubLite_almostEmpty;
                 } T32SemaHubLite_almostEmpty;
    typedef union  T32SemaHubLite_almostFull
          { UNSG32 u32;
            struct w32SemaHubLite_almostFull;
                 } T32SemaHubLite_almostFull;
    ///////////////////////////////////////////////////////////

    typedef union  TSemaHubLite_PUSH
          { UNSG32 u32[1];
            struct {
            struct w32SemaHubLite_PUSH;
                   };
                 } TSemaHubLite_PUSH;
    typedef union  TSemaHubLite_POP
          { UNSG32 u32[1];
            struct {
            struct w32SemaHubLite_POP;
                   };
                 } TSemaHubLite_POP;
    typedef union  TSemaHubLite_empty
          { UNSG32 u32[1];
            struct {
            struct w32SemaHubLite_empty;
                   };
                 } TSemaHubLite_empty;
    typedef union  TSemaHubLite_full
          { UNSG32 u32[1];
            struct {
            struct w32SemaHubLite_full;
                   };
                 } TSemaHubLite_full;
    typedef union  TSemaHubLite_almostEmpty
          { UNSG32 u32[1];
            struct {
            struct w32SemaHubLite_almostEmpty;
                   };
                 } TSemaHubLite_almostEmpty;
    typedef union  TSemaHubLite_almostFull
          { UNSG32 u32[1];
            struct {
            struct w32SemaHubLite_almostFull;
                   };
                 } TSemaHubLite_almostFull;

    ///////////////////////////////////////////////////////////
     SIGN32 SemaHubLite_drvrd(SIE_SemaHubLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SemaHubLite_drvwr(SIE_SemaHubLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SemaHubLite_reset(SIE_SemaHubLite *p);
     SIGN32 SemaHubLite_cmp  (SIE_SemaHubLite *p, SIE_SemaHubLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SemaHubLite_check(p,pie,pfx,hLOG) SemaHubLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SemaHubLite_print(p,    pfx,hLOG) SemaHubLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SemaHubLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE FiFoLite                biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG                  (W-)
///               %unsigned 20 BASE
///                                    ###
///                                    * Base address (byte-address) of a FIFO in the shared SRAM. A channel's read/write pointers will be added to this “BASE” to get exact location of shared SRAM.
///                                    * Note: aligned with base SRAM data bus.
///                                    * For example, if SRAM data is 64-bit, then base[2:0] should be 3'b0;
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00004 START                (W-)
///               %unsigned 1  EN                        0x0
///                                    ###
///                                    * Write 1 to this register will enable this channel, or 0 to this register will disable this channel.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 CLEAR                (W-)
///               %unsigned 1  EN
///                                    ###
///                                    * Write anything to clear FIFO pointers to 0.
///                                    * Note :
///                                    * CPU should make sure to disabled the channel (write 0 to START_EN register) before issue clear command, otherwise the clear request will be ignored.
///                                    * Do not restart the channel when clear operation is in process.
///                                    * HW will make sure there is no pending transactions before execute the clear operation.
///                                    * Associated semaphore cell needs reset separately by re-write “CFG_DEPTH”
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C FLUSH                (W-)
///               %unsigned 1  EN
///                                    ###
///                                    * No support for now
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      16B, bits:      23b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_FiFoLite
#define h_FiFoLite (){}

    #define     RA_FiFoLite_CFG                                0x0000

    #define     BA_FiFoLite_CFG_BASE                           0x0000
    #define     B16FiFoLite_CFG_BASE                           0x0000
    #define   LSb32FiFoLite_CFG_BASE                              0
    #define   LSb16FiFoLite_CFG_BASE                              0
    #define       bFiFoLite_CFG_BASE                           20
    #define   MSK32FiFoLite_CFG_BASE                              0x000FFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_FiFoLite_START                              0x0004

    #define     BA_FiFoLite_START_EN                           0x0004
    #define     B16FiFoLite_START_EN                           0x0004
    #define   LSb32FiFoLite_START_EN                              0
    #define   LSb16FiFoLite_START_EN                              0
    #define       bFiFoLite_START_EN                           1
    #define   MSK32FiFoLite_START_EN                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_FiFoLite_CLEAR                              0x0008

    #define     BA_FiFoLite_CLEAR_EN                           0x0008
    #define     B16FiFoLite_CLEAR_EN                           0x0008
    #define   LSb32FiFoLite_CLEAR_EN                              0
    #define   LSb16FiFoLite_CLEAR_EN                              0
    #define       bFiFoLite_CLEAR_EN                           1
    #define   MSK32FiFoLite_CLEAR_EN                              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_FiFoLite_FLUSH                              0x000C

    #define     BA_FiFoLite_FLUSH_EN                           0x000C
    #define     B16FiFoLite_FLUSH_EN                           0x000C
    #define   LSb32FiFoLite_FLUSH_EN                              0
    #define   LSb16FiFoLite_FLUSH_EN                              0
    #define       bFiFoLite_FLUSH_EN                           1
    #define   MSK32FiFoLite_FLUSH_EN                              0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_FiFoLite {
    ///////////////////////////////////////////////////////////
    #define   GET32FiFoLite_CFG_BASE(r32)                      _BFGET_(r32,19, 0)
    #define   SET32FiFoLite_CFG_BASE(r32,v)                    _BFSET_(r32,19, 0,v)

    #define     w32FiFoLite_CFG                                {\
            UNSG32 uCFG_BASE                                   : 20;\
            UNSG32 RSVDx0_b20                                  : 12;\
          }
    union { UNSG32 u32FiFoLite_CFG;
            struct w32FiFoLite_CFG;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FiFoLite_START_EN(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32FiFoLite_START_EN(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16FiFoLite_START_EN(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16FiFoLite_START_EN(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32FiFoLite_START                              {\
            UNSG32 uSTART_EN                                   :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32FiFoLite_START;
            struct w32FiFoLite_START;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FiFoLite_CLEAR_EN(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32FiFoLite_CLEAR_EN(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16FiFoLite_CLEAR_EN(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16FiFoLite_CLEAR_EN(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32FiFoLite_CLEAR                              {\
            UNSG32 uCLEAR_EN                                   :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32FiFoLite_CLEAR;
            struct w32FiFoLite_CLEAR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FiFoLite_FLUSH_EN(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32FiFoLite_FLUSH_EN(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16FiFoLite_FLUSH_EN(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16FiFoLite_FLUSH_EN(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define     w32FiFoLite_FLUSH                              {\
            UNSG32 uFLUSH_EN                                   :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32FiFoLite_FLUSH;
            struct w32FiFoLite_FLUSH;
          };
    ///////////////////////////////////////////////////////////
    } SIE_FiFoLite;

    typedef union  T32FiFoLite_CFG
          { UNSG32 u32;
            struct w32FiFoLite_CFG;
                 } T32FiFoLite_CFG;
    typedef union  T32FiFoLite_START
          { UNSG32 u32;
            struct w32FiFoLite_START;
                 } T32FiFoLite_START;
    typedef union  T32FiFoLite_CLEAR
          { UNSG32 u32;
            struct w32FiFoLite_CLEAR;
                 } T32FiFoLite_CLEAR;
    typedef union  T32FiFoLite_FLUSH
          { UNSG32 u32;
            struct w32FiFoLite_FLUSH;
                 } T32FiFoLite_FLUSH;
    ///////////////////////////////////////////////////////////

    typedef union  TFiFoLite_CFG
          { UNSG32 u32[1];
            struct {
            struct w32FiFoLite_CFG;
                   };
                 } TFiFoLite_CFG;
    typedef union  TFiFoLite_START
          { UNSG32 u32[1];
            struct {
            struct w32FiFoLite_START;
                   };
                 } TFiFoLite_START;
    typedef union  TFiFoLite_CLEAR
          { UNSG32 u32[1];
            struct {
            struct w32FiFoLite_CLEAR;
                   };
                 } TFiFoLite_CLEAR;
    typedef union  TFiFoLite_FLUSH
          { UNSG32 u32[1];
            struct {
            struct w32FiFoLite_FLUSH;
                   };
                 } TFiFoLite_FLUSH;

    ///////////////////////////////////////////////////////////
     SIGN32 FiFoLite_drvrd(SIE_FiFoLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 FiFoLite_drvwr(SIE_FiFoLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void FiFoLite_reset(SIE_FiFoLite *p);
     SIGN32 FiFoLite_cmp  (SIE_FiFoLite *p, SIE_FiFoLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define FiFoLite_check(p,pie,pfx,hLOG) FiFoLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define FiFoLite_print(p,    pfx,hLOG) FiFoLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: FiFoLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE HBOLite                 biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 FiFoCtl
///               $SemaHubLite         FiFoCtl           REG
///     @ 0x00400 ARR                  (P)
///     # 0x00400 FiFo
///               $FiFoLite            FiFo              REG      [32]
///                                    ###
///                                    * Up-to 32 FIFO channels
///                                    * FiFo[N] is controlled by HBO.FiFoCtl.Channel[N]
///                                    ###
///     @ 0x00600 BUSY                 (R-)
///               %unsigned 32 ST
///                                    ###
///                                    * Per channel status
///                                    * Indicate the clear operation status.
///                                    * 1: clear is in process.
///                                    * 0 : clear is done.
///                                    ###
///     @ 0x00604                      (W-)
///     #         # Stuffing bytes...
///               %% 2016
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:    1792B, bits:    1920b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_HBOLite
#define h_HBOLite (){}

    #define     RA_HBOLite_FiFoCtl                             0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_HBOLite_ARR                                 0x0400
    #define     RA_HBOLite_FiFo                                0x0400
    ///////////////////////////////////////////////////////////
    #define     RA_HBOLite_BUSY                                0x0600

    #define     BA_HBOLite_BUSY_ST                             0x0600
    #define     B16HBOLite_BUSY_ST                             0x0600
    #define   LSb32HBOLite_BUSY_ST                                0
    #define   LSb16HBOLite_BUSY_ST                                0
    #define       bHBOLite_BUSY_ST                             32
    #define   MSK32HBOLite_BUSY_ST                                0xFFFFFFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_HBOLite {
    ///////////////////////////////////////////////////////////
              SIE_SemaHubLite                                  ie_FiFoCtl;
    ///////////////////////////////////////////////////////////
              SIE_FiFoLite                                     ie_FiFo[32];
    ///////////////////////////////////////////////////////////
    #define   GET32HBOLite_BUSY_ST(r32)                        _BFGET_(r32,31, 0)
    #define   SET32HBOLite_BUSY_ST(r32,v)                      _BFSET_(r32,31, 0,v)

    #define     w32HBOLite_BUSY                                {\
            UNSG32 uBUSY_ST                                    : 32;\
          }
    union { UNSG32 u32HBOLite_BUSY;
            struct w32HBOLite_BUSY;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx604                                    [252];
    ///////////////////////////////////////////////////////////
    } SIE_HBOLite;

    typedef union  T32HBOLite_BUSY
          { UNSG32 u32;
            struct w32HBOLite_BUSY;
                 } T32HBOLite_BUSY;
    ///////////////////////////////////////////////////////////

    typedef union  THBOLite_BUSY
          { UNSG32 u32[1];
            struct {
            struct w32HBOLite_BUSY;
                   };
                 } THBOLite_BUSY;

    ///////////////////////////////////////////////////////////
     SIGN32 HBOLite_drvrd(SIE_HBOLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 HBOLite_drvwr(SIE_HBOLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void HBOLite_reset(SIE_HBOLite *p);
     SIGN32 HBOLite_cmp  (SIE_HBOLite *p, SIE_HBOLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define HBOLite_check(p,pie,pfx,hLOG) HBOLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define HBOLite_print(p,    pfx,hLOG) HBOLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: HBOLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE LLDesFmtLite            biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 mem                  (P)
///               %unsigned 16 size
///                                    ###
///                                    * The size of one piece of scattered memory.
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      16b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_LLDesFmtLite
#define h_LLDesFmtLite (){}

    #define     RA_LLDesFmtLite_mem                            0x0000

    #define     BA_LLDesFmtLite_mem_size                       0x0000
    #define     B16LLDesFmtLite_mem_size                       0x0000
    #define   LSb32LLDesFmtLite_mem_size                          0
    #define   LSb16LLDesFmtLite_mem_size                          0
    #define       bLLDesFmtLite_mem_size                       16
    #define   MSK32LLDesFmtLite_mem_size                          0x0000FFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_LLDesFmtLite {
    ///////////////////////////////////////////////////////////
    #define   GET32LLDesFmtLite_mem_size(r32)                  _BFGET_(r32,15, 0)
    #define   SET32LLDesFmtLite_mem_size(r32,v)                _BFSET_(r32,15, 0,v)
    #define   GET16LLDesFmtLite_mem_size(r16)                  _BFGET_(r16,15, 0)
    #define   SET16LLDesFmtLite_mem_size(r16,v)                _BFSET_(r16,15, 0,v)

    #define     w32LLDesFmtLite_mem                            {\
            UNSG32 umem_size                                   : 16;\
            UNSG32 RSVDx0_b16                                  : 16;\
          }
    union { UNSG32 u32LLDesFmtLite_mem;
            struct w32LLDesFmtLite_mem;
          };
    ///////////////////////////////////////////////////////////
    } SIE_LLDesFmtLite;

    typedef union  T32LLDesFmtLite_mem
          { UNSG32 u32;
            struct w32LLDesFmtLite_mem;
                 } T32LLDesFmtLite_mem;
    ///////////////////////////////////////////////////////////

    typedef union  TLLDesFmtLite_mem
          { UNSG32 u32[1];
            struct {
            struct w32LLDesFmtLite_mem;
                   };
                 } TLLDesFmtLite_mem;

    ///////////////////////////////////////////////////////////
     SIGN32 LLDesFmtLite_drvrd(SIE_LLDesFmtLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 LLDesFmtLite_drvwr(SIE_LLDesFmtLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void LLDesFmtLite_reset(SIE_LLDesFmtLite *p);
     SIGN32 LLDesFmtLite_cmp  (SIE_LLDesFmtLite *p, SIE_LLDesFmtLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define LLDesFmtLite_check(p,pie,pfx,hLOG) LLDesFmtLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define LLDesFmtLite_print(p,    pfx,hLOG) LLDesFmtLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: LLDesFmtLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubCmdHDRLite                           (4,4)
///     ###
///     * 32-bit dHub command header
///     * [0:31]
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 DESC                 (W-)
///               %unsigned 16 size
///                                    ###
///                                    * amount of data to be transferred, in bytes or MTU.
///                                    * Size of 0 is forbidden.
///                                    ###
///               %unsigned 1  sizeMTU
///                                    ###
///                                    * 0: size given in bytes;
///                                    * 1: size given in MTU (see dHubChCtl.CFG.MTU for MTU size definition)
///                                    ###
///               %unsigned 1  semOpMTU
///                                    ###
///                                    * 0: semaphore operations applied on dHubCmd level
///                                    * 1: semaphore operations applied on MTU level
///                                    ###
///               %unsigned 5  chkSemId
///                                    ###
///                                    * ID of semaphore to check before cmd / MTU;
///                                    * 0 indicates semaphore check is disabled
///                                    ###
///               %unsigned 5  updSemId
///                                    ###
///                                    * ID of semaphore to update after cmd / MTU;
///                                    * 0 indicates semaphore update is disabled
///                                    ###
///               %unsigned 1  interrupt
///                                    ###
///                                    * 1: raise interrupt upon command finish
///                                    ###
///               %unsigned 1  dis_chk
///                                    ###
///                                    * 0: chkSemId operates as normal, AxUser[4:0] = 0
///                                    * 1: Disables chkSemId, sends the 5 bit field in chkSemID out on AxUser[4:0]
///                                    ###
///               %unsigned 1  dis_upd
///                                    ###
///                                    * 0: updSemId operates as normal, AxUser[9:5] = 0
///                                    * 1: Disables updSemId, sends the 5 bit field in updSemID out on AxUser[9:5]
///                                    * end dHubCmdHDR
///                                    ###
///               %%        1          # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      31b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubCmdHDRLite
#define h_dHubCmdHDRLite (){}

    #define     RA_dHubCmdHDRLite_DESC                         0x0000

    #define     BA_dHubCmdHDRLite_DESC_size                    0x0000
    #define     B16dHubCmdHDRLite_DESC_size                    0x0000
    #define   LSb32dHubCmdHDRLite_DESC_size                       0
    #define   LSb16dHubCmdHDRLite_DESC_size                       0
    #define       bdHubCmdHDRLite_DESC_size                    16
    #define   MSK32dHubCmdHDRLite_DESC_size                       0x0000FFFF

    #define     BA_dHubCmdHDRLite_DESC_sizeMTU                 0x0002
    #define     B16dHubCmdHDRLite_DESC_sizeMTU                 0x0002
    #define   LSb32dHubCmdHDRLite_DESC_sizeMTU                    16
    #define   LSb16dHubCmdHDRLite_DESC_sizeMTU                    0
    #define       bdHubCmdHDRLite_DESC_sizeMTU                 1
    #define   MSK32dHubCmdHDRLite_DESC_sizeMTU                    0x00010000

    #define     BA_dHubCmdHDRLite_DESC_semOpMTU                0x0002
    #define     B16dHubCmdHDRLite_DESC_semOpMTU                0x0002
    #define   LSb32dHubCmdHDRLite_DESC_semOpMTU                   17
    #define   LSb16dHubCmdHDRLite_DESC_semOpMTU                   1
    #define       bdHubCmdHDRLite_DESC_semOpMTU                1
    #define   MSK32dHubCmdHDRLite_DESC_semOpMTU                   0x00020000

    #define     BA_dHubCmdHDRLite_DESC_chkSemId                0x0002
    #define     B16dHubCmdHDRLite_DESC_chkSemId                0x0002
    #define   LSb32dHubCmdHDRLite_DESC_chkSemId                   18
    #define   LSb16dHubCmdHDRLite_DESC_chkSemId                   2
    #define       bdHubCmdHDRLite_DESC_chkSemId                5
    #define   MSK32dHubCmdHDRLite_DESC_chkSemId                   0x007C0000

    #define     BA_dHubCmdHDRLite_DESC_updSemId                0x0002
    #define     B16dHubCmdHDRLite_DESC_updSemId                0x0002
    #define   LSb32dHubCmdHDRLite_DESC_updSemId                   23
    #define   LSb16dHubCmdHDRLite_DESC_updSemId                   7
    #define       bdHubCmdHDRLite_DESC_updSemId                5
    #define   MSK32dHubCmdHDRLite_DESC_updSemId                   0x0F800000

    #define     BA_dHubCmdHDRLite_DESC_interrupt               0x0003
    #define     B16dHubCmdHDRLite_DESC_interrupt               0x0002
    #define   LSb32dHubCmdHDRLite_DESC_interrupt                  28
    #define   LSb16dHubCmdHDRLite_DESC_interrupt                  12
    #define       bdHubCmdHDRLite_DESC_interrupt               1
    #define   MSK32dHubCmdHDRLite_DESC_interrupt                  0x10000000

    #define     BA_dHubCmdHDRLite_DESC_dis_chk                 0x0003
    #define     B16dHubCmdHDRLite_DESC_dis_chk                 0x0002
    #define   LSb32dHubCmdHDRLite_DESC_dis_chk                    29
    #define   LSb16dHubCmdHDRLite_DESC_dis_chk                    13
    #define       bdHubCmdHDRLite_DESC_dis_chk                 1
    #define   MSK32dHubCmdHDRLite_DESC_dis_chk                    0x20000000

    #define     BA_dHubCmdHDRLite_DESC_dis_upd                 0x0003
    #define     B16dHubCmdHDRLite_DESC_dis_upd                 0x0002
    #define   LSb32dHubCmdHDRLite_DESC_dis_upd                    30
    #define   LSb16dHubCmdHDRLite_DESC_dis_upd                    14
    #define       bdHubCmdHDRLite_DESC_dis_upd                 1
    #define   MSK32dHubCmdHDRLite_DESC_dis_upd                    0x40000000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubCmdHDRLite {
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmdHDRLite_DESC_size(r32)               _BFGET_(r32,15, 0)
    #define   SET32dHubCmdHDRLite_DESC_size(r32,v)             _BFSET_(r32,15, 0,v)
    #define   GET16dHubCmdHDRLite_DESC_size(r16)               _BFGET_(r16,15, 0)
    #define   SET16dHubCmdHDRLite_DESC_size(r16,v)             _BFSET_(r16,15, 0,v)

    #define   GET32dHubCmdHDRLite_DESC_sizeMTU(r32)            _BFGET_(r32,16,16)
    #define   SET32dHubCmdHDRLite_DESC_sizeMTU(r32,v)          _BFSET_(r32,16,16,v)
    #define   GET16dHubCmdHDRLite_DESC_sizeMTU(r16)            _BFGET_(r16, 0, 0)
    #define   SET16dHubCmdHDRLite_DESC_sizeMTU(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32dHubCmdHDRLite_DESC_semOpMTU(r32)           _BFGET_(r32,17,17)
    #define   SET32dHubCmdHDRLite_DESC_semOpMTU(r32,v)         _BFSET_(r32,17,17,v)
    #define   GET16dHubCmdHDRLite_DESC_semOpMTU(r16)           _BFGET_(r16, 1, 1)
    #define   SET16dHubCmdHDRLite_DESC_semOpMTU(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32dHubCmdHDRLite_DESC_chkSemId(r32)           _BFGET_(r32,22,18)
    #define   SET32dHubCmdHDRLite_DESC_chkSemId(r32,v)         _BFSET_(r32,22,18,v)
    #define   GET16dHubCmdHDRLite_DESC_chkSemId(r16)           _BFGET_(r16, 6, 2)
    #define   SET16dHubCmdHDRLite_DESC_chkSemId(r16,v)         _BFSET_(r16, 6, 2,v)

    #define   GET32dHubCmdHDRLite_DESC_updSemId(r32)           _BFGET_(r32,27,23)
    #define   SET32dHubCmdHDRLite_DESC_updSemId(r32,v)         _BFSET_(r32,27,23,v)
    #define   GET16dHubCmdHDRLite_DESC_updSemId(r16)           _BFGET_(r16,11, 7)
    #define   SET16dHubCmdHDRLite_DESC_updSemId(r16,v)         _BFSET_(r16,11, 7,v)

    #define   GET32dHubCmdHDRLite_DESC_interrupt(r32)          _BFGET_(r32,28,28)
    #define   SET32dHubCmdHDRLite_DESC_interrupt(r32,v)        _BFSET_(r32,28,28,v)
    #define   GET16dHubCmdHDRLite_DESC_interrupt(r16)          _BFGET_(r16,12,12)
    #define   SET16dHubCmdHDRLite_DESC_interrupt(r16,v)        _BFSET_(r16,12,12,v)

    #define   GET32dHubCmdHDRLite_DESC_dis_chk(r32)            _BFGET_(r32,29,29)
    #define   SET32dHubCmdHDRLite_DESC_dis_chk(r32,v)          _BFSET_(r32,29,29,v)
    #define   GET16dHubCmdHDRLite_DESC_dis_chk(r16)            _BFGET_(r16,13,13)
    #define   SET16dHubCmdHDRLite_DESC_dis_chk(r16,v)          _BFSET_(r16,13,13,v)

    #define   GET32dHubCmdHDRLite_DESC_dis_upd(r32)            _BFGET_(r32,30,30)
    #define   SET32dHubCmdHDRLite_DESC_dis_upd(r32,v)          _BFSET_(r32,30,30,v)
    #define   GET16dHubCmdHDRLite_DESC_dis_upd(r16)            _BFGET_(r16,14,14)
    #define   SET16dHubCmdHDRLite_DESC_dis_upd(r16,v)          _BFSET_(r16,14,14,v)

    #define     w32dHubCmdHDRLite_DESC                         {\
            UNSG32 uDESC_size                                  : 16;\
            UNSG32 uDESC_sizeMTU                               :  1;\
            UNSG32 uDESC_semOpMTU                              :  1;\
            UNSG32 uDESC_chkSemId                              :  5;\
            UNSG32 uDESC_updSemId                              :  5;\
            UNSG32 uDESC_interrupt                             :  1;\
            UNSG32 uDESC_dis_chk                               :  1;\
            UNSG32 uDESC_dis_upd                               :  1;\
            UNSG32 RSVDx0_b31                                  :  1;\
          }
    union { UNSG32 u32dHubCmdHDRLite_DESC;
            struct w32dHubCmdHDRLite_DESC;
          };
    ///////////////////////////////////////////////////////////
    } SIE_dHubCmdHDRLite;

    typedef union  T32dHubCmdHDRLite_DESC
          { UNSG32 u32;
            struct w32dHubCmdHDRLite_DESC;
                 } T32dHubCmdHDRLite_DESC;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubCmdHDRLite_DESC
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmdHDRLite_DESC;
                   };
                 } TdHubCmdHDRLite_DESC;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubCmdHDRLite_drvrd(SIE_dHubCmdHDRLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubCmdHDRLite_drvwr(SIE_dHubCmdHDRLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubCmdHDRLite_reset(SIE_dHubCmdHDRLite *p);
     SIGN32 dHubCmdHDRLite_cmp  (SIE_dHubCmdHDRLite *p, SIE_dHubCmdHDRLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubCmdHDRLite_check(p,pie,pfx,hLOG) dHubCmdHDRLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubCmdHDRLite_print(p,    pfx,hLOG) dHubCmdHDRLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubCmdHDRLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubCmdLite             biu              (4,4)
///     ###
///     * 64-bit dHub command issued by read/write masters
///     * [0:31]
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 MEM                  (W-)
///               %unsigned 32 addr
///                                    ###
///                                    * DRAM data address, in bytes; not necessarily MTU aligned.
///                                    * [32:63]
///                                    ###
///     @ 0x00004                      (P)
///     # 0x00004 HDR
///               $dHubCmdHDRLite      HDR               REG
///                                    ###
///                                    * end dHubCmd
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:      63b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubCmdLite
#define h_dHubCmdLite (){}

    #define     RA_dHubCmdLite_MEM                             0x0000

    #define     BA_dHubCmdLite_MEM_addr                        0x0000
    #define     B16dHubCmdLite_MEM_addr                        0x0000
    #define   LSb32dHubCmdLite_MEM_addr                           0
    #define   LSb16dHubCmdLite_MEM_addr                           0
    #define       bdHubCmdLite_MEM_addr                        32
    #define   MSK32dHubCmdLite_MEM_addr                           0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmdLite_HDR                             0x0004
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubCmdLite {
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmdLite_MEM_addr(r32)                   _BFGET_(r32,31, 0)
    #define   SET32dHubCmdLite_MEM_addr(r32,v)                 _BFSET_(r32,31, 0,v)

    #define     w32dHubCmdLite_MEM                             {\
            UNSG32 uMEM_addr                                   : 32;\
          }
    union { UNSG32 u32dHubCmdLite_MEM;
            struct w32dHubCmdLite_MEM;
          };
    ///////////////////////////////////////////////////////////
              SIE_dHubCmdHDRLite                               ie_HDR;
    ///////////////////////////////////////////////////////////
    } SIE_dHubCmdLite;

    typedef union  T32dHubCmdLite_MEM
          { UNSG32 u32;
            struct w32dHubCmdLite_MEM;
                 } T32dHubCmdLite_MEM;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubCmdLite_MEM
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmdLite_MEM;
                   };
                 } TdHubCmdLite_MEM;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubCmdLite_drvrd(SIE_dHubCmdLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubCmdLite_drvwr(SIE_dHubCmdLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubCmdLite_reset(SIE_dHubCmdLite *p);
     SIGN32 dHubCmdLite_cmp  (SIE_dHubCmdLite *p, SIE_dHubCmdLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubCmdLite_check(p,pie,pfx,hLOG) dHubCmdLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubCmdLite_print(p,    pfx,hLOG) dHubCmdLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubCmdLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubChannelLite         biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG                  (W-)
///               %unsigned 2  MTU
///                                    : 8byte                     0x0
///                                    : 32byte                    0x1
///                                    : 128byte                   0x2
///                                    : 4096byte                  0x3
///                                                 ###
///                                                 * Minimum transfer unit of the channel
///                                                 ###
///               %unsigned 1  QoS
///                                    ###
///                                    * Write 1 to turn on QoS detection
///                                    * When QoS detection is on, AxQOS values is dynamically chosen from AxQOS.HI and AxQOS.LO
///                                    ###
///               %unsigned 1  selfLoop
///                                    ###
///                                    * Write 1 to enable cmd looping support; 0 to turn off
///                                    ###
///               %unsigned 1  intrCtl                   0x0
///                                    : cmdDone                   0x0
///                                    : chIdle                    0x1
///                                                 ###
///                                                 * 0 : default vlaue, the interrupt is triggered by the finish of the dHub command if the interrupt bit is defined in the dHub command.
///                                                 * 1 : The interrupt is triggered if the dHub channel is idle ( no busy and no pending and the corresponding dHub command Q is empty).
///                                                 ###
///               %unsigned 1  hScan                     0x0
///                                    : rastScan                  0x0
///                                    : invScan                   0x1
///                                                 ###
///                                                 * This parameter will only apply to read channels.
///                                                 * It will affect 1D dHub command for the channel.
///                                                 * When scan is set to 1 (invScan), the data (beat) inside the dHub command will be fetched in the inverse order. ie. The data from the last address will come first and the data (beat) from the first address will come lastly.
///                                                 ###
///               %unsigned 1  vScan                     0x0
///                                    : rastScan                  0x0
///                                    : invScan                   0x1
///                                                 ###
///                                                 * This parameter will only apply to read channels.
///                                                 * It will affect 2D channels.
///                                                 * When scan is set to 1 (invScan),
///                                                 * The last address line (1D command) will be fetched first, and the first address line will be fetched lastly.
///                                                 * Note: This parameter cannot be set to 1 if MTU = 2 (4KB). The cost of using a 4KB buffer in current architecture is too much.
///                                                 ###
///               %%        25         # Stuffing bits...
///     @ 0x00004 AWQOS                (W-)
///               %unsigned 4  LO                        0x0
///                                    ###
///                                    * AWQOS value when low priority
///                                    ###
///               %unsigned 4  HI                        0xF
///                                    ###
///                                    * AWQOS value when high priority
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00008 ARQOS                (W-)
///               %unsigned 4  LO                        0x0
///                                    ###
///                                    * ARQOS value when low priority
///                                    ###
///               %unsigned 4  HI                        0xF
///                                    ###
///                                    * ARQOS value when high priority
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x0000C AXPROT_QOS           (W-)
///               %unsigned 1  EN                        0x0
///                                    ###
///                                    * 0: AxPROT[0] = 1'b0
///                                    * 1: AxPROT[0] = QoS managed, 1 indicates high priority transaction [Legacy mode]
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00010 START                (W-)
///               %unsigned 1  EN                        0x0
///                                    ###
///                                    * Write 1d to enable the channel; 0 to pause the channel
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00014 CLEAR                (W-)
///               %unsigned 1  EN
///                                    ###
///                                    * Write anything to reset the channel controller state
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00018 FLUSH                (W-)
///               %unsigned 1  EN
///                                    ###
///                                    * Write anything to start the data flushing process. Invalid for read (M2H) channels
///                                    * end dHubChannel
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      28B, bits:      27b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubChannelLite
#define h_dHubChannelLite (){}

    #define     RA_dHubChannelLite_CFG                         0x0000

    #define     BA_dHubChannelLite_CFG_MTU                     0x0000
    #define     B16dHubChannelLite_CFG_MTU                     0x0000
    #define   LSb32dHubChannelLite_CFG_MTU                        0
    #define   LSb16dHubChannelLite_CFG_MTU                        0
    #define       bdHubChannelLite_CFG_MTU                     2
    #define   MSK32dHubChannelLite_CFG_MTU                        0x00000003
    #define        dHubChannelLite_CFG_MTU_8byte                            0x0
    #define        dHubChannelLite_CFG_MTU_32byte                           0x1
    #define        dHubChannelLite_CFG_MTU_128byte                          0x2
    #define        dHubChannelLite_CFG_MTU_4096byte                         0x3

    #define     BA_dHubChannelLite_CFG_QoS                     0x0000
    #define     B16dHubChannelLite_CFG_QoS                     0x0000
    #define   LSb32dHubChannelLite_CFG_QoS                        2
    #define   LSb16dHubChannelLite_CFG_QoS                        2
    #define       bdHubChannelLite_CFG_QoS                     1
    #define   MSK32dHubChannelLite_CFG_QoS                        0x00000004

    #define     BA_dHubChannelLite_CFG_selfLoop                0x0000
    #define     B16dHubChannelLite_CFG_selfLoop                0x0000
    #define   LSb32dHubChannelLite_CFG_selfLoop                   3
    #define   LSb16dHubChannelLite_CFG_selfLoop                   3
    #define       bdHubChannelLite_CFG_selfLoop                1
    #define   MSK32dHubChannelLite_CFG_selfLoop                   0x00000008

    #define     BA_dHubChannelLite_CFG_intrCtl                 0x0000
    #define     B16dHubChannelLite_CFG_intrCtl                 0x0000
    #define   LSb32dHubChannelLite_CFG_intrCtl                    4
    #define   LSb16dHubChannelLite_CFG_intrCtl                    4
    #define       bdHubChannelLite_CFG_intrCtl                 1
    #define   MSK32dHubChannelLite_CFG_intrCtl                    0x00000010
    #define        dHubChannelLite_CFG_intrCtl_cmdDone                      0x0
    #define        dHubChannelLite_CFG_intrCtl_chIdle                       0x1

    #define     BA_dHubChannelLite_CFG_hScan                   0x0000
    #define     B16dHubChannelLite_CFG_hScan                   0x0000
    #define   LSb32dHubChannelLite_CFG_hScan                      5
    #define   LSb16dHubChannelLite_CFG_hScan                      5
    #define       bdHubChannelLite_CFG_hScan                   1
    #define   MSK32dHubChannelLite_CFG_hScan                      0x00000020
    #define        dHubChannelLite_CFG_hScan_rastScan                       0x0
    #define        dHubChannelLite_CFG_hScan_invScan                        0x1

    #define     BA_dHubChannelLite_CFG_vScan                   0x0000
    #define     B16dHubChannelLite_CFG_vScan                   0x0000
    #define   LSb32dHubChannelLite_CFG_vScan                      6
    #define   LSb16dHubChannelLite_CFG_vScan                      6
    #define       bdHubChannelLite_CFG_vScan                   1
    #define   MSK32dHubChannelLite_CFG_vScan                      0x00000040
    #define        dHubChannelLite_CFG_vScan_rastScan                       0x0
    #define        dHubChannelLite_CFG_vScan_invScan                        0x1
    ///////////////////////////////////////////////////////////
    #define     RA_dHubChannelLite_AWQOS                       0x0004

    #define     BA_dHubChannelLite_AWQOS_LO                    0x0004
    #define     B16dHubChannelLite_AWQOS_LO                    0x0004
    #define   LSb32dHubChannelLite_AWQOS_LO                       0
    #define   LSb16dHubChannelLite_AWQOS_LO                       0
    #define       bdHubChannelLite_AWQOS_LO                    4
    #define   MSK32dHubChannelLite_AWQOS_LO                       0x0000000F

    #define     BA_dHubChannelLite_AWQOS_HI                    0x0004
    #define     B16dHubChannelLite_AWQOS_HI                    0x0004
    #define   LSb32dHubChannelLite_AWQOS_HI                       4
    #define   LSb16dHubChannelLite_AWQOS_HI                       4
    #define       bdHubChannelLite_AWQOS_HI                    4
    #define   MSK32dHubChannelLite_AWQOS_HI                       0x000000F0
    ///////////////////////////////////////////////////////////
    #define     RA_dHubChannelLite_ARQOS                       0x0008

    #define     BA_dHubChannelLite_ARQOS_LO                    0x0008
    #define     B16dHubChannelLite_ARQOS_LO                    0x0008
    #define   LSb32dHubChannelLite_ARQOS_LO                       0
    #define   LSb16dHubChannelLite_ARQOS_LO                       0
    #define       bdHubChannelLite_ARQOS_LO                    4
    #define   MSK32dHubChannelLite_ARQOS_LO                       0x0000000F

    #define     BA_dHubChannelLite_ARQOS_HI                    0x0008
    #define     B16dHubChannelLite_ARQOS_HI                    0x0008
    #define   LSb32dHubChannelLite_ARQOS_HI                       4
    #define   LSb16dHubChannelLite_ARQOS_HI                       4
    #define       bdHubChannelLite_ARQOS_HI                    4
    #define   MSK32dHubChannelLite_ARQOS_HI                       0x000000F0
    ///////////////////////////////////////////////////////////
    #define     RA_dHubChannelLite_AXPROT_QOS                  0x000C

    #define     BA_dHubChannelLite_AXPROT_QOS_EN               0x000C
    #define     B16dHubChannelLite_AXPROT_QOS_EN               0x000C
    #define   LSb32dHubChannelLite_AXPROT_QOS_EN                  0
    #define   LSb16dHubChannelLite_AXPROT_QOS_EN                  0
    #define       bdHubChannelLite_AXPROT_QOS_EN               1
    #define   MSK32dHubChannelLite_AXPROT_QOS_EN                  0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubChannelLite_START                       0x0010

    #define     BA_dHubChannelLite_START_EN                    0x0010
    #define     B16dHubChannelLite_START_EN                    0x0010
    #define   LSb32dHubChannelLite_START_EN                       0
    #define   LSb16dHubChannelLite_START_EN                       0
    #define       bdHubChannelLite_START_EN                    1
    #define   MSK32dHubChannelLite_START_EN                       0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubChannelLite_CLEAR                       0x0014

    #define     BA_dHubChannelLite_CLEAR_EN                    0x0014
    #define     B16dHubChannelLite_CLEAR_EN                    0x0014
    #define   LSb32dHubChannelLite_CLEAR_EN                       0
    #define   LSb16dHubChannelLite_CLEAR_EN                       0
    #define       bdHubChannelLite_CLEAR_EN                    1
    #define   MSK32dHubChannelLite_CLEAR_EN                       0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubChannelLite_FLUSH                       0x0018

    #define     BA_dHubChannelLite_FLUSH_EN                    0x0018
    #define     B16dHubChannelLite_FLUSH_EN                    0x0018
    #define   LSb32dHubChannelLite_FLUSH_EN                       0
    #define   LSb16dHubChannelLite_FLUSH_EN                       0
    #define       bdHubChannelLite_FLUSH_EN                    1
    #define   MSK32dHubChannelLite_FLUSH_EN                       0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubChannelLite {
    ///////////////////////////////////////////////////////////
    #define   GET32dHubChannelLite_CFG_MTU(r32)                _BFGET_(r32, 1, 0)
    #define   SET32dHubChannelLite_CFG_MTU(r32,v)              _BFSET_(r32, 1, 0,v)
    #define   GET16dHubChannelLite_CFG_MTU(r16)                _BFGET_(r16, 1, 0)
    #define   SET16dHubChannelLite_CFG_MTU(r16,v)              _BFSET_(r16, 1, 0,v)

    #define   GET32dHubChannelLite_CFG_QoS(r32)                _BFGET_(r32, 2, 2)
    #define   SET32dHubChannelLite_CFG_QoS(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16dHubChannelLite_CFG_QoS(r16)                _BFGET_(r16, 2, 2)
    #define   SET16dHubChannelLite_CFG_QoS(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32dHubChannelLite_CFG_selfLoop(r32)           _BFGET_(r32, 3, 3)
    #define   SET32dHubChannelLite_CFG_selfLoop(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16dHubChannelLite_CFG_selfLoop(r16)           _BFGET_(r16, 3, 3)
    #define   SET16dHubChannelLite_CFG_selfLoop(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32dHubChannelLite_CFG_intrCtl(r32)            _BFGET_(r32, 4, 4)
    #define   SET32dHubChannelLite_CFG_intrCtl(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16dHubChannelLite_CFG_intrCtl(r16)            _BFGET_(r16, 4, 4)
    #define   SET16dHubChannelLite_CFG_intrCtl(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32dHubChannelLite_CFG_hScan(r32)              _BFGET_(r32, 5, 5)
    #define   SET32dHubChannelLite_CFG_hScan(r32,v)            _BFSET_(r32, 5, 5,v)
    #define   GET16dHubChannelLite_CFG_hScan(r16)              _BFGET_(r16, 5, 5)
    #define   SET16dHubChannelLite_CFG_hScan(r16,v)            _BFSET_(r16, 5, 5,v)

    #define   GET32dHubChannelLite_CFG_vScan(r32)              _BFGET_(r32, 6, 6)
    #define   SET32dHubChannelLite_CFG_vScan(r32,v)            _BFSET_(r32, 6, 6,v)
    #define   GET16dHubChannelLite_CFG_vScan(r16)              _BFGET_(r16, 6, 6)
    #define   SET16dHubChannelLite_CFG_vScan(r16,v)            _BFSET_(r16, 6, 6,v)

    #define     w32dHubChannelLite_CFG                         {\
            UNSG32 uCFG_MTU                                    :  2;\
            UNSG32 uCFG_QoS                                    :  1;\
            UNSG32 uCFG_selfLoop                               :  1;\
            UNSG32 uCFG_intrCtl                                :  1;\
            UNSG32 uCFG_hScan                                  :  1;\
            UNSG32 uCFG_vScan                                  :  1;\
            UNSG32 RSVDx0_b7                                   : 25;\
          }
    union { UNSG32 u32dHubChannelLite_CFG;
            struct w32dHubChannelLite_CFG;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubChannelLite_AWQOS_LO(r32)               _BFGET_(r32, 3, 0)
    #define   SET32dHubChannelLite_AWQOS_LO(r32,v)             _BFSET_(r32, 3, 0,v)
    #define   GET16dHubChannelLite_AWQOS_LO(r16)               _BFGET_(r16, 3, 0)
    #define   SET16dHubChannelLite_AWQOS_LO(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32dHubChannelLite_AWQOS_HI(r32)               _BFGET_(r32, 7, 4)
    #define   SET32dHubChannelLite_AWQOS_HI(r32,v)             _BFSET_(r32, 7, 4,v)
    #define   GET16dHubChannelLite_AWQOS_HI(r16)               _BFGET_(r16, 7, 4)
    #define   SET16dHubChannelLite_AWQOS_HI(r16,v)             _BFSET_(r16, 7, 4,v)

    #define     w32dHubChannelLite_AWQOS                       {\
            UNSG32 uAWQOS_LO                                   :  4;\
            UNSG32 uAWQOS_HI                                   :  4;\
            UNSG32 RSVDx4_b8                                   : 24;\
          }
    union { UNSG32 u32dHubChannelLite_AWQOS;
            struct w32dHubChannelLite_AWQOS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubChannelLite_ARQOS_LO(r32)               _BFGET_(r32, 3, 0)
    #define   SET32dHubChannelLite_ARQOS_LO(r32,v)             _BFSET_(r32, 3, 0,v)
    #define   GET16dHubChannelLite_ARQOS_LO(r16)               _BFGET_(r16, 3, 0)
    #define   SET16dHubChannelLite_ARQOS_LO(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32dHubChannelLite_ARQOS_HI(r32)               _BFGET_(r32, 7, 4)
    #define   SET32dHubChannelLite_ARQOS_HI(r32,v)             _BFSET_(r32, 7, 4,v)
    #define   GET16dHubChannelLite_ARQOS_HI(r16)               _BFGET_(r16, 7, 4)
    #define   SET16dHubChannelLite_ARQOS_HI(r16,v)             _BFSET_(r16, 7, 4,v)

    #define     w32dHubChannelLite_ARQOS                       {\
            UNSG32 uARQOS_LO                                   :  4;\
            UNSG32 uARQOS_HI                                   :  4;\
            UNSG32 RSVDx8_b8                                   : 24;\
          }
    union { UNSG32 u32dHubChannelLite_ARQOS;
            struct w32dHubChannelLite_ARQOS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubChannelLite_AXPROT_QOS_EN(r32)          _BFGET_(r32, 0, 0)
    #define   SET32dHubChannelLite_AXPROT_QOS_EN(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16dHubChannelLite_AXPROT_QOS_EN(r16)          _BFGET_(r16, 0, 0)
    #define   SET16dHubChannelLite_AXPROT_QOS_EN(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32dHubChannelLite_AXPROT_QOS                  {\
            UNSG32 uAXPROT_QOS_EN                              :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32dHubChannelLite_AXPROT_QOS;
            struct w32dHubChannelLite_AXPROT_QOS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubChannelLite_START_EN(r32)               _BFGET_(r32, 0, 0)
    #define   SET32dHubChannelLite_START_EN(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16dHubChannelLite_START_EN(r16)               _BFGET_(r16, 0, 0)
    #define   SET16dHubChannelLite_START_EN(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32dHubChannelLite_START                       {\
            UNSG32 uSTART_EN                                   :  1;\
            UNSG32 RSVDx10_b1                                  : 31;\
          }
    union { UNSG32 u32dHubChannelLite_START;
            struct w32dHubChannelLite_START;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubChannelLite_CLEAR_EN(r32)               _BFGET_(r32, 0, 0)
    #define   SET32dHubChannelLite_CLEAR_EN(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16dHubChannelLite_CLEAR_EN(r16)               _BFGET_(r16, 0, 0)
    #define   SET16dHubChannelLite_CLEAR_EN(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32dHubChannelLite_CLEAR                       {\
            UNSG32 uCLEAR_EN                                   :  1;\
            UNSG32 RSVDx14_b1                                  : 31;\
          }
    union { UNSG32 u32dHubChannelLite_CLEAR;
            struct w32dHubChannelLite_CLEAR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubChannelLite_FLUSH_EN(r32)               _BFGET_(r32, 0, 0)
    #define   SET32dHubChannelLite_FLUSH_EN(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16dHubChannelLite_FLUSH_EN(r16)               _BFGET_(r16, 0, 0)
    #define   SET16dHubChannelLite_FLUSH_EN(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32dHubChannelLite_FLUSH                       {\
            UNSG32 uFLUSH_EN                                   :  1;\
            UNSG32 RSVDx18_b1                                  : 31;\
          }
    union { UNSG32 u32dHubChannelLite_FLUSH;
            struct w32dHubChannelLite_FLUSH;
          };
    ///////////////////////////////////////////////////////////
    } SIE_dHubChannelLite;

    typedef union  T32dHubChannelLite_CFG
          { UNSG32 u32;
            struct w32dHubChannelLite_CFG;
                 } T32dHubChannelLite_CFG;
    typedef union  T32dHubChannelLite_AWQOS
          { UNSG32 u32;
            struct w32dHubChannelLite_AWQOS;
                 } T32dHubChannelLite_AWQOS;
    typedef union  T32dHubChannelLite_ARQOS
          { UNSG32 u32;
            struct w32dHubChannelLite_ARQOS;
                 } T32dHubChannelLite_ARQOS;
    typedef union  T32dHubChannelLite_AXPROT_QOS
          { UNSG32 u32;
            struct w32dHubChannelLite_AXPROT_QOS;
                 } T32dHubChannelLite_AXPROT_QOS;
    typedef union  T32dHubChannelLite_START
          { UNSG32 u32;
            struct w32dHubChannelLite_START;
                 } T32dHubChannelLite_START;
    typedef union  T32dHubChannelLite_CLEAR
          { UNSG32 u32;
            struct w32dHubChannelLite_CLEAR;
                 } T32dHubChannelLite_CLEAR;
    typedef union  T32dHubChannelLite_FLUSH
          { UNSG32 u32;
            struct w32dHubChannelLite_FLUSH;
                 } T32dHubChannelLite_FLUSH;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubChannelLite_CFG
          { UNSG32 u32[1];
            struct {
            struct w32dHubChannelLite_CFG;
                   };
                 } TdHubChannelLite_CFG;
    typedef union  TdHubChannelLite_AWQOS
          { UNSG32 u32[1];
            struct {
            struct w32dHubChannelLite_AWQOS;
                   };
                 } TdHubChannelLite_AWQOS;
    typedef union  TdHubChannelLite_ARQOS
          { UNSG32 u32[1];
            struct {
            struct w32dHubChannelLite_ARQOS;
                   };
                 } TdHubChannelLite_ARQOS;
    typedef union  TdHubChannelLite_AXPROT_QOS
          { UNSG32 u32[1];
            struct {
            struct w32dHubChannelLite_AXPROT_QOS;
                   };
                 } TdHubChannelLite_AXPROT_QOS;
    typedef union  TdHubChannelLite_START
          { UNSG32 u32[1];
            struct {
            struct w32dHubChannelLite_START;
                   };
                 } TdHubChannelLite_START;
    typedef union  TdHubChannelLite_CLEAR
          { UNSG32 u32[1];
            struct {
            struct w32dHubChannelLite_CLEAR;
                   };
                 } TdHubChannelLite_CLEAR;
    typedef union  TdHubChannelLite_FLUSH
          { UNSG32 u32[1];
            struct {
            struct w32dHubChannelLite_FLUSH;
                   };
                 } TdHubChannelLite_FLUSH;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubChannelLite_drvrd(SIE_dHubChannelLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubChannelLite_drvwr(SIE_dHubChannelLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubChannelLite_reset(SIE_dHubChannelLite *p);
     SIGN32 dHubChannelLite_cmp  (SIE_dHubChannelLite *p, SIE_dHubChannelLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubChannelLite_check(p,pie,pfx,hLOG) dHubChannelLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubChannelLite_print(p,    pfx,hLOG) dHubChannelLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubChannelLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubRegLite             biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 SemaHub
///               $SemaHubLite         SemaHub           REG
///                                    ###
///                                    * For dHub internal interrupts, also provide semaphore service for external (all channels will be opened to external to access).
///                                    * Channel 0 is used for dHub.HBO interrupt.
///                                    * Channel N+1 is used for dHub.Channel[N] interrupt.
///                                    ###
///     @ 0x00400                      (P)
///     # 0x00400 HBO
///               $HBOLite             HBO               REG
///                                    ###
///                                    * For dHub channels (command/data queues), also provide (unused) FIFO service for external.
///                                    * Channel 2N is used for dHub.Channel[N] command.
///                                    * Channel 2N+1 is used for dHub.Channel[N] data.
///                                    ###
///     @ 0x00B00 ARR                  (P)
///     # 0x00B00 channelCtl
///               $dHubChannelLite     channelCtl        REG      [16]
///                                    ###
///                                    * Up-to 16 channels
///                                    ###
///     @ 0x00CC0 BUSY                 (R-)
///               %unsigned 16 ST
///                                    ###
///                                    * Per channel status
///                                    * 0: no ongoing command is being processed, and no flushing is taking place
///                                    * 1: channel controller is busy
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00CC4 PENDING              (R-)
///               %unsigned 16 ST
///                                    ###
///                                    * Per channel status
///                                    * 0: Response queue is empty, meaning no outstanding AXI transactions
///                                    * 1: there exist some outstanding AXI transactions
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00CC8 busRstEn             (RW-)
///               %unsigned 1  reg                       0x0
///                                    ###
///                                    * Write one to this register will trigger gate-keeper to take over the AXI bus.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00CCC busRstDone           (R-)
///               %unsigned 1  reg                       0x1
///                                    ###
///                                    * After gate-keeper take over the AXI bus, it will assert this bit once there is no outstanding transactions on AXI bus.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00CD0 flowCtl              (P)
///               %unsigned 8  rAlpha                    0x0
///               %unsigned 8  wAlpha                    0x0
///                                    ###
///                                    * Flow control parameter for read and write axi master.
///                                    * clkCnt=(alpha*bstLen)>>8.
///                                    * This # of clock cycles will be blocked for the axi master after an axi command with the burst length of “bstLen”.
///                                    * When set alpha to be 0, the master will never be blocked.
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x00CD4 axiCmdCol            (P)
///               %unsigned 16 rCnt                      0x0
///               %unsigned 16 wCnt                      0x0
///                                    ###
///                                    * Axi command collection. The counter value indicate read/write do the command collection for # of clock cycles, start from the first command pushed to an empty command Q. Here are the conditions that will trigger the Axi master to send out command.
///                                    * Cmd Q full or the counter count down to “0” from the programmed value.
///                                    * Set the counter to 0 will disable the command collection.
///                                    * end dHubReg
///                                    ###
///     @ 0x00CD8                      (W-)
///     #         # Stuffing bytes...
///               %% 320
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:    3328B, bits:    3586b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubRegLite
#define h_dHubRegLite (){}

    #define     RA_dHubRegLite_SemaHub                         0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_HBO                             0x0400
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_ARR                             0x0B00
    #define     RA_dHubRegLite_channelCtl                      0x0B00
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_BUSY                            0x0CC0

    #define     BA_dHubRegLite_BUSY_ST                         0x0CC0
    #define     B16dHubRegLite_BUSY_ST                         0x0CC0
    #define   LSb32dHubRegLite_BUSY_ST                            0
    #define   LSb16dHubRegLite_BUSY_ST                            0
    #define       bdHubRegLite_BUSY_ST                         16
    #define   MSK32dHubRegLite_BUSY_ST                            0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_PENDING                         0x0CC4

    #define     BA_dHubRegLite_PENDING_ST                      0x0CC4
    #define     B16dHubRegLite_PENDING_ST                      0x0CC4
    #define   LSb32dHubRegLite_PENDING_ST                         0
    #define   LSb16dHubRegLite_PENDING_ST                         0
    #define       bdHubRegLite_PENDING_ST                      16
    #define   MSK32dHubRegLite_PENDING_ST                         0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_busRstEn                        0x0CC8

    #define     BA_dHubRegLite_busRstEn_reg                    0x0CC8
    #define     B16dHubRegLite_busRstEn_reg                    0x0CC8
    #define   LSb32dHubRegLite_busRstEn_reg                       0
    #define   LSb16dHubRegLite_busRstEn_reg                       0
    #define       bdHubRegLite_busRstEn_reg                    1
    #define   MSK32dHubRegLite_busRstEn_reg                       0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_busRstDone                      0x0CCC

    #define     BA_dHubRegLite_busRstDone_reg                  0x0CCC
    #define     B16dHubRegLite_busRstDone_reg                  0x0CCC
    #define   LSb32dHubRegLite_busRstDone_reg                     0
    #define   LSb16dHubRegLite_busRstDone_reg                     0
    #define       bdHubRegLite_busRstDone_reg                  1
    #define   MSK32dHubRegLite_busRstDone_reg                     0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_flowCtl                         0x0CD0

    #define     BA_dHubRegLite_flowCtl_rAlpha                  0x0CD0
    #define     B16dHubRegLite_flowCtl_rAlpha                  0x0CD0
    #define   LSb32dHubRegLite_flowCtl_rAlpha                     0
    #define   LSb16dHubRegLite_flowCtl_rAlpha                     0
    #define       bdHubRegLite_flowCtl_rAlpha                  8
    #define   MSK32dHubRegLite_flowCtl_rAlpha                     0x000000FF

    #define     BA_dHubRegLite_flowCtl_wAlpha                  0x0CD1
    #define     B16dHubRegLite_flowCtl_wAlpha                  0x0CD0
    #define   LSb32dHubRegLite_flowCtl_wAlpha                     8
    #define   LSb16dHubRegLite_flowCtl_wAlpha                     8
    #define       bdHubRegLite_flowCtl_wAlpha                  8
    #define   MSK32dHubRegLite_flowCtl_wAlpha                     0x0000FF00
    ///////////////////////////////////////////////////////////
    #define     RA_dHubRegLite_axiCmdCol                       0x0CD4

    #define     BA_dHubRegLite_axiCmdCol_rCnt                  0x0CD4
    #define     B16dHubRegLite_axiCmdCol_rCnt                  0x0CD4
    #define   LSb32dHubRegLite_axiCmdCol_rCnt                     0
    #define   LSb16dHubRegLite_axiCmdCol_rCnt                     0
    #define       bdHubRegLite_axiCmdCol_rCnt                  16
    #define   MSK32dHubRegLite_axiCmdCol_rCnt                     0x0000FFFF

    #define     BA_dHubRegLite_axiCmdCol_wCnt                  0x0CD6
    #define     B16dHubRegLite_axiCmdCol_wCnt                  0x0CD6
    #define   LSb32dHubRegLite_axiCmdCol_wCnt                     16
    #define   LSb16dHubRegLite_axiCmdCol_wCnt                     0
    #define       bdHubRegLite_axiCmdCol_wCnt                  16
    #define   MSK32dHubRegLite_axiCmdCol_wCnt                     0xFFFF0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubRegLite {
    ///////////////////////////////////////////////////////////
              SIE_SemaHubLite                                  ie_SemaHub;
    ///////////////////////////////////////////////////////////
              SIE_HBOLite                                      ie_HBO;
    ///////////////////////////////////////////////////////////
              SIE_dHubChannelLite                              ie_channelCtl[16];
    ///////////////////////////////////////////////////////////
    #define   GET32dHubRegLite_BUSY_ST(r32)                    _BFGET_(r32,15, 0)
    #define   SET32dHubRegLite_BUSY_ST(r32,v)                  _BFSET_(r32,15, 0,v)
    #define   GET16dHubRegLite_BUSY_ST(r16)                    _BFGET_(r16,15, 0)
    #define   SET16dHubRegLite_BUSY_ST(r16,v)                  _BFSET_(r16,15, 0,v)

    #define     w32dHubRegLite_BUSY                            {\
            UNSG32 uBUSY_ST                                    : 16;\
            UNSG32 RSVDxCC0_b16                                : 16;\
          }
    union { UNSG32 u32dHubRegLite_BUSY;
            struct w32dHubRegLite_BUSY;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubRegLite_PENDING_ST(r32)                 _BFGET_(r32,15, 0)
    #define   SET32dHubRegLite_PENDING_ST(r32,v)               _BFSET_(r32,15, 0,v)
    #define   GET16dHubRegLite_PENDING_ST(r16)                 _BFGET_(r16,15, 0)
    #define   SET16dHubRegLite_PENDING_ST(r16,v)               _BFSET_(r16,15, 0,v)

    #define     w32dHubRegLite_PENDING                         {\
            UNSG32 uPENDING_ST                                 : 16;\
            UNSG32 RSVDxCC4_b16                                : 16;\
          }
    union { UNSG32 u32dHubRegLite_PENDING;
            struct w32dHubRegLite_PENDING;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubRegLite_busRstEn_reg(r32)               _BFGET_(r32, 0, 0)
    #define   SET32dHubRegLite_busRstEn_reg(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16dHubRegLite_busRstEn_reg(r16)               _BFGET_(r16, 0, 0)
    #define   SET16dHubRegLite_busRstEn_reg(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32dHubRegLite_busRstEn                        {\
            UNSG32 ubusRstEn_reg                               :  1;\
            UNSG32 RSVDxCC8_b1                                 : 31;\
          }
    union { UNSG32 u32dHubRegLite_busRstEn;
            struct w32dHubRegLite_busRstEn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubRegLite_busRstDone_reg(r32)             _BFGET_(r32, 0, 0)
    #define   SET32dHubRegLite_busRstDone_reg(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16dHubRegLite_busRstDone_reg(r16)             _BFGET_(r16, 0, 0)
    #define   SET16dHubRegLite_busRstDone_reg(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32dHubRegLite_busRstDone                      {\
            UNSG32 ubusRstDone_reg                             :  1;\
            UNSG32 RSVDxCCC_b1                                 : 31;\
          }
    union { UNSG32 u32dHubRegLite_busRstDone;
            struct w32dHubRegLite_busRstDone;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubRegLite_flowCtl_rAlpha(r32)             _BFGET_(r32, 7, 0)
    #define   SET32dHubRegLite_flowCtl_rAlpha(r32,v)           _BFSET_(r32, 7, 0,v)
    #define   GET16dHubRegLite_flowCtl_rAlpha(r16)             _BFGET_(r16, 7, 0)
    #define   SET16dHubRegLite_flowCtl_rAlpha(r16,v)           _BFSET_(r16, 7, 0,v)

    #define   GET32dHubRegLite_flowCtl_wAlpha(r32)             _BFGET_(r32,15, 8)
    #define   SET32dHubRegLite_flowCtl_wAlpha(r32,v)           _BFSET_(r32,15, 8,v)
    #define   GET16dHubRegLite_flowCtl_wAlpha(r16)             _BFGET_(r16,15, 8)
    #define   SET16dHubRegLite_flowCtl_wAlpha(r16,v)           _BFSET_(r16,15, 8,v)

    #define     w32dHubRegLite_flowCtl                         {\
            UNSG32 uflowCtl_rAlpha                             :  8;\
            UNSG32 uflowCtl_wAlpha                             :  8;\
            UNSG32 RSVDxCD0_b16                                : 16;\
          }
    union { UNSG32 u32dHubRegLite_flowCtl;
            struct w32dHubRegLite_flowCtl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubRegLite_axiCmdCol_rCnt(r32)             _BFGET_(r32,15, 0)
    #define   SET32dHubRegLite_axiCmdCol_rCnt(r32,v)           _BFSET_(r32,15, 0,v)
    #define   GET16dHubRegLite_axiCmdCol_rCnt(r16)             _BFGET_(r16,15, 0)
    #define   SET16dHubRegLite_axiCmdCol_rCnt(r16,v)           _BFSET_(r16,15, 0,v)

    #define   GET32dHubRegLite_axiCmdCol_wCnt(r32)             _BFGET_(r32,31,16)
    #define   SET32dHubRegLite_axiCmdCol_wCnt(r32,v)           _BFSET_(r32,31,16,v)
    #define   GET16dHubRegLite_axiCmdCol_wCnt(r16)             _BFGET_(r16,15, 0)
    #define   SET16dHubRegLite_axiCmdCol_wCnt(r16,v)           _BFSET_(r16,15, 0,v)

    #define     w32dHubRegLite_axiCmdCol                       {\
            UNSG32 uaxiCmdCol_rCnt                             : 16;\
            UNSG32 uaxiCmdCol_wCnt                             : 16;\
          }
    union { UNSG32 u32dHubRegLite_axiCmdCol;
            struct w32dHubRegLite_axiCmdCol;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxCD8                                    [40];
    ///////////////////////////////////////////////////////////
    } SIE_dHubRegLite;

    typedef union  T32dHubRegLite_BUSY
          { UNSG32 u32;
            struct w32dHubRegLite_BUSY;
                 } T32dHubRegLite_BUSY;
    typedef union  T32dHubRegLite_PENDING
          { UNSG32 u32;
            struct w32dHubRegLite_PENDING;
                 } T32dHubRegLite_PENDING;
    typedef union  T32dHubRegLite_busRstEn
          { UNSG32 u32;
            struct w32dHubRegLite_busRstEn;
                 } T32dHubRegLite_busRstEn;
    typedef union  T32dHubRegLite_busRstDone
          { UNSG32 u32;
            struct w32dHubRegLite_busRstDone;
                 } T32dHubRegLite_busRstDone;
    typedef union  T32dHubRegLite_flowCtl
          { UNSG32 u32;
            struct w32dHubRegLite_flowCtl;
                 } T32dHubRegLite_flowCtl;
    typedef union  T32dHubRegLite_axiCmdCol
          { UNSG32 u32;
            struct w32dHubRegLite_axiCmdCol;
                 } T32dHubRegLite_axiCmdCol;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubRegLite_BUSY
          { UNSG32 u32[1];
            struct {
            struct w32dHubRegLite_BUSY;
                   };
                 } TdHubRegLite_BUSY;
    typedef union  TdHubRegLite_PENDING
          { UNSG32 u32[1];
            struct {
            struct w32dHubRegLite_PENDING;
                   };
                 } TdHubRegLite_PENDING;
    typedef union  TdHubRegLite_busRstEn
          { UNSG32 u32[1];
            struct {
            struct w32dHubRegLite_busRstEn;
                   };
                 } TdHubRegLite_busRstEn;
    typedef union  TdHubRegLite_busRstDone
          { UNSG32 u32[1];
            struct {
            struct w32dHubRegLite_busRstDone;
                   };
                 } TdHubRegLite_busRstDone;
    typedef union  TdHubRegLite_flowCtl
          { UNSG32 u32[1];
            struct {
            struct w32dHubRegLite_flowCtl;
                   };
                 } TdHubRegLite_flowCtl;
    typedef union  TdHubRegLite_axiCmdCol
          { UNSG32 u32[1];
            struct {
            struct w32dHubRegLite_axiCmdCol;
                   };
                 } TdHubRegLite_axiCmdCol;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubRegLite_drvrd(SIE_dHubRegLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubRegLite_drvwr(SIE_dHubRegLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubRegLite_reset(SIE_dHubRegLite *p);
     SIGN32 dHubRegLite_cmp  (SIE_dHubRegLite *p, SIE_dHubRegLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubRegLite_check(p,pie,pfx,hLOG) dHubRegLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubRegLite_print(p,    pfx,hLOG) dHubRegLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubRegLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubCmd2DLite           biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 MEM                  (W-)
///               %unsigned 32 addr
///                                    ###
///                                    * DRAM data address of the 2D buffer, in bytes.
///                                    ###
///     @ 0x00004 DESC                 (W-)
///               %unsigned 16 stride
///                                    ###
///                                    * Line stride size in bytes
///                                    ###
///               %unsigned 13 numLine
///                                    ###
///                                    * Number of lines in buffer. Size of 0 is forbidden.
///                                    ###
///               %unsigned 2  hdrLoop
///                                    ###
///                                    * Size of line-loop for choosing dHubCmdHDR
///                                    * 0 is treated as 4
///                                    ###
///               %unsigned 1  interrupt
///                                    ###
///                                    * 1: raise interrupt upon whole 2D command finish.
///                                    * 1: set the last 1D command interrupt bit.
///                                    * 0 : use the default 1D command interrupt bit.
///                                    ###
///     @ 0x00008 START                (W-)
///               %unsigned 1  EN                        0x0
///                                    ###
///                                    * Write 1 to enable the channel; 0 to pause the channel
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C CLEAR                (W-)
///               %unsigned 1  EN
///                                    ###
///                                    * Write anything to reset the 2D engine.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00010                      (P)
///     # 0x00010 HDR
///               $dHubCmdHDRLite      HDR               REG       [4]
///                                    ###
///                                    * Headers used in generating dHubCmd for each line in looping order, loop size (1,2,3,4) specified by DESC_hdrLoop
///                                    * end dHubCmd2D
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      32B, bits:     190b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubCmd2DLite
#define h_dHubCmd2DLite (){}

    #define     RA_dHubCmd2DLite_MEM                           0x0000

    #define     BA_dHubCmd2DLite_MEM_addr                      0x0000
    #define     B16dHubCmd2DLite_MEM_addr                      0x0000
    #define   LSb32dHubCmd2DLite_MEM_addr                         0
    #define   LSb16dHubCmd2DLite_MEM_addr                         0
    #define       bdHubCmd2DLite_MEM_addr                      32
    #define   MSK32dHubCmd2DLite_MEM_addr                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2DLite_DESC                          0x0004

    #define     BA_dHubCmd2DLite_DESC_stride                   0x0004
    #define     B16dHubCmd2DLite_DESC_stride                   0x0004
    #define   LSb32dHubCmd2DLite_DESC_stride                      0
    #define   LSb16dHubCmd2DLite_DESC_stride                      0
    #define       bdHubCmd2DLite_DESC_stride                   16
    #define   MSK32dHubCmd2DLite_DESC_stride                      0x0000FFFF

    #define     BA_dHubCmd2DLite_DESC_numLine                  0x0006
    #define     B16dHubCmd2DLite_DESC_numLine                  0x0006
    #define   LSb32dHubCmd2DLite_DESC_numLine                     16
    #define   LSb16dHubCmd2DLite_DESC_numLine                     0
    #define       bdHubCmd2DLite_DESC_numLine                  13
    #define   MSK32dHubCmd2DLite_DESC_numLine                     0x1FFF0000

    #define     BA_dHubCmd2DLite_DESC_hdrLoop                  0x0007
    #define     B16dHubCmd2DLite_DESC_hdrLoop                  0x0006
    #define   LSb32dHubCmd2DLite_DESC_hdrLoop                     29
    #define   LSb16dHubCmd2DLite_DESC_hdrLoop                     13
    #define       bdHubCmd2DLite_DESC_hdrLoop                  2
    #define   MSK32dHubCmd2DLite_DESC_hdrLoop                     0x60000000

    #define     BA_dHubCmd2DLite_DESC_interrupt                0x0007
    #define     B16dHubCmd2DLite_DESC_interrupt                0x0006
    #define   LSb32dHubCmd2DLite_DESC_interrupt                   31
    #define   LSb16dHubCmd2DLite_DESC_interrupt                   15
    #define       bdHubCmd2DLite_DESC_interrupt                1
    #define   MSK32dHubCmd2DLite_DESC_interrupt                   0x80000000
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2DLite_START                         0x0008

    #define     BA_dHubCmd2DLite_START_EN                      0x0008
    #define     B16dHubCmd2DLite_START_EN                      0x0008
    #define   LSb32dHubCmd2DLite_START_EN                         0
    #define   LSb16dHubCmd2DLite_START_EN                         0
    #define       bdHubCmd2DLite_START_EN                      1
    #define   MSK32dHubCmd2DLite_START_EN                         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2DLite_CLEAR                         0x000C

    #define     BA_dHubCmd2DLite_CLEAR_EN                      0x000C
    #define     B16dHubCmd2DLite_CLEAR_EN                      0x000C
    #define   LSb32dHubCmd2DLite_CLEAR_EN                         0
    #define   LSb16dHubCmd2DLite_CLEAR_EN                         0
    #define       bdHubCmd2DLite_CLEAR_EN                      1
    #define   MSK32dHubCmd2DLite_CLEAR_EN                         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2DLite_HDR                           0x0010
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubCmd2DLite {
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2DLite_MEM_addr(r32)                 _BFGET_(r32,31, 0)
    #define   SET32dHubCmd2DLite_MEM_addr(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32dHubCmd2DLite_MEM                           {\
            UNSG32 uMEM_addr                                   : 32;\
          }
    union { UNSG32 u32dHubCmd2DLite_MEM;
            struct w32dHubCmd2DLite_MEM;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2DLite_DESC_stride(r32)              _BFGET_(r32,15, 0)
    #define   SET32dHubCmd2DLite_DESC_stride(r32,v)            _BFSET_(r32,15, 0,v)
    #define   GET16dHubCmd2DLite_DESC_stride(r16)              _BFGET_(r16,15, 0)
    #define   SET16dHubCmd2DLite_DESC_stride(r16,v)            _BFSET_(r16,15, 0,v)

    #define   GET32dHubCmd2DLite_DESC_numLine(r32)             _BFGET_(r32,28,16)
    #define   SET32dHubCmd2DLite_DESC_numLine(r32,v)           _BFSET_(r32,28,16,v)
    #define   GET16dHubCmd2DLite_DESC_numLine(r16)             _BFGET_(r16,12, 0)
    #define   SET16dHubCmd2DLite_DESC_numLine(r16,v)           _BFSET_(r16,12, 0,v)

    #define   GET32dHubCmd2DLite_DESC_hdrLoop(r32)             _BFGET_(r32,30,29)
    #define   SET32dHubCmd2DLite_DESC_hdrLoop(r32,v)           _BFSET_(r32,30,29,v)
    #define   GET16dHubCmd2DLite_DESC_hdrLoop(r16)             _BFGET_(r16,14,13)
    #define   SET16dHubCmd2DLite_DESC_hdrLoop(r16,v)           _BFSET_(r16,14,13,v)

    #define   GET32dHubCmd2DLite_DESC_interrupt(r32)           _BFGET_(r32,31,31)
    #define   SET32dHubCmd2DLite_DESC_interrupt(r32,v)         _BFSET_(r32,31,31,v)
    #define   GET16dHubCmd2DLite_DESC_interrupt(r16)           _BFGET_(r16,15,15)
    #define   SET16dHubCmd2DLite_DESC_interrupt(r16,v)         _BFSET_(r16,15,15,v)

    #define     w32dHubCmd2DLite_DESC                          {\
            UNSG32 uDESC_stride                                : 16;\
            UNSG32 uDESC_numLine                               : 13;\
            UNSG32 uDESC_hdrLoop                               :  2;\
            UNSG32 uDESC_interrupt                             :  1;\
          }
    union { UNSG32 u32dHubCmd2DLite_DESC;
            struct w32dHubCmd2DLite_DESC;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2DLite_START_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32dHubCmd2DLite_START_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16dHubCmd2DLite_START_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16dHubCmd2DLite_START_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32dHubCmd2DLite_START                         {\
            UNSG32 uSTART_EN                                   :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32dHubCmd2DLite_START;
            struct w32dHubCmd2DLite_START;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2DLite_CLEAR_EN(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32dHubCmd2DLite_CLEAR_EN(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16dHubCmd2DLite_CLEAR_EN(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16dHubCmd2DLite_CLEAR_EN(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32dHubCmd2DLite_CLEAR                         {\
            UNSG32 uCLEAR_EN                                   :  1;\
            UNSG32 RSVDxC_b1                                   : 31;\
          }
    union { UNSG32 u32dHubCmd2DLite_CLEAR;
            struct w32dHubCmd2DLite_CLEAR;
          };
    ///////////////////////////////////////////////////////////
              SIE_dHubCmdHDRLite                               ie_HDR[4];
    ///////////////////////////////////////////////////////////
    } SIE_dHubCmd2DLite;

    typedef union  T32dHubCmd2DLite_MEM
          { UNSG32 u32;
            struct w32dHubCmd2DLite_MEM;
                 } T32dHubCmd2DLite_MEM;
    typedef union  T32dHubCmd2DLite_DESC
          { UNSG32 u32;
            struct w32dHubCmd2DLite_DESC;
                 } T32dHubCmd2DLite_DESC;
    typedef union  T32dHubCmd2DLite_START
          { UNSG32 u32;
            struct w32dHubCmd2DLite_START;
                 } T32dHubCmd2DLite_START;
    typedef union  T32dHubCmd2DLite_CLEAR
          { UNSG32 u32;
            struct w32dHubCmd2DLite_CLEAR;
                 } T32dHubCmd2DLite_CLEAR;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubCmd2DLite_MEM
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2DLite_MEM;
                   };
                 } TdHubCmd2DLite_MEM;
    typedef union  TdHubCmd2DLite_DESC
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2DLite_DESC;
                   };
                 } TdHubCmd2DLite_DESC;
    typedef union  TdHubCmd2DLite_START
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2DLite_START;
                   };
                 } TdHubCmd2DLite_START;
    typedef union  TdHubCmd2DLite_CLEAR
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2DLite_CLEAR;
                   };
                 } TdHubCmd2DLite_CLEAR;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubCmd2DLite_drvrd(SIE_dHubCmd2DLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubCmd2DLite_drvwr(SIE_dHubCmd2DLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubCmd2DLite_reset(SIE_dHubCmd2DLite *p);
     SIGN32 dHubCmd2DLite_cmp  (SIE_dHubCmd2DLite *p, SIE_dHubCmd2DLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubCmd2DLite_check(p,pie,pfx,hLOG) dHubCmd2DLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubCmd2DLite_print(p,    pfx,hLOG) dHubCmd2DLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubCmd2DLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubCmd2NDLite          biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 MEM                  (W-)
///               %unsigned 32 addr                      0x0
///                                    ###
///                                    * DRAM data address of the 2D buffer, in bytes.
///                                    ###
///     @ 0x00004 DESC                 (W-)
///               %unsigned 16 burst                     0x1
///                                    ###
///                                    * Number of bytes to transfer per step.
///                                    * Value of 0 is invalid and treated as 1
///                                    * Equivalent to dHubCmdHDR.size
///                                    ###
///               %unsigned 5  chkSemId                  0x0
///                                    ###
///                                    * 0: Semaphore check is disabled
///                                    * ID: ID of semaphore to check for the first command sent out by 2ND engine
///                                    ###
///               %unsigned 5  updSemId                  0x0
///                                    ###
///                                    * 0: Semaphore update is disabled
///                                    * ID: ID of semaphore to update for the last command sent out by 2ND engine
///                                    ###
///               %unsigned 1  interrupt                 0x0
///                                    ###
///                                    * 1: raise interrupt upon whole 2D command finish.
///                                    * 0 : no interrupt
///                                    * Equivalent to setting dHubCmdHDR.interrupt on the last 2D command.
///                                    ###
///               %unsigned 1  dis_chk                   0x0
///                                    ###
///                                    * 0: chkSemId operates as normal, AxUser[4:0] = 0
///                                    * 1: Disables chkSemId, sends the 5 bit field in chkSemID out on AxUser[4:0]
///                                    ###
///               %unsigned 1  dis_upd                   0x0
///                                    ###
///                                    * 0: updSemId operates as normal, AxUser[9:5] = 0
///                                    * 1: Disables updSemId, sends the 5 bit field in updSemID out on AxUser[9:5]
///                                    ###
///               %%        3          # Stuffing bits...
///     @ 0x00008 DESC_1D_ST           (W-)
///               %unsigned 24 step                      0x1
///                                    ###
///                                    * Number of bytes to step per address.
///                                    * Signed 24-bit 2's complement number
///                                    * -8M to +8M
///                                    * Value of 0 is invalid and treated as 1
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x0000C DESC_1D_SZ           (W-)
///               %unsigned 24 size                      0x1
///                                    ###
///                                    * Number of steps per dimension
///                                    * Value of 0 is invalid and treated as 1
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00010 DESC_2D_ST           (W-)
///               %unsigned 24 step                      0x1
///                                    ###
///                                    * Number of bytes to step per address.
///                                    * Signed 24-bit 2's complement number
///                                    * -8M to +8M
///                                    * Value of 0 is invalid and treated as 1
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00014 DESC_2D_SZ           (W-)
///               %unsigned 24 size                      0x1
///                                    ###
///                                    * Number of steps per dimension
///                                    * Value of 0 is invalid and treated as 1
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00018 START                (W-)
///               %unsigned 1  EN                        0x0
///                                    ###
///                                    * Write 1 to enable the channel. Will step through full 2D buffer till done (!busy)
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0001C CLEAR                (W-)
///               %unsigned 1  EN
///                                    ###
///                                    * Write anything to reset the 2D engine.
///                                    * end dHubCmd2ND
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      32B, bits:     159b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubCmd2NDLite
#define h_dHubCmd2NDLite (){}

    #define     RA_dHubCmd2NDLite_MEM                          0x0000

    #define     BA_dHubCmd2NDLite_MEM_addr                     0x0000
    #define     B16dHubCmd2NDLite_MEM_addr                     0x0000
    #define   LSb32dHubCmd2NDLite_MEM_addr                        0
    #define   LSb16dHubCmd2NDLite_MEM_addr                        0
    #define       bdHubCmd2NDLite_MEM_addr                     32
    #define   MSK32dHubCmd2NDLite_MEM_addr                        0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2NDLite_DESC                         0x0004

    #define     BA_dHubCmd2NDLite_DESC_burst                   0x0004
    #define     B16dHubCmd2NDLite_DESC_burst                   0x0004
    #define   LSb32dHubCmd2NDLite_DESC_burst                      0
    #define   LSb16dHubCmd2NDLite_DESC_burst                      0
    #define       bdHubCmd2NDLite_DESC_burst                   16
    #define   MSK32dHubCmd2NDLite_DESC_burst                      0x0000FFFF

    #define     BA_dHubCmd2NDLite_DESC_chkSemId                0x0006
    #define     B16dHubCmd2NDLite_DESC_chkSemId                0x0006
    #define   LSb32dHubCmd2NDLite_DESC_chkSemId                   16
    #define   LSb16dHubCmd2NDLite_DESC_chkSemId                   0
    #define       bdHubCmd2NDLite_DESC_chkSemId                5
    #define   MSK32dHubCmd2NDLite_DESC_chkSemId                   0x001F0000

    #define     BA_dHubCmd2NDLite_DESC_updSemId                0x0006
    #define     B16dHubCmd2NDLite_DESC_updSemId                0x0006
    #define   LSb32dHubCmd2NDLite_DESC_updSemId                   21
    #define   LSb16dHubCmd2NDLite_DESC_updSemId                   5
    #define       bdHubCmd2NDLite_DESC_updSemId                5
    #define   MSK32dHubCmd2NDLite_DESC_updSemId                   0x03E00000

    #define     BA_dHubCmd2NDLite_DESC_interrupt               0x0007
    #define     B16dHubCmd2NDLite_DESC_interrupt               0x0006
    #define   LSb32dHubCmd2NDLite_DESC_interrupt                  26
    #define   LSb16dHubCmd2NDLite_DESC_interrupt                  10
    #define       bdHubCmd2NDLite_DESC_interrupt               1
    #define   MSK32dHubCmd2NDLite_DESC_interrupt                  0x04000000

    #define     BA_dHubCmd2NDLite_DESC_dis_chk                 0x0007
    #define     B16dHubCmd2NDLite_DESC_dis_chk                 0x0006
    #define   LSb32dHubCmd2NDLite_DESC_dis_chk                    27
    #define   LSb16dHubCmd2NDLite_DESC_dis_chk                    11
    #define       bdHubCmd2NDLite_DESC_dis_chk                 1
    #define   MSK32dHubCmd2NDLite_DESC_dis_chk                    0x08000000

    #define     BA_dHubCmd2NDLite_DESC_dis_upd                 0x0007
    #define     B16dHubCmd2NDLite_DESC_dis_upd                 0x0006
    #define   LSb32dHubCmd2NDLite_DESC_dis_upd                    28
    #define   LSb16dHubCmd2NDLite_DESC_dis_upd                    12
    #define       bdHubCmd2NDLite_DESC_dis_upd                 1
    #define   MSK32dHubCmd2NDLite_DESC_dis_upd                    0x10000000
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2NDLite_DESC_1D_ST                   0x0008

    #define     BA_dHubCmd2NDLite_DESC_1D_ST_step              0x0008
    #define     B16dHubCmd2NDLite_DESC_1D_ST_step              0x0008
    #define   LSb32dHubCmd2NDLite_DESC_1D_ST_step                 0
    #define   LSb16dHubCmd2NDLite_DESC_1D_ST_step                 0
    #define       bdHubCmd2NDLite_DESC_1D_ST_step              24
    #define   MSK32dHubCmd2NDLite_DESC_1D_ST_step                 0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2NDLite_DESC_1D_SZ                   0x000C

    #define     BA_dHubCmd2NDLite_DESC_1D_SZ_size              0x000C
    #define     B16dHubCmd2NDLite_DESC_1D_SZ_size              0x000C
    #define   LSb32dHubCmd2NDLite_DESC_1D_SZ_size                 0
    #define   LSb16dHubCmd2NDLite_DESC_1D_SZ_size                 0
    #define       bdHubCmd2NDLite_DESC_1D_SZ_size              24
    #define   MSK32dHubCmd2NDLite_DESC_1D_SZ_size                 0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2NDLite_DESC_2D_ST                   0x0010

    #define     BA_dHubCmd2NDLite_DESC_2D_ST_step              0x0010
    #define     B16dHubCmd2NDLite_DESC_2D_ST_step              0x0010
    #define   LSb32dHubCmd2NDLite_DESC_2D_ST_step                 0
    #define   LSb16dHubCmd2NDLite_DESC_2D_ST_step                 0
    #define       bdHubCmd2NDLite_DESC_2D_ST_step              24
    #define   MSK32dHubCmd2NDLite_DESC_2D_ST_step                 0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2NDLite_DESC_2D_SZ                   0x0014

    #define     BA_dHubCmd2NDLite_DESC_2D_SZ_size              0x0014
    #define     B16dHubCmd2NDLite_DESC_2D_SZ_size              0x0014
    #define   LSb32dHubCmd2NDLite_DESC_2D_SZ_size                 0
    #define   LSb16dHubCmd2NDLite_DESC_2D_SZ_size                 0
    #define       bdHubCmd2NDLite_DESC_2D_SZ_size              24
    #define   MSK32dHubCmd2NDLite_DESC_2D_SZ_size                 0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2NDLite_START                        0x0018

    #define     BA_dHubCmd2NDLite_START_EN                     0x0018
    #define     B16dHubCmd2NDLite_START_EN                     0x0018
    #define   LSb32dHubCmd2NDLite_START_EN                        0
    #define   LSb16dHubCmd2NDLite_START_EN                        0
    #define       bdHubCmd2NDLite_START_EN                     1
    #define   MSK32dHubCmd2NDLite_START_EN                        0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_dHubCmd2NDLite_CLEAR                        0x001C

    #define     BA_dHubCmd2NDLite_CLEAR_EN                     0x001C
    #define     B16dHubCmd2NDLite_CLEAR_EN                     0x001C
    #define   LSb32dHubCmd2NDLite_CLEAR_EN                        0
    #define   LSb16dHubCmd2NDLite_CLEAR_EN                        0
    #define       bdHubCmd2NDLite_CLEAR_EN                     1
    #define   MSK32dHubCmd2NDLite_CLEAR_EN                        0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubCmd2NDLite {
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_MEM_addr(r32)                _BFGET_(r32,31, 0)
    #define   SET32dHubCmd2NDLite_MEM_addr(r32,v)              _BFSET_(r32,31, 0,v)

    #define     w32dHubCmd2NDLite_MEM                          {\
            UNSG32 uMEM_addr                                   : 32;\
          }
    union { UNSG32 u32dHubCmd2NDLite_MEM;
            struct w32dHubCmd2NDLite_MEM;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_DESC_burst(r32)              _BFGET_(r32,15, 0)
    #define   SET32dHubCmd2NDLite_DESC_burst(r32,v)            _BFSET_(r32,15, 0,v)
    #define   GET16dHubCmd2NDLite_DESC_burst(r16)              _BFGET_(r16,15, 0)
    #define   SET16dHubCmd2NDLite_DESC_burst(r16,v)            _BFSET_(r16,15, 0,v)

    #define   GET32dHubCmd2NDLite_DESC_chkSemId(r32)           _BFGET_(r32,20,16)
    #define   SET32dHubCmd2NDLite_DESC_chkSemId(r32,v)         _BFSET_(r32,20,16,v)
    #define   GET16dHubCmd2NDLite_DESC_chkSemId(r16)           _BFGET_(r16, 4, 0)
    #define   SET16dHubCmd2NDLite_DESC_chkSemId(r16,v)         _BFSET_(r16, 4, 0,v)

    #define   GET32dHubCmd2NDLite_DESC_updSemId(r32)           _BFGET_(r32,25,21)
    #define   SET32dHubCmd2NDLite_DESC_updSemId(r32,v)         _BFSET_(r32,25,21,v)
    #define   GET16dHubCmd2NDLite_DESC_updSemId(r16)           _BFGET_(r16, 9, 5)
    #define   SET16dHubCmd2NDLite_DESC_updSemId(r16,v)         _BFSET_(r16, 9, 5,v)

    #define   GET32dHubCmd2NDLite_DESC_interrupt(r32)          _BFGET_(r32,26,26)
    #define   SET32dHubCmd2NDLite_DESC_interrupt(r32,v)        _BFSET_(r32,26,26,v)
    #define   GET16dHubCmd2NDLite_DESC_interrupt(r16)          _BFGET_(r16,10,10)
    #define   SET16dHubCmd2NDLite_DESC_interrupt(r16,v)        _BFSET_(r16,10,10,v)

    #define   GET32dHubCmd2NDLite_DESC_dis_chk(r32)            _BFGET_(r32,27,27)
    #define   SET32dHubCmd2NDLite_DESC_dis_chk(r32,v)          _BFSET_(r32,27,27,v)
    #define   GET16dHubCmd2NDLite_DESC_dis_chk(r16)            _BFGET_(r16,11,11)
    #define   SET16dHubCmd2NDLite_DESC_dis_chk(r16,v)          _BFSET_(r16,11,11,v)

    #define   GET32dHubCmd2NDLite_DESC_dis_upd(r32)            _BFGET_(r32,28,28)
    #define   SET32dHubCmd2NDLite_DESC_dis_upd(r32,v)          _BFSET_(r32,28,28,v)
    #define   GET16dHubCmd2NDLite_DESC_dis_upd(r16)            _BFGET_(r16,12,12)
    #define   SET16dHubCmd2NDLite_DESC_dis_upd(r16,v)          _BFSET_(r16,12,12,v)

    #define     w32dHubCmd2NDLite_DESC                         {\
            UNSG32 uDESC_burst                                 : 16;\
            UNSG32 uDESC_chkSemId                              :  5;\
            UNSG32 uDESC_updSemId                              :  5;\
            UNSG32 uDESC_interrupt                             :  1;\
            UNSG32 uDESC_dis_chk                               :  1;\
            UNSG32 uDESC_dis_upd                               :  1;\
            UNSG32 RSVDx4_b29                                  :  3;\
          }
    union { UNSG32 u32dHubCmd2NDLite_DESC;
            struct w32dHubCmd2NDLite_DESC;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_DESC_1D_ST_step(r32)         _BFGET_(r32,23, 0)
    #define   SET32dHubCmd2NDLite_DESC_1D_ST_step(r32,v)       _BFSET_(r32,23, 0,v)

    #define     w32dHubCmd2NDLite_DESC_1D_ST                   {\
            UNSG32 uDESC_1D_ST_step                            : 24;\
            UNSG32 RSVDx8_b24                                  :  8;\
          }
    union { UNSG32 u32dHubCmd2NDLite_DESC_1D_ST;
            struct w32dHubCmd2NDLite_DESC_1D_ST;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_DESC_1D_SZ_size(r32)         _BFGET_(r32,23, 0)
    #define   SET32dHubCmd2NDLite_DESC_1D_SZ_size(r32,v)       _BFSET_(r32,23, 0,v)

    #define     w32dHubCmd2NDLite_DESC_1D_SZ                   {\
            UNSG32 uDESC_1D_SZ_size                            : 24;\
            UNSG32 RSVDxC_b24                                  :  8;\
          }
    union { UNSG32 u32dHubCmd2NDLite_DESC_1D_SZ;
            struct w32dHubCmd2NDLite_DESC_1D_SZ;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_DESC_2D_ST_step(r32)         _BFGET_(r32,23, 0)
    #define   SET32dHubCmd2NDLite_DESC_2D_ST_step(r32,v)       _BFSET_(r32,23, 0,v)

    #define     w32dHubCmd2NDLite_DESC_2D_ST                   {\
            UNSG32 uDESC_2D_ST_step                            : 24;\
            UNSG32 RSVDx10_b24                                 :  8;\
          }
    union { UNSG32 u32dHubCmd2NDLite_DESC_2D_ST;
            struct w32dHubCmd2NDLite_DESC_2D_ST;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_DESC_2D_SZ_size(r32)         _BFGET_(r32,23, 0)
    #define   SET32dHubCmd2NDLite_DESC_2D_SZ_size(r32,v)       _BFSET_(r32,23, 0,v)

    #define     w32dHubCmd2NDLite_DESC_2D_SZ                   {\
            UNSG32 uDESC_2D_SZ_size                            : 24;\
            UNSG32 RSVDx14_b24                                 :  8;\
          }
    union { UNSG32 u32dHubCmd2NDLite_DESC_2D_SZ;
            struct w32dHubCmd2NDLite_DESC_2D_SZ;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_START_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32dHubCmd2NDLite_START_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16dHubCmd2NDLite_START_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16dHubCmd2NDLite_START_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32dHubCmd2NDLite_START                        {\
            UNSG32 uSTART_EN                                   :  1;\
            UNSG32 RSVDx18_b1                                  : 31;\
          }
    union { UNSG32 u32dHubCmd2NDLite_START;
            struct w32dHubCmd2NDLite_START;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32dHubCmd2NDLite_CLEAR_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32dHubCmd2NDLite_CLEAR_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16dHubCmd2NDLite_CLEAR_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16dHubCmd2NDLite_CLEAR_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32dHubCmd2NDLite_CLEAR                        {\
            UNSG32 uCLEAR_EN                                   :  1;\
            UNSG32 RSVDx1C_b1                                  : 31;\
          }
    union { UNSG32 u32dHubCmd2NDLite_CLEAR;
            struct w32dHubCmd2NDLite_CLEAR;
          };
    ///////////////////////////////////////////////////////////
    } SIE_dHubCmd2NDLite;

    typedef union  T32dHubCmd2NDLite_MEM
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_MEM;
                 } T32dHubCmd2NDLite_MEM;
    typedef union  T32dHubCmd2NDLite_DESC
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_DESC;
                 } T32dHubCmd2NDLite_DESC;
    typedef union  T32dHubCmd2NDLite_DESC_1D_ST
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_DESC_1D_ST;
                 } T32dHubCmd2NDLite_DESC_1D_ST;
    typedef union  T32dHubCmd2NDLite_DESC_1D_SZ
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_DESC_1D_SZ;
                 } T32dHubCmd2NDLite_DESC_1D_SZ;
    typedef union  T32dHubCmd2NDLite_DESC_2D_ST
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_DESC_2D_ST;
                 } T32dHubCmd2NDLite_DESC_2D_ST;
    typedef union  T32dHubCmd2NDLite_DESC_2D_SZ
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_DESC_2D_SZ;
                 } T32dHubCmd2NDLite_DESC_2D_SZ;
    typedef union  T32dHubCmd2NDLite_START
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_START;
                 } T32dHubCmd2NDLite_START;
    typedef union  T32dHubCmd2NDLite_CLEAR
          { UNSG32 u32;
            struct w32dHubCmd2NDLite_CLEAR;
                 } T32dHubCmd2NDLite_CLEAR;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubCmd2NDLite_MEM
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_MEM;
                   };
                 } TdHubCmd2NDLite_MEM;
    typedef union  TdHubCmd2NDLite_DESC
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_DESC;
                   };
                 } TdHubCmd2NDLite_DESC;
    typedef union  TdHubCmd2NDLite_DESC_1D_ST
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_DESC_1D_ST;
                   };
                 } TdHubCmd2NDLite_DESC_1D_ST;
    typedef union  TdHubCmd2NDLite_DESC_1D_SZ
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_DESC_1D_SZ;
                   };
                 } TdHubCmd2NDLite_DESC_1D_SZ;
    typedef union  TdHubCmd2NDLite_DESC_2D_ST
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_DESC_2D_ST;
                   };
                 } TdHubCmd2NDLite_DESC_2D_ST;
    typedef union  TdHubCmd2NDLite_DESC_2D_SZ
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_DESC_2D_SZ;
                   };
                 } TdHubCmd2NDLite_DESC_2D_SZ;
    typedef union  TdHubCmd2NDLite_START
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_START;
                   };
                 } TdHubCmd2NDLite_START;
    typedef union  TdHubCmd2NDLite_CLEAR
          { UNSG32 u32[1];
            struct {
            struct w32dHubCmd2NDLite_CLEAR;
                   };
                 } TdHubCmd2NDLite_CLEAR;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubCmd2NDLite_drvrd(SIE_dHubCmd2NDLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubCmd2NDLite_drvwr(SIE_dHubCmd2NDLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubCmd2NDLite_reset(SIE_dHubCmd2NDLite *p);
     SIGN32 dHubCmd2NDLite_cmp  (SIE_dHubCmd2NDLite *p, SIE_dHubCmd2NDLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubCmd2NDLite_check(p,pie,pfx,hLOG) dHubCmd2NDLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubCmd2NDLite_print(p,    pfx,hLOG) dHubCmd2NDLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubCmd2NDLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubQueryLite                            (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 RESP                 (R-)
///               %unsigned 16 ST
///                                    ###
///                                    * Dhub channel state machine status.
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      16b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubQueryLite
#define h_dHubQueryLite (){}

    #define     RA_dHubQueryLite_RESP                          0x0000

    #define     BA_dHubQueryLite_RESP_ST                       0x0000
    #define     B16dHubQueryLite_RESP_ST                       0x0000
    #define   LSb32dHubQueryLite_RESP_ST                          0
    #define   LSb16dHubQueryLite_RESP_ST                          0
    #define       bdHubQueryLite_RESP_ST                       16
    #define   MSK32dHubQueryLite_RESP_ST                          0x0000FFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubQueryLite {
    ///////////////////////////////////////////////////////////
    #define   GET32dHubQueryLite_RESP_ST(r32)                  _BFGET_(r32,15, 0)
    #define   SET32dHubQueryLite_RESP_ST(r32,v)                _BFSET_(r32,15, 0,v)
    #define   GET16dHubQueryLite_RESP_ST(r16)                  _BFGET_(r16,15, 0)
    #define   SET16dHubQueryLite_RESP_ST(r16,v)                _BFSET_(r16,15, 0,v)

    #define     w32dHubQueryLite_RESP                          {\
            UNSG32 uRESP_ST                                    : 16;\
            UNSG32 RSVDx0_b16                                  : 16;\
          }
    union { UNSG32 u32dHubQueryLite_RESP;
            struct w32dHubQueryLite_RESP;
          };
    ///////////////////////////////////////////////////////////
    } SIE_dHubQueryLite;

    typedef union  T32dHubQueryLite_RESP
          { UNSG32 u32;
            struct w32dHubQueryLite_RESP;
                 } T32dHubQueryLite_RESP;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubQueryLite_RESP
          { UNSG32 u32[1];
            struct {
            struct w32dHubQueryLite_RESP;
                   };
                 } TdHubQueryLite_RESP;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubQueryLite_drvrd(SIE_dHubQueryLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubQueryLite_drvwr(SIE_dHubQueryLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubQueryLite_reset(SIE_dHubQueryLite *p);
     SIGN32 dHubQueryLite_cmp  (SIE_dHubQueryLite *p, SIE_dHubQueryLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubQueryLite_check(p,pie,pfx,hLOG) dHubQueryLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubQueryLite_print(p,    pfx,hLOG) dHubQueryLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubQueryLite
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE dHubReg2DLite           biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 dHub
///               $dHubRegLite         dHub              REG
///     @ 0x00D00 ARR                  (P)
///     # 0x00D00 Cmd2D
///               $dHubCmd2DLite       Cmd2D             REG      [16]
///                                    ###
///                                    * Up-to 16 2D channels.
///                                    * 2D Channel[N] is connected to dHub.Channel[N] command queue, that is, dHub.HBO.Channel[2N]
///                                    * Note: Number of 2D channels could be less than dHub channels (rest of are 1D only)
///                                    ###
///     @ 0x00F00 ARR_2ND              (P)
///     # 0x00F00 Cmd2ND
///               $dHubCmd2NDLite      Cmd2ND            REG      [16]
///                                    ###
///                                    * Up-to 16 2ND channels.
///                                    * 2ND Channel[N] is connected to dHub.Channel[N] command queue, that is, dHub.HBO.Channel[2N]
///                                    * Note: 2ND engines are instantiated in the same way as the old 2D engine. It is allowed to have multiple 1D, 2D and 2ND channels in a dHub. Restriction is each channel can only have one type.
///                                    ###
///     @ 0x01100 BUSY                 (R-)
///               %unsigned 16 ST
///                                    ###
///                                    * Per channel status
///                                    * 0: no ongoing command is being processed
///                                    * 1: channel controller is busy
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x01104                      (W-)
///     #         # Stuffing bytes...
///               %% 480
///     @ 0x01140                      (P)
///     # 0x01140 CH_ST
///               $dHubQueryLite       CH_ST             MEM      [16]
///                                    ###
///                                    * end dHubReg2D
///                                    ###
///     @ 0x01180                      (W-)
///     #         # Stuffing bytes...
///               %% 1024
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:    4608B, bits:    9218b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_dHubReg2DLite
#define h_dHubReg2DLite (){}

    #define     RA_dHubReg2DLite_dHub                          0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_dHubReg2DLite_ARR                           0x0D00
    #define     RA_dHubReg2DLite_Cmd2D                         0x0D00
    ///////////////////////////////////////////////////////////
    #define     RA_dHubReg2DLite_ARR_2ND                       0x0F00
    #define     RA_dHubReg2DLite_Cmd2ND                        0x0F00
    ///////////////////////////////////////////////////////////
    #define     RA_dHubReg2DLite_BUSY                          0x1100

    #define     BA_dHubReg2DLite_BUSY_ST                       0x1100
    #define     B16dHubReg2DLite_BUSY_ST                       0x1100
    #define   LSb32dHubReg2DLite_BUSY_ST                          0
    #define   LSb16dHubReg2DLite_BUSY_ST                          0
    #define       bdHubReg2DLite_BUSY_ST                       16
    #define   MSK32dHubReg2DLite_BUSY_ST                          0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_dHubReg2DLite_CH_ST                         0x1140
    ///////////////////////////////////////////////////////////

    typedef struct SIE_dHubReg2DLite {
    ///////////////////////////////////////////////////////////
              SIE_dHubRegLite                                  ie_dHub;
    ///////////////////////////////////////////////////////////
              SIE_dHubCmd2DLite                                ie_Cmd2D[16];
    ///////////////////////////////////////////////////////////
              SIE_dHubCmd2NDLite                               ie_Cmd2ND[16];
    ///////////////////////////////////////////////////////////
    #define   GET32dHubReg2DLite_BUSY_ST(r32)                  _BFGET_(r32,15, 0)
    #define   SET32dHubReg2DLite_BUSY_ST(r32,v)                _BFSET_(r32,15, 0,v)
    #define   GET16dHubReg2DLite_BUSY_ST(r16)                  _BFGET_(r16,15, 0)
    #define   SET16dHubReg2DLite_BUSY_ST(r16,v)                _BFSET_(r16,15, 0,v)

    #define     w32dHubReg2DLite_BUSY                          {\
            UNSG32 uBUSY_ST                                    : 16;\
            UNSG32 RSVDx1100_b16                               : 16;\
          }
    union { UNSG32 u32dHubReg2DLite_BUSY;
            struct w32dHubReg2DLite_BUSY;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1104                                   [60];
    ///////////////////////////////////////////////////////////
              SIE_dHubQueryLite                                ie_CH_ST[16];
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1180                                   [128];
    ///////////////////////////////////////////////////////////
    } SIE_dHubReg2DLite;

    typedef union  T32dHubReg2DLite_BUSY
          { UNSG32 u32;
            struct w32dHubReg2DLite_BUSY;
                 } T32dHubReg2DLite_BUSY;
    ///////////////////////////////////////////////////////////

    typedef union  TdHubReg2DLite_BUSY
          { UNSG32 u32[1];
            struct {
            struct w32dHubReg2DLite_BUSY;
                   };
                 } TdHubReg2DLite_BUSY;

    ///////////////////////////////////////////////////////////
     SIGN32 dHubReg2DLite_drvrd(SIE_dHubReg2DLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 dHubReg2DLite_drvwr(SIE_dHubReg2DLite *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void dHubReg2DLite_reset(SIE_dHubReg2DLite *p);
     SIGN32 dHubReg2DLite_cmp  (SIE_dHubReg2DLite *p, SIE_dHubReg2DLite *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define dHubReg2DLite_check(p,pie,pfx,hLOG) dHubReg2DLite_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define dHubReg2DLite_print(p,    pfx,hLOG) dHubReg2DLite_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: dHubReg2DLite
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: dHubLite.h
////////////////////////////////////////////////////////////

