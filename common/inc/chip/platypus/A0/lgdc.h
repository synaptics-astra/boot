//////
/// don't edit! auto-generated by docc: lgdc.h
////////////////////////////////////////////////////////////
#ifndef lgdc_h
#define lgdc_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
///
/// $INTERFACE DWTG                    biu              (4,4)
///     ###
///     * Register specification of interface Timing Generator
///     * There are two counters in the timing generator module. hCntr (from 1 to SIZE_X) and vCntr (from 1 to SIZE_Y).
///     * When start, the initial value will be loaded to the xCnt and yCnt
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 INIT                 (P)
///               %unsigned 16 Y                         0x1
///                                    ###
///                                    * Initial Y value which will be used to load Y counter when tg is enabled.
///                                    ###
///               %unsigned 16 X                         0x1
///                                    ###
///                                    * Initial X value which will be used to load X counter when tg is enabled.
///                                    * A whole frame scan size.
///                                    ###
///     @ 0x00004 SIZE                 (P)
///               %unsigned 16 Y                         0x465
///                                    ###
///                                    * Total scan lines per frame.
///                                    ###
///               %unsigned 16 X                         0x898
///                                    ###
///                                    * Total scan clock cycles per line.
///                                    * Hsync
///                                    ###
///     @ 0x00008 HS                   (P)
///               %unsigned 16 FE                        0x1
///                                    ###
///                                    * Hsync front edge. The first pixel position of hsync pulse. NOT USED
///                                    ###
///               %unsigned 16 BE                        0x2C
///                                    ###
///                                    * Hsync back edge. The last pixel position of hsync pulse.
///                                    * HS = hCntr>=FE & hCntr<=BE
///                                    * NOT USED
///                                    * HBlanking
///                                    ###
///     @ 0x0000C HB                   (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * HB = hCntr>=FE || hCntr<=BE.
///                                    * NOT USED
///                                    ###
///     @ 0x00010 HB_CR                (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * HB_CR = hCntr>=FE || hCntr<=BE.
///                                    * NOT USED
///                                    ###
///     @ 0x00014 HB_CR2               (P)
///               %unsigned 16 FE                        0x841
///                                    ###
///                                    * Hblank front edge. The first pixel position of the hBlank pulse. SIZEX-HFP = 2200-88+1
///                                    * Note : to be programmed with different value (only when cropping is required). Else to be programmed same as HB FE (above register)
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0xC0
///                                    ###
///                                    * Hblank back edge. The last pixel position of the hBlank pulse. HPW + HBP = 44+148
///                                    * Note : to be programmed with different value (only when cropping is required). Else to be programmed same as HB BE (above register)
///                                    * HB = hCntr>=FE || hCntr<=BE.
///                                    * NOT USED
///                                    * VS0 defines the first first pixel position of the first VSYNC (progressive or interlace mode) pulse.
///                                    * For example
///                                    * 1080i60, the VTP is the last pixel of the last line. So set both VLCNT0 and VPCNT0 to 0.
///                                    ###
///     @ 0x00018 VS0                  (P)
///               %unsigned 16 FE                        0x1
///                                    ###
///                                    * Vsync pulse front edge.
///                                    * Vsync will be asserted at the beginning of this line.
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0x5
///                                    ###
///                                    * Vsync pulse back edge.
///                                    * Vsycn pulse will be de-asserted after the end of this line.
///                                    * Vsync = (vCntr>=FE & vCntr<=BE)
///                                    * NOT USED
///                                    * Vsync pulse 1
///                                    * defines the first pixel position of the second vSync pulse. For example
///                                    * 1080i60, the VTP is pixel 1100 of line 563. So set both VLCNT2=563. and VPCNT2 to 1100.
///                                    ###
///     @ 0x0001C VS1                  (P)
///               %unsigned 16 FE                        0x233
///                                    ###
///                                    * Vsync pulse 1 front edge line position.
///                                    * Vsync pulse 1 will be asserted at the middle of this line.
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0x238
///                                    ###
///                                    * Vsync pulse 1 back edge line position.
///                                    * Vsync pulse 1 will be de-asserted at the middle of this line.
///                                    * Vsync1 = (vCntr>=FE & hCntr>SIZEX/2) & (vCntr<=BE & hCntr<=SIZEX/2)
///                                    * NOT USED
///                                    * Vertical blanking.
///                                    * VB0 parameter definietion
///                                    ###
///     @ 0x00020 VB0                  (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * Vblank0 = vCntr>=FE || vCntr<=BE
///                                    * NOT USED
///                                    ###
///     @ 0x00024 VB0_CR               (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * Vblank0_CR = vCntr>=FE || vCntr<=BE
///                                    * NOT USED
///                                    ###
///     @ 0x00028 VB0_CR2              (P)
///               %unsigned 16 FE                        0x462
///                                    ###
///                                    * Vblank front edge line position
///                                    * The first line of the vertical blanking.
///                                    * Note : to be programmed with different value only when cropping is required. Else to be programmed same as VB0 FE (above register)
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0x29
///                                    ###
///                                    * Vblank back edge line position
///                                    * the last line number of the vertical blanking
///                                    * The default value is used for 1080p case.
///                                    * Note : to be programmed with different value only when cropping is required. Else to be programmed same as VB0 BE (above register)
///                                    * Vblank0 = vCntr>=FE || vCntr<=BE
///                                    * NOT USED
///                                    ###
///     @ 0x0002C VB1                  (P)
///               %unsigned 16 FE                        0x231
///                                    ###
///                                    * Vblank front edge line postion
///                                    * The first line number of VB1.
///                                    * NOT USED
///                                    ###
///               %unsigned 16 BE                        0x247
///                                    ###
///                                    * Vblank back edge line postion
///                                    * the last line numer of VB1.
///                                    * VB1 = (vCntr>=FE & vCntr<=BE)
///                                    * NOT USED
///                                    * SCAN mode
///                                    ###
///     @ 0x00030 SCAN                 (P)
///               %unsigned 1  MODE                      0x0
///                                    : PROG                      0x0
///                                    : INTER                     0x1
///                                                 ###
///                                                 * NOT USED
///                                                 * Frame done interrupt position
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00034 INTPOS               (P)
///               %unsigned 16 FRAME                     0x465
///                                    ###
///                                    * Frame interrupt status will be set at the end of this line.
///                                    * Program 0 to this register will disable frame interrupt.
///                                    * NOT USED
///                                    ###
///               %unsigned 16 FIELD                     0x233
///                                    ###
///                                    * Field interrupt status will be set at the end of this line.
///                                    * Program 0 to this register will disable field interrupt.
///                                    * NOT USED
///                                    * MODE
///                                    ###
///     @ 0x00038 MODE                 (P)
///               %unsigned 1  EN                        0x0
///                                    : MASTER                    0x0
///                                    : SLAVE                     0x1
///                                                 ###
///                                                 * In master mode, TG drive the control signal.
///                                                 * In slave mode, TG take the external hsync and vsync, it generate the internal sync and blank signal based on the programmed register and external hsync and vsync.
///                                                 * HREF input for slave mode.
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0003C HVREF                (P)
///               %unsigned 1  SEL                       0x0
///                                    : SYNC                      0x0
///                                    : BLANK                     0x1
///                                                 ###
///                                                 * In slave mode, tg will sync to the external tg generated HREF/VREF which could be HSYBC/VSYNC or HBLANK/VBLANK. Currently only HSYNC/VSYNC is supported.
///                                                 * HSYNC and VSYNC have to be come in pair.
///                                                 * NOT USED
///                                                 ###
///               %unsigned 1  POL                       0x0
///                                    : NEG_PULSE                 0x0
///                                    : POS_PULSE                 0x1
///                                                 ###
///                                                 * 0 : indicate the input HREF/VREF are negative pulses
///                                                 * 1: indicate the input HREF/VREFare positive pulses.
///                                                 * HREF and VREF have to be the same polarity.
///                                                 * NOT USED
///                                                 * DEWARP TG Special registers
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00040 STRPOS               (P)
///               %unsigned 16 StrdHstart                0x4
///                                    ###
///                                    * Stride Horizontal start count, non zero value
///                                    * Should be greater(>2) than FrstHstart
///                                    ###
///               %unsigned 16 StrdVstart                0x1
///                                    ###
///                                    * Stride Vertical start line position, non zero value
///                                    * Should be greater or equal to FrstVstart
///                                    ###
///     @ 0x00044 STRVS                (P)
///               %unsigned 16 StrdVend                  0x441
///                                    ###
///                                    * Stride Vertical End line position
///                                    * StrdVend= StrdVstart + Number of active lines of CIS processing(To the ceiling of CIS tile vertical step size)
///                                    * Example: For FHD of 1080 line and CisVwin of 16 , then Number of active CIS lines 1088.
///                                    ###
///               %unsigned 8  StrdVsize                 0x10
///                                    ###
///                                    * Stride Vertical Dimension in terms of Horz lines. I.e Equal to CisVwin in Dewarping Engine.
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00048 FRSTPOS              (P)
///               %unsigned 16 FrstHstart                0x2
///                                    ###
///                                    * Frame start pulse Horizontal start position, Should be non zero value.
///                                    ###
///               %unsigned 16 FrstVstart                0x1
///                                    ###
///                                    * Frame start pulse Vertical start line position. Should be non zero value.
///                                    * End of TG register group
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      76B, bits:     508b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_DWTG
#define h_DWTG (){}

    #define     RA_DWTG_INIT                                   0x0000

    #define     BA_DWTG_INIT_Y                                 0x0000
    #define     B16DWTG_INIT_Y                                 0x0000
    #define   LSb32DWTG_INIT_Y                                    0
    #define   LSb16DWTG_INIT_Y                                    0
    #define       bDWTG_INIT_Y                                 16
    #define   MSK32DWTG_INIT_Y                                    0x0000FFFF

    #define     BA_DWTG_INIT_X                                 0x0002
    #define     B16DWTG_INIT_X                                 0x0002
    #define   LSb32DWTG_INIT_X                                    16
    #define   LSb16DWTG_INIT_X                                    0
    #define       bDWTG_INIT_X                                 16
    #define   MSK32DWTG_INIT_X                                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_SIZE                                   0x0004

    #define     BA_DWTG_SIZE_Y                                 0x0004
    #define     B16DWTG_SIZE_Y                                 0x0004
    #define   LSb32DWTG_SIZE_Y                                    0
    #define   LSb16DWTG_SIZE_Y                                    0
    #define       bDWTG_SIZE_Y                                 16
    #define   MSK32DWTG_SIZE_Y                                    0x0000FFFF

    #define     BA_DWTG_SIZE_X                                 0x0006
    #define     B16DWTG_SIZE_X                                 0x0006
    #define   LSb32DWTG_SIZE_X                                    16
    #define   LSb16DWTG_SIZE_X                                    0
    #define       bDWTG_SIZE_X                                 16
    #define   MSK32DWTG_SIZE_X                                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_HS                                     0x0008

    #define     BA_DWTG_HS_FE                                  0x0008
    #define     B16DWTG_HS_FE                                  0x0008
    #define   LSb32DWTG_HS_FE                                     0
    #define   LSb16DWTG_HS_FE                                     0
    #define       bDWTG_HS_FE                                  16
    #define   MSK32DWTG_HS_FE                                     0x0000FFFF

    #define     BA_DWTG_HS_BE                                  0x000A
    #define     B16DWTG_HS_BE                                  0x000A
    #define   LSb32DWTG_HS_BE                                     16
    #define   LSb16DWTG_HS_BE                                     0
    #define       bDWTG_HS_BE                                  16
    #define   MSK32DWTG_HS_BE                                     0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_HB                                     0x000C

    #define     BA_DWTG_HB_FE                                  0x000C
    #define     B16DWTG_HB_FE                                  0x000C
    #define   LSb32DWTG_HB_FE                                     0
    #define   LSb16DWTG_HB_FE                                     0
    #define       bDWTG_HB_FE                                  16
    #define   MSK32DWTG_HB_FE                                     0x0000FFFF

    #define     BA_DWTG_HB_BE                                  0x000E
    #define     B16DWTG_HB_BE                                  0x000E
    #define   LSb32DWTG_HB_BE                                     16
    #define   LSb16DWTG_HB_BE                                     0
    #define       bDWTG_HB_BE                                  16
    #define   MSK32DWTG_HB_BE                                     0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_HB_CR                                  0x0010

    #define     BA_DWTG_HB_CR_FE                               0x0010
    #define     B16DWTG_HB_CR_FE                               0x0010
    #define   LSb32DWTG_HB_CR_FE                                  0
    #define   LSb16DWTG_HB_CR_FE                                  0
    #define       bDWTG_HB_CR_FE                               16
    #define   MSK32DWTG_HB_CR_FE                                  0x0000FFFF

    #define     BA_DWTG_HB_CR_BE                               0x0012
    #define     B16DWTG_HB_CR_BE                               0x0012
    #define   LSb32DWTG_HB_CR_BE                                  16
    #define   LSb16DWTG_HB_CR_BE                                  0
    #define       bDWTG_HB_CR_BE                               16
    #define   MSK32DWTG_HB_CR_BE                                  0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_HB_CR2                                 0x0014

    #define     BA_DWTG_HB_CR2_FE                              0x0014
    #define     B16DWTG_HB_CR2_FE                              0x0014
    #define   LSb32DWTG_HB_CR2_FE                                 0
    #define   LSb16DWTG_HB_CR2_FE                                 0
    #define       bDWTG_HB_CR2_FE                              16
    #define   MSK32DWTG_HB_CR2_FE                                 0x0000FFFF

    #define     BA_DWTG_HB_CR2_BE                              0x0016
    #define     B16DWTG_HB_CR2_BE                              0x0016
    #define   LSb32DWTG_HB_CR2_BE                                 16
    #define   LSb16DWTG_HB_CR2_BE                                 0
    #define       bDWTG_HB_CR2_BE                              16
    #define   MSK32DWTG_HB_CR2_BE                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_VS0                                    0x0018

    #define     BA_DWTG_VS0_FE                                 0x0018
    #define     B16DWTG_VS0_FE                                 0x0018
    #define   LSb32DWTG_VS0_FE                                    0
    #define   LSb16DWTG_VS0_FE                                    0
    #define       bDWTG_VS0_FE                                 16
    #define   MSK32DWTG_VS0_FE                                    0x0000FFFF

    #define     BA_DWTG_VS0_BE                                 0x001A
    #define     B16DWTG_VS0_BE                                 0x001A
    #define   LSb32DWTG_VS0_BE                                    16
    #define   LSb16DWTG_VS0_BE                                    0
    #define       bDWTG_VS0_BE                                 16
    #define   MSK32DWTG_VS0_BE                                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_VS1                                    0x001C

    #define     BA_DWTG_VS1_FE                                 0x001C
    #define     B16DWTG_VS1_FE                                 0x001C
    #define   LSb32DWTG_VS1_FE                                    0
    #define   LSb16DWTG_VS1_FE                                    0
    #define       bDWTG_VS1_FE                                 16
    #define   MSK32DWTG_VS1_FE                                    0x0000FFFF

    #define     BA_DWTG_VS1_BE                                 0x001E
    #define     B16DWTG_VS1_BE                                 0x001E
    #define   LSb32DWTG_VS1_BE                                    16
    #define   LSb16DWTG_VS1_BE                                    0
    #define       bDWTG_VS1_BE                                 16
    #define   MSK32DWTG_VS1_BE                                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_VB0                                    0x0020

    #define     BA_DWTG_VB0_FE                                 0x0020
    #define     B16DWTG_VB0_FE                                 0x0020
    #define   LSb32DWTG_VB0_FE                                    0
    #define   LSb16DWTG_VB0_FE                                    0
    #define       bDWTG_VB0_FE                                 16
    #define   MSK32DWTG_VB0_FE                                    0x0000FFFF

    #define     BA_DWTG_VB0_BE                                 0x0022
    #define     B16DWTG_VB0_BE                                 0x0022
    #define   LSb32DWTG_VB0_BE                                    16
    #define   LSb16DWTG_VB0_BE                                    0
    #define       bDWTG_VB0_BE                                 16
    #define   MSK32DWTG_VB0_BE                                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_VB0_CR                                 0x0024

    #define     BA_DWTG_VB0_CR_FE                              0x0024
    #define     B16DWTG_VB0_CR_FE                              0x0024
    #define   LSb32DWTG_VB0_CR_FE                                 0
    #define   LSb16DWTG_VB0_CR_FE                                 0
    #define       bDWTG_VB0_CR_FE                              16
    #define   MSK32DWTG_VB0_CR_FE                                 0x0000FFFF

    #define     BA_DWTG_VB0_CR_BE                              0x0026
    #define     B16DWTG_VB0_CR_BE                              0x0026
    #define   LSb32DWTG_VB0_CR_BE                                 16
    #define   LSb16DWTG_VB0_CR_BE                                 0
    #define       bDWTG_VB0_CR_BE                              16
    #define   MSK32DWTG_VB0_CR_BE                                 0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_VB0_CR2                                0x0028

    #define     BA_DWTG_VB0_CR2_FE                             0x0028
    #define     B16DWTG_VB0_CR2_FE                             0x0028
    #define   LSb32DWTG_VB0_CR2_FE                                0
    #define   LSb16DWTG_VB0_CR2_FE                                0
    #define       bDWTG_VB0_CR2_FE                             16
    #define   MSK32DWTG_VB0_CR2_FE                                0x0000FFFF

    #define     BA_DWTG_VB0_CR2_BE                             0x002A
    #define     B16DWTG_VB0_CR2_BE                             0x002A
    #define   LSb32DWTG_VB0_CR2_BE                                16
    #define   LSb16DWTG_VB0_CR2_BE                                0
    #define       bDWTG_VB0_CR2_BE                             16
    #define   MSK32DWTG_VB0_CR2_BE                                0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_VB1                                    0x002C

    #define     BA_DWTG_VB1_FE                                 0x002C
    #define     B16DWTG_VB1_FE                                 0x002C
    #define   LSb32DWTG_VB1_FE                                    0
    #define   LSb16DWTG_VB1_FE                                    0
    #define       bDWTG_VB1_FE                                 16
    #define   MSK32DWTG_VB1_FE                                    0x0000FFFF

    #define     BA_DWTG_VB1_BE                                 0x002E
    #define     B16DWTG_VB1_BE                                 0x002E
    #define   LSb32DWTG_VB1_BE                                    16
    #define   LSb16DWTG_VB1_BE                                    0
    #define       bDWTG_VB1_BE                                 16
    #define   MSK32DWTG_VB1_BE                                    0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_SCAN                                   0x0030

    #define     BA_DWTG_SCAN_MODE                              0x0030
    #define     B16DWTG_SCAN_MODE                              0x0030
    #define   LSb32DWTG_SCAN_MODE                                 0
    #define   LSb16DWTG_SCAN_MODE                                 0
    #define       bDWTG_SCAN_MODE                              1
    #define   MSK32DWTG_SCAN_MODE                                 0x00000001
    #define        DWTG_SCAN_MODE_PROG                                      0x0
    #define        DWTG_SCAN_MODE_INTER                                     0x1
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_INTPOS                                 0x0034

    #define     BA_DWTG_INTPOS_FRAME                           0x0034
    #define     B16DWTG_INTPOS_FRAME                           0x0034
    #define   LSb32DWTG_INTPOS_FRAME                              0
    #define   LSb16DWTG_INTPOS_FRAME                              0
    #define       bDWTG_INTPOS_FRAME                           16
    #define   MSK32DWTG_INTPOS_FRAME                              0x0000FFFF

    #define     BA_DWTG_INTPOS_FIELD                           0x0036
    #define     B16DWTG_INTPOS_FIELD                           0x0036
    #define   LSb32DWTG_INTPOS_FIELD                              16
    #define   LSb16DWTG_INTPOS_FIELD                              0
    #define       bDWTG_INTPOS_FIELD                           16
    #define   MSK32DWTG_INTPOS_FIELD                              0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_MODE                                   0x0038

    #define     BA_DWTG_MODE_EN                                0x0038
    #define     B16DWTG_MODE_EN                                0x0038
    #define   LSb32DWTG_MODE_EN                                   0
    #define   LSb16DWTG_MODE_EN                                   0
    #define       bDWTG_MODE_EN                                1
    #define   MSK32DWTG_MODE_EN                                   0x00000001
    #define        DWTG_MODE_EN_MASTER                                      0x0
    #define        DWTG_MODE_EN_SLAVE                                       0x1
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_HVREF                                  0x003C

    #define     BA_DWTG_HVREF_SEL                              0x003C
    #define     B16DWTG_HVREF_SEL                              0x003C
    #define   LSb32DWTG_HVREF_SEL                                 0
    #define   LSb16DWTG_HVREF_SEL                                 0
    #define       bDWTG_HVREF_SEL                              1
    #define   MSK32DWTG_HVREF_SEL                                 0x00000001
    #define        DWTG_HVREF_SEL_SYNC                                      0x0
    #define        DWTG_HVREF_SEL_BLANK                                     0x1

    #define     BA_DWTG_HVREF_POL                              0x003C
    #define     B16DWTG_HVREF_POL                              0x003C
    #define   LSb32DWTG_HVREF_POL                                 1
    #define   LSb16DWTG_HVREF_POL                                 1
    #define       bDWTG_HVREF_POL                              1
    #define   MSK32DWTG_HVREF_POL                                 0x00000002
    #define        DWTG_HVREF_POL_NEG_PULSE                                 0x0
    #define        DWTG_HVREF_POL_POS_PULSE                                 0x1
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_STRPOS                                 0x0040

    #define     BA_DWTG_STRPOS_StrdHstart                      0x0040
    #define     B16DWTG_STRPOS_StrdHstart                      0x0040
    #define   LSb32DWTG_STRPOS_StrdHstart                         0
    #define   LSb16DWTG_STRPOS_StrdHstart                         0
    #define       bDWTG_STRPOS_StrdHstart                      16
    #define   MSK32DWTG_STRPOS_StrdHstart                         0x0000FFFF

    #define     BA_DWTG_STRPOS_StrdVstart                      0x0042
    #define     B16DWTG_STRPOS_StrdVstart                      0x0042
    #define   LSb32DWTG_STRPOS_StrdVstart                         16
    #define   LSb16DWTG_STRPOS_StrdVstart                         0
    #define       bDWTG_STRPOS_StrdVstart                      16
    #define   MSK32DWTG_STRPOS_StrdVstart                         0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_STRVS                                  0x0044

    #define     BA_DWTG_STRVS_StrdVend                         0x0044
    #define     B16DWTG_STRVS_StrdVend                         0x0044
    #define   LSb32DWTG_STRVS_StrdVend                            0
    #define   LSb16DWTG_STRVS_StrdVend                            0
    #define       bDWTG_STRVS_StrdVend                         16
    #define   MSK32DWTG_STRVS_StrdVend                            0x0000FFFF

    #define     BA_DWTG_STRVS_StrdVsize                        0x0046
    #define     B16DWTG_STRVS_StrdVsize                        0x0046
    #define   LSb32DWTG_STRVS_StrdVsize                           16
    #define   LSb16DWTG_STRVS_StrdVsize                           0
    #define       bDWTG_STRVS_StrdVsize                        8
    #define   MSK32DWTG_STRVS_StrdVsize                           0x00FF0000
    ///////////////////////////////////////////////////////////
    #define     RA_DWTG_FRSTPOS                                0x0048

    #define     BA_DWTG_FRSTPOS_FrstHstart                     0x0048
    #define     B16DWTG_FRSTPOS_FrstHstart                     0x0048
    #define   LSb32DWTG_FRSTPOS_FrstHstart                        0
    #define   LSb16DWTG_FRSTPOS_FrstHstart                        0
    #define       bDWTG_FRSTPOS_FrstHstart                     16
    #define   MSK32DWTG_FRSTPOS_FrstHstart                        0x0000FFFF

    #define     BA_DWTG_FRSTPOS_FrstVstart                     0x004A
    #define     B16DWTG_FRSTPOS_FrstVstart                     0x004A
    #define   LSb32DWTG_FRSTPOS_FrstVstart                        16
    #define   LSb16DWTG_FRSTPOS_FrstVstart                        0
    #define       bDWTG_FRSTPOS_FrstVstart                     16
    #define   MSK32DWTG_FRSTPOS_FrstVstart                        0xFFFF0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_DWTG {
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_INIT_Y(r32)                            _BFGET_(r32,15, 0)
    #define   SET32DWTG_INIT_Y(r32,v)                          _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_INIT_Y(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_INIT_Y(r16,v)                          _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_INIT_X(r32)                            _BFGET_(r32,31,16)
    #define   SET32DWTG_INIT_X(r32,v)                          _BFSET_(r32,31,16,v)
    #define   GET16DWTG_INIT_X(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_INIT_X(r16,v)                          _BFSET_(r16,15, 0,v)

    #define     w32DWTG_INIT                                   {\
            UNSG32 uINIT_Y                                     : 16;\
            UNSG32 uINIT_X                                     : 16;\
          }
    union { UNSG32 u32DWTG_INIT;
            struct w32DWTG_INIT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_SIZE_Y(r32)                            _BFGET_(r32,15, 0)
    #define   SET32DWTG_SIZE_Y(r32,v)                          _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_SIZE_Y(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_SIZE_Y(r16,v)                          _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_SIZE_X(r32)                            _BFGET_(r32,31,16)
    #define   SET32DWTG_SIZE_X(r32,v)                          _BFSET_(r32,31,16,v)
    #define   GET16DWTG_SIZE_X(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_SIZE_X(r16,v)                          _BFSET_(r16,15, 0,v)

    #define     w32DWTG_SIZE                                   {\
            UNSG32 uSIZE_Y                                     : 16;\
            UNSG32 uSIZE_X                                     : 16;\
          }
    union { UNSG32 u32DWTG_SIZE;
            struct w32DWTG_SIZE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_HS_FE(r32)                             _BFGET_(r32,15, 0)
    #define   SET32DWTG_HS_FE(r32,v)                           _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_HS_FE(r16)                             _BFGET_(r16,15, 0)
    #define   SET16DWTG_HS_FE(r16,v)                           _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_HS_BE(r32)                             _BFGET_(r32,31,16)
    #define   SET32DWTG_HS_BE(r32,v)                           _BFSET_(r32,31,16,v)
    #define   GET16DWTG_HS_BE(r16)                             _BFGET_(r16,15, 0)
    #define   SET16DWTG_HS_BE(r16,v)                           _BFSET_(r16,15, 0,v)

    #define     w32DWTG_HS                                     {\
            UNSG32 uHS_FE                                      : 16;\
            UNSG32 uHS_BE                                      : 16;\
          }
    union { UNSG32 u32DWTG_HS;
            struct w32DWTG_HS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_HB_FE(r32)                             _BFGET_(r32,15, 0)
    #define   SET32DWTG_HB_FE(r32,v)                           _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_HB_FE(r16)                             _BFGET_(r16,15, 0)
    #define   SET16DWTG_HB_FE(r16,v)                           _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_HB_BE(r32)                             _BFGET_(r32,31,16)
    #define   SET32DWTG_HB_BE(r32,v)                           _BFSET_(r32,31,16,v)
    #define   GET16DWTG_HB_BE(r16)                             _BFGET_(r16,15, 0)
    #define   SET16DWTG_HB_BE(r16,v)                           _BFSET_(r16,15, 0,v)

    #define     w32DWTG_HB                                     {\
            UNSG32 uHB_FE                                      : 16;\
            UNSG32 uHB_BE                                      : 16;\
          }
    union { UNSG32 u32DWTG_HB;
            struct w32DWTG_HB;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_HB_CR_FE(r32)                          _BFGET_(r32,15, 0)
    #define   SET32DWTG_HB_CR_FE(r32,v)                        _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_HB_CR_FE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16DWTG_HB_CR_FE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_HB_CR_BE(r32)                          _BFGET_(r32,31,16)
    #define   SET32DWTG_HB_CR_BE(r32,v)                        _BFSET_(r32,31,16,v)
    #define   GET16DWTG_HB_CR_BE(r16)                          _BFGET_(r16,15, 0)
    #define   SET16DWTG_HB_CR_BE(r16,v)                        _BFSET_(r16,15, 0,v)

    #define     w32DWTG_HB_CR                                  {\
            UNSG32 uHB_CR_FE                                   : 16;\
            UNSG32 uHB_CR_BE                                   : 16;\
          }
    union { UNSG32 u32DWTG_HB_CR;
            struct w32DWTG_HB_CR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_HB_CR2_FE(r32)                         _BFGET_(r32,15, 0)
    #define   SET32DWTG_HB_CR2_FE(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_HB_CR2_FE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16DWTG_HB_CR2_FE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_HB_CR2_BE(r32)                         _BFGET_(r32,31,16)
    #define   SET32DWTG_HB_CR2_BE(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16DWTG_HB_CR2_BE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16DWTG_HB_CR2_BE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32DWTG_HB_CR2                                 {\
            UNSG32 uHB_CR2_FE                                  : 16;\
            UNSG32 uHB_CR2_BE                                  : 16;\
          }
    union { UNSG32 u32DWTG_HB_CR2;
            struct w32DWTG_HB_CR2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_VS0_FE(r32)                            _BFGET_(r32,15, 0)
    #define   SET32DWTG_VS0_FE(r32,v)                          _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_VS0_FE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VS0_FE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_VS0_BE(r32)                            _BFGET_(r32,31,16)
    #define   SET32DWTG_VS0_BE(r32,v)                          _BFSET_(r32,31,16,v)
    #define   GET16DWTG_VS0_BE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VS0_BE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define     w32DWTG_VS0                                    {\
            UNSG32 uVS0_FE                                     : 16;\
            UNSG32 uVS0_BE                                     : 16;\
          }
    union { UNSG32 u32DWTG_VS0;
            struct w32DWTG_VS0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_VS1_FE(r32)                            _BFGET_(r32,15, 0)
    #define   SET32DWTG_VS1_FE(r32,v)                          _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_VS1_FE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VS1_FE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_VS1_BE(r32)                            _BFGET_(r32,31,16)
    #define   SET32DWTG_VS1_BE(r32,v)                          _BFSET_(r32,31,16,v)
    #define   GET16DWTG_VS1_BE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VS1_BE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define     w32DWTG_VS1                                    {\
            UNSG32 uVS1_FE                                     : 16;\
            UNSG32 uVS1_BE                                     : 16;\
          }
    union { UNSG32 u32DWTG_VS1;
            struct w32DWTG_VS1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_VB0_FE(r32)                            _BFGET_(r32,15, 0)
    #define   SET32DWTG_VB0_FE(r32,v)                          _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_VB0_FE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB0_FE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_VB0_BE(r32)                            _BFGET_(r32,31,16)
    #define   SET32DWTG_VB0_BE(r32,v)                          _BFSET_(r32,31,16,v)
    #define   GET16DWTG_VB0_BE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB0_BE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define     w32DWTG_VB0                                    {\
            UNSG32 uVB0_FE                                     : 16;\
            UNSG32 uVB0_BE                                     : 16;\
          }
    union { UNSG32 u32DWTG_VB0;
            struct w32DWTG_VB0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_VB0_CR_FE(r32)                         _BFGET_(r32,15, 0)
    #define   SET32DWTG_VB0_CR_FE(r32,v)                       _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_VB0_CR_FE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB0_CR_FE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_VB0_CR_BE(r32)                         _BFGET_(r32,31,16)
    #define   SET32DWTG_VB0_CR_BE(r32,v)                       _BFSET_(r32,31,16,v)
    #define   GET16DWTG_VB0_CR_BE(r16)                         _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB0_CR_BE(r16,v)                       _BFSET_(r16,15, 0,v)

    #define     w32DWTG_VB0_CR                                 {\
            UNSG32 uVB0_CR_FE                                  : 16;\
            UNSG32 uVB0_CR_BE                                  : 16;\
          }
    union { UNSG32 u32DWTG_VB0_CR;
            struct w32DWTG_VB0_CR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_VB0_CR2_FE(r32)                        _BFGET_(r32,15, 0)
    #define   SET32DWTG_VB0_CR2_FE(r32,v)                      _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_VB0_CR2_FE(r16)                        _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB0_CR2_FE(r16,v)                      _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_VB0_CR2_BE(r32)                        _BFGET_(r32,31,16)
    #define   SET32DWTG_VB0_CR2_BE(r32,v)                      _BFSET_(r32,31,16,v)
    #define   GET16DWTG_VB0_CR2_BE(r16)                        _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB0_CR2_BE(r16,v)                      _BFSET_(r16,15, 0,v)

    #define     w32DWTG_VB0_CR2                                {\
            UNSG32 uVB0_CR2_FE                                 : 16;\
            UNSG32 uVB0_CR2_BE                                 : 16;\
          }
    union { UNSG32 u32DWTG_VB0_CR2;
            struct w32DWTG_VB0_CR2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_VB1_FE(r32)                            _BFGET_(r32,15, 0)
    #define   SET32DWTG_VB1_FE(r32,v)                          _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_VB1_FE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB1_FE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_VB1_BE(r32)                            _BFGET_(r32,31,16)
    #define   SET32DWTG_VB1_BE(r32,v)                          _BFSET_(r32,31,16,v)
    #define   GET16DWTG_VB1_BE(r16)                            _BFGET_(r16,15, 0)
    #define   SET16DWTG_VB1_BE(r16,v)                          _BFSET_(r16,15, 0,v)

    #define     w32DWTG_VB1                                    {\
            UNSG32 uVB1_FE                                     : 16;\
            UNSG32 uVB1_BE                                     : 16;\
          }
    union { UNSG32 u32DWTG_VB1;
            struct w32DWTG_VB1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_SCAN_MODE(r32)                         _BFGET_(r32, 0, 0)
    #define   SET32DWTG_SCAN_MODE(r32,v)                       _BFSET_(r32, 0, 0,v)
    #define   GET16DWTG_SCAN_MODE(r16)                         _BFGET_(r16, 0, 0)
    #define   SET16DWTG_SCAN_MODE(r16,v)                       _BFSET_(r16, 0, 0,v)

    #define     w32DWTG_SCAN                                   {\
            UNSG32 uSCAN_MODE                                  :  1;\
            UNSG32 RSVDx30_b1                                  : 31;\
          }
    union { UNSG32 u32DWTG_SCAN;
            struct w32DWTG_SCAN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_INTPOS_FRAME(r32)                      _BFGET_(r32,15, 0)
    #define   SET32DWTG_INTPOS_FRAME(r32,v)                    _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_INTPOS_FRAME(r16)                      _BFGET_(r16,15, 0)
    #define   SET16DWTG_INTPOS_FRAME(r16,v)                    _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_INTPOS_FIELD(r32)                      _BFGET_(r32,31,16)
    #define   SET32DWTG_INTPOS_FIELD(r32,v)                    _BFSET_(r32,31,16,v)
    #define   GET16DWTG_INTPOS_FIELD(r16)                      _BFGET_(r16,15, 0)
    #define   SET16DWTG_INTPOS_FIELD(r16,v)                    _BFSET_(r16,15, 0,v)

    #define     w32DWTG_INTPOS                                 {\
            UNSG32 uINTPOS_FRAME                               : 16;\
            UNSG32 uINTPOS_FIELD                               : 16;\
          }
    union { UNSG32 u32DWTG_INTPOS;
            struct w32DWTG_INTPOS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_MODE_EN(r32)                           _BFGET_(r32, 0, 0)
    #define   SET32DWTG_MODE_EN(r32,v)                         _BFSET_(r32, 0, 0,v)
    #define   GET16DWTG_MODE_EN(r16)                           _BFGET_(r16, 0, 0)
    #define   SET16DWTG_MODE_EN(r16,v)                         _BFSET_(r16, 0, 0,v)

    #define     w32DWTG_MODE                                   {\
            UNSG32 uMODE_EN                                    :  1;\
            UNSG32 RSVDx38_b1                                  : 31;\
          }
    union { UNSG32 u32DWTG_MODE;
            struct w32DWTG_MODE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_HVREF_SEL(r32)                         _BFGET_(r32, 0, 0)
    #define   SET32DWTG_HVREF_SEL(r32,v)                       _BFSET_(r32, 0, 0,v)
    #define   GET16DWTG_HVREF_SEL(r16)                         _BFGET_(r16, 0, 0)
    #define   SET16DWTG_HVREF_SEL(r16,v)                       _BFSET_(r16, 0, 0,v)

    #define   GET32DWTG_HVREF_POL(r32)                         _BFGET_(r32, 1, 1)
    #define   SET32DWTG_HVREF_POL(r32,v)                       _BFSET_(r32, 1, 1,v)
    #define   GET16DWTG_HVREF_POL(r16)                         _BFGET_(r16, 1, 1)
    #define   SET16DWTG_HVREF_POL(r16,v)                       _BFSET_(r16, 1, 1,v)

    #define     w32DWTG_HVREF                                  {\
            UNSG32 uHVREF_SEL                                  :  1;\
            UNSG32 uHVREF_POL                                  :  1;\
            UNSG32 RSVDx3C_b2                                  : 30;\
          }
    union { UNSG32 u32DWTG_HVREF;
            struct w32DWTG_HVREF;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_STRPOS_StrdHstart(r32)                 _BFGET_(r32,15, 0)
    #define   SET32DWTG_STRPOS_StrdHstart(r32,v)               _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_STRPOS_StrdHstart(r16)                 _BFGET_(r16,15, 0)
    #define   SET16DWTG_STRPOS_StrdHstart(r16,v)               _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_STRPOS_StrdVstart(r32)                 _BFGET_(r32,31,16)
    #define   SET32DWTG_STRPOS_StrdVstart(r32,v)               _BFSET_(r32,31,16,v)
    #define   GET16DWTG_STRPOS_StrdVstart(r16)                 _BFGET_(r16,15, 0)
    #define   SET16DWTG_STRPOS_StrdVstart(r16,v)               _BFSET_(r16,15, 0,v)

    #define     w32DWTG_STRPOS                                 {\
            UNSG32 uSTRPOS_StrdHstart                          : 16;\
            UNSG32 uSTRPOS_StrdVstart                          : 16;\
          }
    union { UNSG32 u32DWTG_STRPOS;
            struct w32DWTG_STRPOS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_STRVS_StrdVend(r32)                    _BFGET_(r32,15, 0)
    #define   SET32DWTG_STRVS_StrdVend(r32,v)                  _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_STRVS_StrdVend(r16)                    _BFGET_(r16,15, 0)
    #define   SET16DWTG_STRVS_StrdVend(r16,v)                  _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_STRVS_StrdVsize(r32)                   _BFGET_(r32,23,16)
    #define   SET32DWTG_STRVS_StrdVsize(r32,v)                 _BFSET_(r32,23,16,v)
    #define   GET16DWTG_STRVS_StrdVsize(r16)                   _BFGET_(r16, 7, 0)
    #define   SET16DWTG_STRVS_StrdVsize(r16,v)                 _BFSET_(r16, 7, 0,v)

    #define     w32DWTG_STRVS                                  {\
            UNSG32 uSTRVS_StrdVend                             : 16;\
            UNSG32 uSTRVS_StrdVsize                            :  8;\
            UNSG32 RSVDx44_b24                                 :  8;\
          }
    union { UNSG32 u32DWTG_STRVS;
            struct w32DWTG_STRVS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32DWTG_FRSTPOS_FrstHstart(r32)                _BFGET_(r32,15, 0)
    #define   SET32DWTG_FRSTPOS_FrstHstart(r32,v)              _BFSET_(r32,15, 0,v)
    #define   GET16DWTG_FRSTPOS_FrstHstart(r16)                _BFGET_(r16,15, 0)
    #define   SET16DWTG_FRSTPOS_FrstHstart(r16,v)              _BFSET_(r16,15, 0,v)

    #define   GET32DWTG_FRSTPOS_FrstVstart(r32)                _BFGET_(r32,31,16)
    #define   SET32DWTG_FRSTPOS_FrstVstart(r32,v)              _BFSET_(r32,31,16,v)
    #define   GET16DWTG_FRSTPOS_FrstVstart(r16)                _BFGET_(r16,15, 0)
    #define   SET16DWTG_FRSTPOS_FrstVstart(r16,v)              _BFSET_(r16,15, 0,v)

    #define     w32DWTG_FRSTPOS                                {\
            UNSG32 uFRSTPOS_FrstHstart                         : 16;\
            UNSG32 uFRSTPOS_FrstVstart                         : 16;\
          }
    union { UNSG32 u32DWTG_FRSTPOS;
            struct w32DWTG_FRSTPOS;
          };
    ///////////////////////////////////////////////////////////
    } SIE_DWTG;

    typedef union  T32DWTG_INIT
          { UNSG32 u32;
            struct w32DWTG_INIT;
                 } T32DWTG_INIT;
    typedef union  T32DWTG_SIZE
          { UNSG32 u32;
            struct w32DWTG_SIZE;
                 } T32DWTG_SIZE;
    typedef union  T32DWTG_HS
          { UNSG32 u32;
            struct w32DWTG_HS;
                 } T32DWTG_HS;
    typedef union  T32DWTG_HB
          { UNSG32 u32;
            struct w32DWTG_HB;
                 } T32DWTG_HB;
    typedef union  T32DWTG_HB_CR
          { UNSG32 u32;
            struct w32DWTG_HB_CR;
                 } T32DWTG_HB_CR;
    typedef union  T32DWTG_HB_CR2
          { UNSG32 u32;
            struct w32DWTG_HB_CR2;
                 } T32DWTG_HB_CR2;
    typedef union  T32DWTG_VS0
          { UNSG32 u32;
            struct w32DWTG_VS0;
                 } T32DWTG_VS0;
    typedef union  T32DWTG_VS1
          { UNSG32 u32;
            struct w32DWTG_VS1;
                 } T32DWTG_VS1;
    typedef union  T32DWTG_VB0
          { UNSG32 u32;
            struct w32DWTG_VB0;
                 } T32DWTG_VB0;
    typedef union  T32DWTG_VB0_CR
          { UNSG32 u32;
            struct w32DWTG_VB0_CR;
                 } T32DWTG_VB0_CR;
    typedef union  T32DWTG_VB0_CR2
          { UNSG32 u32;
            struct w32DWTG_VB0_CR2;
                 } T32DWTG_VB0_CR2;
    typedef union  T32DWTG_VB1
          { UNSG32 u32;
            struct w32DWTG_VB1;
                 } T32DWTG_VB1;
    typedef union  T32DWTG_SCAN
          { UNSG32 u32;
            struct w32DWTG_SCAN;
                 } T32DWTG_SCAN;
    typedef union  T32DWTG_INTPOS
          { UNSG32 u32;
            struct w32DWTG_INTPOS;
                 } T32DWTG_INTPOS;
    typedef union  T32DWTG_MODE
          { UNSG32 u32;
            struct w32DWTG_MODE;
                 } T32DWTG_MODE;
    typedef union  T32DWTG_HVREF
          { UNSG32 u32;
            struct w32DWTG_HVREF;
                 } T32DWTG_HVREF;
    typedef union  T32DWTG_STRPOS
          { UNSG32 u32;
            struct w32DWTG_STRPOS;
                 } T32DWTG_STRPOS;
    typedef union  T32DWTG_STRVS
          { UNSG32 u32;
            struct w32DWTG_STRVS;
                 } T32DWTG_STRVS;
    typedef union  T32DWTG_FRSTPOS
          { UNSG32 u32;
            struct w32DWTG_FRSTPOS;
                 } T32DWTG_FRSTPOS;
    ///////////////////////////////////////////////////////////

    typedef union  TDWTG_INIT
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_INIT;
                   };
                 } TDWTG_INIT;
    typedef union  TDWTG_SIZE
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_SIZE;
                   };
                 } TDWTG_SIZE;
    typedef union  TDWTG_HS
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_HS;
                   };
                 } TDWTG_HS;
    typedef union  TDWTG_HB
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_HB;
                   };
                 } TDWTG_HB;
    typedef union  TDWTG_HB_CR
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_HB_CR;
                   };
                 } TDWTG_HB_CR;
    typedef union  TDWTG_HB_CR2
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_HB_CR2;
                   };
                 } TDWTG_HB_CR2;
    typedef union  TDWTG_VS0
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_VS0;
                   };
                 } TDWTG_VS0;
    typedef union  TDWTG_VS1
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_VS1;
                   };
                 } TDWTG_VS1;
    typedef union  TDWTG_VB0
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_VB0;
                   };
                 } TDWTG_VB0;
    typedef union  TDWTG_VB0_CR
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_VB0_CR;
                   };
                 } TDWTG_VB0_CR;
    typedef union  TDWTG_VB0_CR2
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_VB0_CR2;
                   };
                 } TDWTG_VB0_CR2;
    typedef union  TDWTG_VB1
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_VB1;
                   };
                 } TDWTG_VB1;
    typedef union  TDWTG_SCAN
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_SCAN;
                   };
                 } TDWTG_SCAN;
    typedef union  TDWTG_INTPOS
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_INTPOS;
                   };
                 } TDWTG_INTPOS;
    typedef union  TDWTG_MODE
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_MODE;
                   };
                 } TDWTG_MODE;
    typedef union  TDWTG_HVREF
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_HVREF;
                   };
                 } TDWTG_HVREF;
    typedef union  TDWTG_STRPOS
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_STRPOS;
                   };
                 } TDWTG_STRPOS;
    typedef union  TDWTG_STRVS
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_STRVS;
                   };
                 } TDWTG_STRVS;
    typedef union  TDWTG_FRSTPOS
          { UNSG32 u32[1];
            struct {
            struct w32DWTG_FRSTPOS;
                   };
                 } TDWTG_FRSTPOS;

    ///////////////////////////////////////////////////////////
     SIGN32 DWTG_drvrd(SIE_DWTG *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 DWTG_drvwr(SIE_DWTG *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void DWTG_reset(SIE_DWTG *p);
     SIGN32 DWTG_cmp  (SIE_DWTG *p, SIE_DWTG *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define DWTG_check(p,pie,pfx,hLOG) DWTG_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define DWTG_print(p,    pfx,hLOG) DWTG_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: DWTG
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE LGDC                    biu              (4,4)
///     ###
///     * Register specification of interface
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 CFG0                 (P)
///               %unsigned 8  CisHwin                   0x8
///                                    ###
///                                    * CIS window Horizontal size
///                                    ###
///               %unsigned 8  CisVwin                   0x10
///                                    ###
///                                    * CIS window Vertical size
///                                    ###
///               %unsigned 8  DisHwin                   0x30
///                                    ###
///                                    * DIS read window Horizontal size
///                                    ###
///               %unsigned 8  DisVwin                   0x20
///                                    ###
///                                    * DIS read window Vertical size
///                                    ###
///     @ 0x00004 CFG1                 (P)
///               %unsigned 5  DisHgrid                  0x8
///                                    ###
///                                    * DIS Image Horizontal Grid/Tile dimension
///                                    * Software consider this grid for DIS block order calculations.
///                                    * Dhub Read client follows this Tile information for DIS block fetch
///                                    ###
///               %unsigned 5  DisVgrid                  0x10
///                                    ###
///                                    * DIS Image Vertical Grid/Tile dimension
///                                    * oftware consider this grid for DIS block order calculations.
///                                    * Dhub Read client follows this Tile information for DIS block fetch
///                                    ###
///               %unsigned 5  TileHwin                  0x8
///                                    ###
///                                    * Horizontal Tile dimension for DDR storage
///                                    * Dhub Write client follows this tile information for CIS block write
///                                    ###
///               %unsigned 5  TileVwin                  0x8
///                                    ###
///                                    * Vertical Tile dimension for DDR storage
///                                    * Dhub Write client follows this tile information for CIS block write
///                                    ###
///               %%        12         # Stuffing bits...
///     @ 0x00008 CFG2                 (P)
///               %unsigned 10 CisMatSize                0x5F
///                                    ###
///                                    * Total elements in a CIS matrix = (CisHwin * CisVwin)
///                                    ###
///               %unsigned 10 CisBlkHtotal              0x80
///                                    ###
///                                    * Total CIS blocks in a Vertical Stride
///                                    * = Ceil(Horizontal resolution / CisHwin) I.e complete Integer on upper size
///                                    ###
///               %unsigned 10 CisBlkVtotal              0x5A
///                                    ###
///                                    * Total CIS strides in a Frame
///                                    * = Ceil(Vertical resolution / CisVwin) I.e complete Integer on upper size
///                                    ###
///               %%        2          # Stuffing bits...
///     @ 0x0000C CFG3                 (P)
///               %unsigned 12 Hdimension                0x780
///                                    ###
///                                    * Horizontal Dimension =
///                                    * CisHwin * Ceil(HRES/CisHwin)
///                                    * rounded to upper side.
///                                    ###
///               %unsigned 12 Vdimension                0x438
///                                    ###
///                                    * Vertical Dimension =
///                                    * CisVwin * Ceil(VRES/CisVwin)
///                                    * rounded to upper side.
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00010 CFG4                 (P)
///               %unsigned 12 HRES                      0x780
///                                    ###
///                                    * Horizontal Resolution
///                                    ###
///               %unsigned 12 VRES                      0x438
///                                    ###
///                                    * Vertical Resolution
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00014 CFG5                 (P)
///               %unsigned 9  CisBsize                  0x1
///                                    ###
///                                    * CIS block burst size, Number of CIS blocks processed at once Sent to Dhub as two conjoined tile.
///                                    ###
///               %unsigned 9  MaxDisBlocks              0x1FF
///                                    ###
///                                    * Maximum DIS blocks in a stride, Limits the DIS Order LUT
///                                    * Usually set to (Hdimension/CisHwin)
///                                    ###
///               %unsigned 2  YUVmode                   0x1
///                                    ###
///                                    * YUV processing mode
///                                    * 1:YUV422      2: YUV420
///                                    ###
///               %unsigned 1  DisV4H2scan               0x0
///                                    ###
///                                    * 1: V4H2 tiled DIS input (used during V8H6 tile mode DIS) 0:H4V2 tiled DIS input (used during V8H8 or V6H8 mode DIS )
///                                    ###
///               %unsigned 1  LimitCbuff                0x1
///                                    ###
///                                    * Restrict the DIS Chroma write above the Allowed DIS buffer limit during YUV420
///                                    ###
///               %unsigned 2  BicubicOff                0x0
///                                    ###
///                                    * Turn OFF the bi-cubic interpolation, Switch ON to Nearest neighborhood interpolation.[0]: Luma interpolation[1] chroma interpolation
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00018 CFG6                 (P)
///               %unsigned 7  DisLumaTiles              0x18
///                                    ###
///                                    * Total number of Luma tiles in a DIS block [DisVwin x DisHwin], Max Limit=64
///                                    * YUV422   8Bits: (DisVwin/8)*(DisHwin/8)
///                                    * YUV422 10Bits: (DisVwin/6)*(DisHwin/8) for V6H8
///                                    * (DisVwin/8)*(DisHwin/6) for V8H6
///                                    ###
///               %unsigned 7  DisChromaTiles            0xC
///                                    ###
///                                    * Total number of Chroma tiles in a DIS block[DisVwin x DisHwin], Max Limit=64
///                                    * YUV422   8Bits: (DisVwin/8)*(DisHwin/8)
///                                    * YUV422 10Bits: (DisVwin/6)*(DisHwin/8) for V6H8
///                                    * (DisVwin/8)*(DisHwin/6) for V8H6
///                                    * YUV420   8Bits: (Ceil(DisVwin/16)*(DisHwin/8))
///                                    * YUV420 10Bits: (Ceil(DisVwin/12)*(DisHwin/8)) for V6H8
///                                    * (Ceil(DisVwin/16)*(DisHwin/6)) for V8H6
///                                    ###
///               %%        18         # Stuffing bits...
///     @ 0x0001C CFG7                 (P)
///               %unsigned 13 DisBlkSize                0x600
///                                    ###
///                                    * Total Pixels in a DIS pixel 2D blocks = (DisVwin * DisHwin)
///                                    * Max 4096
///                                    ###
///               %unsigned 13 DisBlkChromaSize          0x600
///                                    ###
///                                    * Total Pixels in a DIS pixel 2D blocks (Max 4096)
///                                    * For YUV422:
///                                    * DisBlkChromaSize = (DisVwin * DisHwin)
///                                    * for YUV420
///                                    * DisBlkChromaSize=(DisBlkSize+(DisVwin & 0x3)*DisHwin)
///                                    ###
///               %%        6          # Stuffing bits...
///     @ 0x00020 CFG8                 (P)
///               %unsigned 10 BlankLuma                 0x0
///                                    ###
///                                    * Luma value Out of active video
///                                    ###
///               %unsigned 10 BlankChroma               0x80
///                                    ###
///                                    * Chroma value Out of active video
///                                    ###
///               %unsigned 1  Source8bits               0x1
///                                    ###
///                                    * Indication that Source is 8bit
///                                    * 1: If (((DisHgrid % 8)==0)&&((DisVgrid % 8)==0)) is TRUE
///                                    * 0: If (((DisHgrid % 8)==0)&&((DisVgrid % 8)==0)) is FALSE
///                                    ###
///               %%        11         # Stuffing bits...
///     @ 0x00024 CFTG                 (P)
///               %unsigned 1  start                     0x0
///                                    ###
///                                    * DWARP tg start bit -
///                                    * 0 : No effect on hardware.
///                                    * 1 : start the DWARP TG.
///                                    * The write 1 to this register is used to kick the hardware.
///                                    ###
///               %unsigned 1  clear                     0x0
///                                    ###
///                                    * Clear bit to reset TG. Level signal.
///                                    ###
///               %unsigned 1  clken_ctrl                0x0
///                                    ###
///                                    * Clock enable control register bit. Write 1 to make DWARP pipe TG clock enable as always high
///                                    * Default TG clock enable is flow control based
///                                    ###
///               %unsigned 1  clken_stall               0x0
///                                    ###
///                                    * 1: Enable TG stall during when CIS controller is on WAIT state. Write 1 to make DWARP pipe TG clock enable to be disabled when CisHold signal is HIGH.
///                                    * 0: Normal operation TG is controlled by LDI write controller.
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00028                      (P)
///     # 0x00028 TG
///               $DWTG                TG                REG
///     @ 0x00074 DBG0                 (R-)
///               %unsigned 4  FLAG
///                                    ###
///                                    * [0] Error Flag Status : Luma CIS referencing above the DIS block Row boundary
///                                    * [1] Error Flag Status : Luma CIS referencing above the DIS block Col boundary
///                                    * [2] Error Flag Status : Chroma CIS referencing above the DIS block Row boundary
///                                    * [3] Error Flag Status : Chroma CIS referencing above the DIS block Col boundary
///                                    ###
///               %unsigned 4  TGERR
///                                    ###
///                                    * [0] Error notification of incomplete CIS block processing in a stride.
///                                    * [1] Error notification of incomplete Stride processing in a Frame.
///                                    * [3:2] Not used
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00078 DBG1                 (R-)
///               %unsigned 9  FrameStrides
///                                    ###
///                                    * Total Number of CIS Strides in a Frame
///                                    ###
///               %unsigned 9  MinCisBlks
///                                    ###
///                                    * Minimum number of CIS blocks being processed in a Stride
///                                    ###
///               %unsigned 9  MaxCisBlks
///                                    ###
///                                    * Maximum number of CIS blocks being processed in a Stride
///                                    ###
///               %%        5          # Stuffing bits...
///     @ 0x0007C DBG2                 (R-)
///               %unsigned 16 FrameCisBlks
///                                    ###
///                                    * Total number of CIS block being processed in a frame.
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     128B, bits:     778b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_LGDC
#define h_LGDC (){}

    #define     RA_LGDC_CFG0                                   0x0000

    #define     BA_LGDC_CFG0_CisHwin                           0x0000
    #define     B16LGDC_CFG0_CisHwin                           0x0000
    #define   LSb32LGDC_CFG0_CisHwin                              0
    #define   LSb16LGDC_CFG0_CisHwin                              0
    #define       bLGDC_CFG0_CisHwin                           8
    #define   MSK32LGDC_CFG0_CisHwin                              0x000000FF

    #define     BA_LGDC_CFG0_CisVwin                           0x0001
    #define     B16LGDC_CFG0_CisVwin                           0x0000
    #define   LSb32LGDC_CFG0_CisVwin                              8
    #define   LSb16LGDC_CFG0_CisVwin                              8
    #define       bLGDC_CFG0_CisVwin                           8
    #define   MSK32LGDC_CFG0_CisVwin                              0x0000FF00

    #define     BA_LGDC_CFG0_DisHwin                           0x0002
    #define     B16LGDC_CFG0_DisHwin                           0x0002
    #define   LSb32LGDC_CFG0_DisHwin                              16
    #define   LSb16LGDC_CFG0_DisHwin                              0
    #define       bLGDC_CFG0_DisHwin                           8
    #define   MSK32LGDC_CFG0_DisHwin                              0x00FF0000

    #define     BA_LGDC_CFG0_DisVwin                           0x0003
    #define     B16LGDC_CFG0_DisVwin                           0x0002
    #define   LSb32LGDC_CFG0_DisVwin                              24
    #define   LSb16LGDC_CFG0_DisVwin                              8
    #define       bLGDC_CFG0_DisVwin                           8
    #define   MSK32LGDC_CFG0_DisVwin                              0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG1                                   0x0004

    #define     BA_LGDC_CFG1_DisHgrid                          0x0004
    #define     B16LGDC_CFG1_DisHgrid                          0x0004
    #define   LSb32LGDC_CFG1_DisHgrid                             0
    #define   LSb16LGDC_CFG1_DisHgrid                             0
    #define       bLGDC_CFG1_DisHgrid                          5
    #define   MSK32LGDC_CFG1_DisHgrid                             0x0000001F

    #define     BA_LGDC_CFG1_DisVgrid                          0x0004
    #define     B16LGDC_CFG1_DisVgrid                          0x0004
    #define   LSb32LGDC_CFG1_DisVgrid                             5
    #define   LSb16LGDC_CFG1_DisVgrid                             5
    #define       bLGDC_CFG1_DisVgrid                          5
    #define   MSK32LGDC_CFG1_DisVgrid                             0x000003E0

    #define     BA_LGDC_CFG1_TileHwin                          0x0005
    #define     B16LGDC_CFG1_TileHwin                          0x0004
    #define   LSb32LGDC_CFG1_TileHwin                             10
    #define   LSb16LGDC_CFG1_TileHwin                             10
    #define       bLGDC_CFG1_TileHwin                          5
    #define   MSK32LGDC_CFG1_TileHwin                             0x00007C00

    #define     BA_LGDC_CFG1_TileVwin                          0x0005
    #define     B16LGDC_CFG1_TileVwin                          0x0004
    #define   LSb32LGDC_CFG1_TileVwin                             15
    #define   LSb16LGDC_CFG1_TileVwin                             15
    #define       bLGDC_CFG1_TileVwin                          5
    #define   MSK32LGDC_CFG1_TileVwin                             0x000F8000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG2                                   0x0008

    #define     BA_LGDC_CFG2_CisMatSize                        0x0008
    #define     B16LGDC_CFG2_CisMatSize                        0x0008
    #define   LSb32LGDC_CFG2_CisMatSize                           0
    #define   LSb16LGDC_CFG2_CisMatSize                           0
    #define       bLGDC_CFG2_CisMatSize                        10
    #define   MSK32LGDC_CFG2_CisMatSize                           0x000003FF

    #define     BA_LGDC_CFG2_CisBlkHtotal                      0x0009
    #define     B16LGDC_CFG2_CisBlkHtotal                      0x0008
    #define   LSb32LGDC_CFG2_CisBlkHtotal                         10
    #define   LSb16LGDC_CFG2_CisBlkHtotal                         10
    #define       bLGDC_CFG2_CisBlkHtotal                      10
    #define   MSK32LGDC_CFG2_CisBlkHtotal                         0x000FFC00

    #define     BA_LGDC_CFG2_CisBlkVtotal                      0x000A
    #define     B16LGDC_CFG2_CisBlkVtotal                      0x000A
    #define   LSb32LGDC_CFG2_CisBlkVtotal                         20
    #define   LSb16LGDC_CFG2_CisBlkVtotal                         4
    #define       bLGDC_CFG2_CisBlkVtotal                      10
    #define   MSK32LGDC_CFG2_CisBlkVtotal                         0x3FF00000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG3                                   0x000C

    #define     BA_LGDC_CFG3_Hdimension                        0x000C
    #define     B16LGDC_CFG3_Hdimension                        0x000C
    #define   LSb32LGDC_CFG3_Hdimension                           0
    #define   LSb16LGDC_CFG3_Hdimension                           0
    #define       bLGDC_CFG3_Hdimension                        12
    #define   MSK32LGDC_CFG3_Hdimension                           0x00000FFF

    #define     BA_LGDC_CFG3_Vdimension                        0x000D
    #define     B16LGDC_CFG3_Vdimension                        0x000C
    #define   LSb32LGDC_CFG3_Vdimension                           12
    #define   LSb16LGDC_CFG3_Vdimension                           12
    #define       bLGDC_CFG3_Vdimension                        12
    #define   MSK32LGDC_CFG3_Vdimension                           0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG4                                   0x0010

    #define     BA_LGDC_CFG4_HRES                              0x0010
    #define     B16LGDC_CFG4_HRES                              0x0010
    #define   LSb32LGDC_CFG4_HRES                                 0
    #define   LSb16LGDC_CFG4_HRES                                 0
    #define       bLGDC_CFG4_HRES                              12
    #define   MSK32LGDC_CFG4_HRES                                 0x00000FFF

    #define     BA_LGDC_CFG4_VRES                              0x0011
    #define     B16LGDC_CFG4_VRES                              0x0010
    #define   LSb32LGDC_CFG4_VRES                                 12
    #define   LSb16LGDC_CFG4_VRES                                 12
    #define       bLGDC_CFG4_VRES                              12
    #define   MSK32LGDC_CFG4_VRES                                 0x00FFF000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG5                                   0x0014

    #define     BA_LGDC_CFG5_CisBsize                          0x0014
    #define     B16LGDC_CFG5_CisBsize                          0x0014
    #define   LSb32LGDC_CFG5_CisBsize                             0
    #define   LSb16LGDC_CFG5_CisBsize                             0
    #define       bLGDC_CFG5_CisBsize                          9
    #define   MSK32LGDC_CFG5_CisBsize                             0x000001FF

    #define     BA_LGDC_CFG5_MaxDisBlocks                      0x0015
    #define     B16LGDC_CFG5_MaxDisBlocks                      0x0014
    #define   LSb32LGDC_CFG5_MaxDisBlocks                         9
    #define   LSb16LGDC_CFG5_MaxDisBlocks                         9
    #define       bLGDC_CFG5_MaxDisBlocks                      9
    #define   MSK32LGDC_CFG5_MaxDisBlocks                         0x0003FE00

    #define     BA_LGDC_CFG5_YUVmode                           0x0016
    #define     B16LGDC_CFG5_YUVmode                           0x0016
    #define   LSb32LGDC_CFG5_YUVmode                              18
    #define   LSb16LGDC_CFG5_YUVmode                              2
    #define       bLGDC_CFG5_YUVmode                           2
    #define   MSK32LGDC_CFG5_YUVmode                              0x000C0000

    #define     BA_LGDC_CFG5_DisV4H2scan                       0x0016
    #define     B16LGDC_CFG5_DisV4H2scan                       0x0016
    #define   LSb32LGDC_CFG5_DisV4H2scan                          20
    #define   LSb16LGDC_CFG5_DisV4H2scan                          4
    #define       bLGDC_CFG5_DisV4H2scan                       1
    #define   MSK32LGDC_CFG5_DisV4H2scan                          0x00100000

    #define     BA_LGDC_CFG5_LimitCbuff                        0x0016
    #define     B16LGDC_CFG5_LimitCbuff                        0x0016
    #define   LSb32LGDC_CFG5_LimitCbuff                           21
    #define   LSb16LGDC_CFG5_LimitCbuff                           5
    #define       bLGDC_CFG5_LimitCbuff                        1
    #define   MSK32LGDC_CFG5_LimitCbuff                           0x00200000

    #define     BA_LGDC_CFG5_BicubicOff                        0x0016
    #define     B16LGDC_CFG5_BicubicOff                        0x0016
    #define   LSb32LGDC_CFG5_BicubicOff                           22
    #define   LSb16LGDC_CFG5_BicubicOff                           6
    #define       bLGDC_CFG5_BicubicOff                        2
    #define   MSK32LGDC_CFG5_BicubicOff                           0x00C00000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG6                                   0x0018

    #define     BA_LGDC_CFG6_DisLumaTiles                      0x0018
    #define     B16LGDC_CFG6_DisLumaTiles                      0x0018
    #define   LSb32LGDC_CFG6_DisLumaTiles                         0
    #define   LSb16LGDC_CFG6_DisLumaTiles                         0
    #define       bLGDC_CFG6_DisLumaTiles                      7
    #define   MSK32LGDC_CFG6_DisLumaTiles                         0x0000007F

    #define     BA_LGDC_CFG6_DisChromaTiles                    0x0018
    #define     B16LGDC_CFG6_DisChromaTiles                    0x0018
    #define   LSb32LGDC_CFG6_DisChromaTiles                       7
    #define   LSb16LGDC_CFG6_DisChromaTiles                       7
    #define       bLGDC_CFG6_DisChromaTiles                    7
    #define   MSK32LGDC_CFG6_DisChromaTiles                       0x00003F80
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG7                                   0x001C

    #define     BA_LGDC_CFG7_DisBlkSize                        0x001C
    #define     B16LGDC_CFG7_DisBlkSize                        0x001C
    #define   LSb32LGDC_CFG7_DisBlkSize                           0
    #define   LSb16LGDC_CFG7_DisBlkSize                           0
    #define       bLGDC_CFG7_DisBlkSize                        13
    #define   MSK32LGDC_CFG7_DisBlkSize                           0x00001FFF

    #define     BA_LGDC_CFG7_DisBlkChromaSize                  0x001D
    #define     B16LGDC_CFG7_DisBlkChromaSize                  0x001C
    #define   LSb32LGDC_CFG7_DisBlkChromaSize                     13
    #define   LSb16LGDC_CFG7_DisBlkChromaSize                     13
    #define       bLGDC_CFG7_DisBlkChromaSize                  13
    #define   MSK32LGDC_CFG7_DisBlkChromaSize                     0x03FFE000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFG8                                   0x0020

    #define     BA_LGDC_CFG8_BlankLuma                         0x0020
    #define     B16LGDC_CFG8_BlankLuma                         0x0020
    #define   LSb32LGDC_CFG8_BlankLuma                            0
    #define   LSb16LGDC_CFG8_BlankLuma                            0
    #define       bLGDC_CFG8_BlankLuma                         10
    #define   MSK32LGDC_CFG8_BlankLuma                            0x000003FF

    #define     BA_LGDC_CFG8_BlankChroma                       0x0021
    #define     B16LGDC_CFG8_BlankChroma                       0x0020
    #define   LSb32LGDC_CFG8_BlankChroma                          10
    #define   LSb16LGDC_CFG8_BlankChroma                          10
    #define       bLGDC_CFG8_BlankChroma                       10
    #define   MSK32LGDC_CFG8_BlankChroma                          0x000FFC00

    #define     BA_LGDC_CFG8_Source8bits                       0x0022
    #define     B16LGDC_CFG8_Source8bits                       0x0022
    #define   LSb32LGDC_CFG8_Source8bits                          20
    #define   LSb16LGDC_CFG8_Source8bits                          4
    #define       bLGDC_CFG8_Source8bits                       1
    #define   MSK32LGDC_CFG8_Source8bits                          0x00100000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_CFTG                                   0x0024

    #define     BA_LGDC_CFTG_start                             0x0024
    #define     B16LGDC_CFTG_start                             0x0024
    #define   LSb32LGDC_CFTG_start                                0
    #define   LSb16LGDC_CFTG_start                                0
    #define       bLGDC_CFTG_start                             1
    #define   MSK32LGDC_CFTG_start                                0x00000001

    #define     BA_LGDC_CFTG_clear                             0x0024
    #define     B16LGDC_CFTG_clear                             0x0024
    #define   LSb32LGDC_CFTG_clear                                1
    #define   LSb16LGDC_CFTG_clear                                1
    #define       bLGDC_CFTG_clear                             1
    #define   MSK32LGDC_CFTG_clear                                0x00000002

    #define     BA_LGDC_CFTG_clken_ctrl                        0x0024
    #define     B16LGDC_CFTG_clken_ctrl                        0x0024
    #define   LSb32LGDC_CFTG_clken_ctrl                           2
    #define   LSb16LGDC_CFTG_clken_ctrl                           2
    #define       bLGDC_CFTG_clken_ctrl                        1
    #define   MSK32LGDC_CFTG_clken_ctrl                           0x00000004

    #define     BA_LGDC_CFTG_clken_stall                       0x0024
    #define     B16LGDC_CFTG_clken_stall                       0x0024
    #define   LSb32LGDC_CFTG_clken_stall                          3
    #define   LSb16LGDC_CFTG_clken_stall                          3
    #define       bLGDC_CFTG_clken_stall                       1
    #define   MSK32LGDC_CFTG_clken_stall                          0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_TG                                     0x0028
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_DBG0                                   0x0074

    #define     BA_LGDC_DBG0_FLAG                              0x0074
    #define     B16LGDC_DBG0_FLAG                              0x0074
    #define   LSb32LGDC_DBG0_FLAG                                 0
    #define   LSb16LGDC_DBG0_FLAG                                 0
    #define       bLGDC_DBG0_FLAG                              4
    #define   MSK32LGDC_DBG0_FLAG                                 0x0000000F

    #define     BA_LGDC_DBG0_TGERR                             0x0074
    #define     B16LGDC_DBG0_TGERR                             0x0074
    #define   LSb32LGDC_DBG0_TGERR                                4
    #define   LSb16LGDC_DBG0_TGERR                                4
    #define       bLGDC_DBG0_TGERR                             4
    #define   MSK32LGDC_DBG0_TGERR                                0x000000F0
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_DBG1                                   0x0078

    #define     BA_LGDC_DBG1_FrameStrides                      0x0078
    #define     B16LGDC_DBG1_FrameStrides                      0x0078
    #define   LSb32LGDC_DBG1_FrameStrides                         0
    #define   LSb16LGDC_DBG1_FrameStrides                         0
    #define       bLGDC_DBG1_FrameStrides                      9
    #define   MSK32LGDC_DBG1_FrameStrides                         0x000001FF

    #define     BA_LGDC_DBG1_MinCisBlks                        0x0079
    #define     B16LGDC_DBG1_MinCisBlks                        0x0078
    #define   LSb32LGDC_DBG1_MinCisBlks                           9
    #define   LSb16LGDC_DBG1_MinCisBlks                           9
    #define       bLGDC_DBG1_MinCisBlks                        9
    #define   MSK32LGDC_DBG1_MinCisBlks                           0x0003FE00

    #define     BA_LGDC_DBG1_MaxCisBlks                        0x007A
    #define     B16LGDC_DBG1_MaxCisBlks                        0x007A
    #define   LSb32LGDC_DBG1_MaxCisBlks                           18
    #define   LSb16LGDC_DBG1_MaxCisBlks                           2
    #define       bLGDC_DBG1_MaxCisBlks                        9
    #define   MSK32LGDC_DBG1_MaxCisBlks                           0x07FC0000
    ///////////////////////////////////////////////////////////
    #define     RA_LGDC_DBG2                                   0x007C

    #define     BA_LGDC_DBG2_FrameCisBlks                      0x007C
    #define     B16LGDC_DBG2_FrameCisBlks                      0x007C
    #define   LSb32LGDC_DBG2_FrameCisBlks                         0
    #define   LSb16LGDC_DBG2_FrameCisBlks                         0
    #define       bLGDC_DBG2_FrameCisBlks                      16
    #define   MSK32LGDC_DBG2_FrameCisBlks                         0x0000FFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_LGDC {
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG0_CisHwin(r32)                      _BFGET_(r32, 7, 0)
    #define   SET32LGDC_CFG0_CisHwin(r32,v)                    _BFSET_(r32, 7, 0,v)
    #define   GET16LGDC_CFG0_CisHwin(r16)                      _BFGET_(r16, 7, 0)
    #define   SET16LGDC_CFG0_CisHwin(r16,v)                    _BFSET_(r16, 7, 0,v)

    #define   GET32LGDC_CFG0_CisVwin(r32)                      _BFGET_(r32,15, 8)
    #define   SET32LGDC_CFG0_CisVwin(r32,v)                    _BFSET_(r32,15, 8,v)
    #define   GET16LGDC_CFG0_CisVwin(r16)                      _BFGET_(r16,15, 8)
    #define   SET16LGDC_CFG0_CisVwin(r16,v)                    _BFSET_(r16,15, 8,v)

    #define   GET32LGDC_CFG0_DisHwin(r32)                      _BFGET_(r32,23,16)
    #define   SET32LGDC_CFG0_DisHwin(r32,v)                    _BFSET_(r32,23,16,v)
    #define   GET16LGDC_CFG0_DisHwin(r16)                      _BFGET_(r16, 7, 0)
    #define   SET16LGDC_CFG0_DisHwin(r16,v)                    _BFSET_(r16, 7, 0,v)

    #define   GET32LGDC_CFG0_DisVwin(r32)                      _BFGET_(r32,31,24)
    #define   SET32LGDC_CFG0_DisVwin(r32,v)                    _BFSET_(r32,31,24,v)
    #define   GET16LGDC_CFG0_DisVwin(r16)                      _BFGET_(r16,15, 8)
    #define   SET16LGDC_CFG0_DisVwin(r16,v)                    _BFSET_(r16,15, 8,v)

    #define     w32LGDC_CFG0                                   {\
            UNSG32 uCFG0_CisHwin                               :  8;\
            UNSG32 uCFG0_CisVwin                               :  8;\
            UNSG32 uCFG0_DisHwin                               :  8;\
            UNSG32 uCFG0_DisVwin                               :  8;\
          }
    union { UNSG32 u32LGDC_CFG0;
            struct w32LGDC_CFG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG1_DisHgrid(r32)                     _BFGET_(r32, 4, 0)
    #define   SET32LGDC_CFG1_DisHgrid(r32,v)                   _BFSET_(r32, 4, 0,v)
    #define   GET16LGDC_CFG1_DisHgrid(r16)                     _BFGET_(r16, 4, 0)
    #define   SET16LGDC_CFG1_DisHgrid(r16,v)                   _BFSET_(r16, 4, 0,v)

    #define   GET32LGDC_CFG1_DisVgrid(r32)                     _BFGET_(r32, 9, 5)
    #define   SET32LGDC_CFG1_DisVgrid(r32,v)                   _BFSET_(r32, 9, 5,v)
    #define   GET16LGDC_CFG1_DisVgrid(r16)                     _BFGET_(r16, 9, 5)
    #define   SET16LGDC_CFG1_DisVgrid(r16,v)                   _BFSET_(r16, 9, 5,v)

    #define   GET32LGDC_CFG1_TileHwin(r32)                     _BFGET_(r32,14,10)
    #define   SET32LGDC_CFG1_TileHwin(r32,v)                   _BFSET_(r32,14,10,v)
    #define   GET16LGDC_CFG1_TileHwin(r16)                     _BFGET_(r16,14,10)
    #define   SET16LGDC_CFG1_TileHwin(r16,v)                   _BFSET_(r16,14,10,v)

    #define   GET32LGDC_CFG1_TileVwin(r32)                     _BFGET_(r32,19,15)
    #define   SET32LGDC_CFG1_TileVwin(r32,v)                   _BFSET_(r32,19,15,v)

    #define     w32LGDC_CFG1                                   {\
            UNSG32 uCFG1_DisHgrid                              :  5;\
            UNSG32 uCFG1_DisVgrid                              :  5;\
            UNSG32 uCFG1_TileHwin                              :  5;\
            UNSG32 uCFG1_TileVwin                              :  5;\
            UNSG32 RSVDx4_b20                                  : 12;\
          }
    union { UNSG32 u32LGDC_CFG1;
            struct w32LGDC_CFG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG2_CisMatSize(r32)                   _BFGET_(r32, 9, 0)
    #define   SET32LGDC_CFG2_CisMatSize(r32,v)                 _BFSET_(r32, 9, 0,v)
    #define   GET16LGDC_CFG2_CisMatSize(r16)                   _BFGET_(r16, 9, 0)
    #define   SET16LGDC_CFG2_CisMatSize(r16,v)                 _BFSET_(r16, 9, 0,v)

    #define   GET32LGDC_CFG2_CisBlkHtotal(r32)                 _BFGET_(r32,19,10)
    #define   SET32LGDC_CFG2_CisBlkHtotal(r32,v)               _BFSET_(r32,19,10,v)

    #define   GET32LGDC_CFG2_CisBlkVtotal(r32)                 _BFGET_(r32,29,20)
    #define   SET32LGDC_CFG2_CisBlkVtotal(r32,v)               _BFSET_(r32,29,20,v)
    #define   GET16LGDC_CFG2_CisBlkVtotal(r16)                 _BFGET_(r16,13, 4)
    #define   SET16LGDC_CFG2_CisBlkVtotal(r16,v)               _BFSET_(r16,13, 4,v)

    #define     w32LGDC_CFG2                                   {\
            UNSG32 uCFG2_CisMatSize                            : 10;\
            UNSG32 uCFG2_CisBlkHtotal                          : 10;\
            UNSG32 uCFG2_CisBlkVtotal                          : 10;\
            UNSG32 RSVDx8_b30                                  :  2;\
          }
    union { UNSG32 u32LGDC_CFG2;
            struct w32LGDC_CFG2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG3_Hdimension(r32)                   _BFGET_(r32,11, 0)
    #define   SET32LGDC_CFG3_Hdimension(r32,v)                 _BFSET_(r32,11, 0,v)
    #define   GET16LGDC_CFG3_Hdimension(r16)                   _BFGET_(r16,11, 0)
    #define   SET16LGDC_CFG3_Hdimension(r16,v)                 _BFSET_(r16,11, 0,v)

    #define   GET32LGDC_CFG3_Vdimension(r32)                   _BFGET_(r32,23,12)
    #define   SET32LGDC_CFG3_Vdimension(r32,v)                 _BFSET_(r32,23,12,v)

    #define     w32LGDC_CFG3                                   {\
            UNSG32 uCFG3_Hdimension                            : 12;\
            UNSG32 uCFG3_Vdimension                            : 12;\
            UNSG32 RSVDxC_b24                                  :  8;\
          }
    union { UNSG32 u32LGDC_CFG3;
            struct w32LGDC_CFG3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG4_HRES(r32)                         _BFGET_(r32,11, 0)
    #define   SET32LGDC_CFG4_HRES(r32,v)                       _BFSET_(r32,11, 0,v)
    #define   GET16LGDC_CFG4_HRES(r16)                         _BFGET_(r16,11, 0)
    #define   SET16LGDC_CFG4_HRES(r16,v)                       _BFSET_(r16,11, 0,v)

    #define   GET32LGDC_CFG4_VRES(r32)                         _BFGET_(r32,23,12)
    #define   SET32LGDC_CFG4_VRES(r32,v)                       _BFSET_(r32,23,12,v)

    #define     w32LGDC_CFG4                                   {\
            UNSG32 uCFG4_HRES                                  : 12;\
            UNSG32 uCFG4_VRES                                  : 12;\
            UNSG32 RSVDx10_b24                                 :  8;\
          }
    union { UNSG32 u32LGDC_CFG4;
            struct w32LGDC_CFG4;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG5_CisBsize(r32)                     _BFGET_(r32, 8, 0)
    #define   SET32LGDC_CFG5_CisBsize(r32,v)                   _BFSET_(r32, 8, 0,v)
    #define   GET16LGDC_CFG5_CisBsize(r16)                     _BFGET_(r16, 8, 0)
    #define   SET16LGDC_CFG5_CisBsize(r16,v)                   _BFSET_(r16, 8, 0,v)

    #define   GET32LGDC_CFG5_MaxDisBlocks(r32)                 _BFGET_(r32,17, 9)
    #define   SET32LGDC_CFG5_MaxDisBlocks(r32,v)               _BFSET_(r32,17, 9,v)

    #define   GET32LGDC_CFG5_YUVmode(r32)                      _BFGET_(r32,19,18)
    #define   SET32LGDC_CFG5_YUVmode(r32,v)                    _BFSET_(r32,19,18,v)
    #define   GET16LGDC_CFG5_YUVmode(r16)                      _BFGET_(r16, 3, 2)
    #define   SET16LGDC_CFG5_YUVmode(r16,v)                    _BFSET_(r16, 3, 2,v)

    #define   GET32LGDC_CFG5_DisV4H2scan(r32)                  _BFGET_(r32,20,20)
    #define   SET32LGDC_CFG5_DisV4H2scan(r32,v)                _BFSET_(r32,20,20,v)
    #define   GET16LGDC_CFG5_DisV4H2scan(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16LGDC_CFG5_DisV4H2scan(r16,v)                _BFSET_(r16, 4, 4,v)

    #define   GET32LGDC_CFG5_LimitCbuff(r32)                   _BFGET_(r32,21,21)
    #define   SET32LGDC_CFG5_LimitCbuff(r32,v)                 _BFSET_(r32,21,21,v)
    #define   GET16LGDC_CFG5_LimitCbuff(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16LGDC_CFG5_LimitCbuff(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32LGDC_CFG5_BicubicOff(r32)                   _BFGET_(r32,23,22)
    #define   SET32LGDC_CFG5_BicubicOff(r32,v)                 _BFSET_(r32,23,22,v)
    #define   GET16LGDC_CFG5_BicubicOff(r16)                   _BFGET_(r16, 7, 6)
    #define   SET16LGDC_CFG5_BicubicOff(r16,v)                 _BFSET_(r16, 7, 6,v)

    #define     w32LGDC_CFG5                                   {\
            UNSG32 uCFG5_CisBsize                              :  9;\
            UNSG32 uCFG5_MaxDisBlocks                          :  9;\
            UNSG32 uCFG5_YUVmode                               :  2;\
            UNSG32 uCFG5_DisV4H2scan                           :  1;\
            UNSG32 uCFG5_LimitCbuff                            :  1;\
            UNSG32 uCFG5_BicubicOff                            :  2;\
            UNSG32 RSVDx14_b24                                 :  8;\
          }
    union { UNSG32 u32LGDC_CFG5;
            struct w32LGDC_CFG5;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG6_DisLumaTiles(r32)                 _BFGET_(r32, 6, 0)
    #define   SET32LGDC_CFG6_DisLumaTiles(r32,v)               _BFSET_(r32, 6, 0,v)
    #define   GET16LGDC_CFG6_DisLumaTiles(r16)                 _BFGET_(r16, 6, 0)
    #define   SET16LGDC_CFG6_DisLumaTiles(r16,v)               _BFSET_(r16, 6, 0,v)

    #define   GET32LGDC_CFG6_DisChromaTiles(r32)               _BFGET_(r32,13, 7)
    #define   SET32LGDC_CFG6_DisChromaTiles(r32,v)             _BFSET_(r32,13, 7,v)
    #define   GET16LGDC_CFG6_DisChromaTiles(r16)               _BFGET_(r16,13, 7)
    #define   SET16LGDC_CFG6_DisChromaTiles(r16,v)             _BFSET_(r16,13, 7,v)

    #define     w32LGDC_CFG6                                   {\
            UNSG32 uCFG6_DisLumaTiles                          :  7;\
            UNSG32 uCFG6_DisChromaTiles                        :  7;\
            UNSG32 RSVDx18_b14                                 : 18;\
          }
    union { UNSG32 u32LGDC_CFG6;
            struct w32LGDC_CFG6;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG7_DisBlkSize(r32)                   _BFGET_(r32,12, 0)
    #define   SET32LGDC_CFG7_DisBlkSize(r32,v)                 _BFSET_(r32,12, 0,v)
    #define   GET16LGDC_CFG7_DisBlkSize(r16)                   _BFGET_(r16,12, 0)
    #define   SET16LGDC_CFG7_DisBlkSize(r16,v)                 _BFSET_(r16,12, 0,v)

    #define   GET32LGDC_CFG7_DisBlkChromaSize(r32)             _BFGET_(r32,25,13)
    #define   SET32LGDC_CFG7_DisBlkChromaSize(r32,v)           _BFSET_(r32,25,13,v)

    #define     w32LGDC_CFG7                                   {\
            UNSG32 uCFG7_DisBlkSize                            : 13;\
            UNSG32 uCFG7_DisBlkChromaSize                      : 13;\
            UNSG32 RSVDx1C_b26                                 :  6;\
          }
    union { UNSG32 u32LGDC_CFG7;
            struct w32LGDC_CFG7;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFG8_BlankLuma(r32)                    _BFGET_(r32, 9, 0)
    #define   SET32LGDC_CFG8_BlankLuma(r32,v)                  _BFSET_(r32, 9, 0,v)
    #define   GET16LGDC_CFG8_BlankLuma(r16)                    _BFGET_(r16, 9, 0)
    #define   SET16LGDC_CFG8_BlankLuma(r16,v)                  _BFSET_(r16, 9, 0,v)

    #define   GET32LGDC_CFG8_BlankChroma(r32)                  _BFGET_(r32,19,10)
    #define   SET32LGDC_CFG8_BlankChroma(r32,v)                _BFSET_(r32,19,10,v)

    #define   GET32LGDC_CFG8_Source8bits(r32)                  _BFGET_(r32,20,20)
    #define   SET32LGDC_CFG8_Source8bits(r32,v)                _BFSET_(r32,20,20,v)
    #define   GET16LGDC_CFG8_Source8bits(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16LGDC_CFG8_Source8bits(r16,v)                _BFSET_(r16, 4, 4,v)

    #define     w32LGDC_CFG8                                   {\
            UNSG32 uCFG8_BlankLuma                             : 10;\
            UNSG32 uCFG8_BlankChroma                           : 10;\
            UNSG32 uCFG8_Source8bits                           :  1;\
            UNSG32 RSVDx20_b21                                 : 11;\
          }
    union { UNSG32 u32LGDC_CFG8;
            struct w32LGDC_CFG8;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_CFTG_start(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32LGDC_CFTG_start(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16LGDC_CFTG_start(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16LGDC_CFTG_start(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define   GET32LGDC_CFTG_clear(r32)                        _BFGET_(r32, 1, 1)
    #define   SET32LGDC_CFTG_clear(r32,v)                      _BFSET_(r32, 1, 1,v)
    #define   GET16LGDC_CFTG_clear(r16)                        _BFGET_(r16, 1, 1)
    #define   SET16LGDC_CFTG_clear(r16,v)                      _BFSET_(r16, 1, 1,v)

    #define   GET32LGDC_CFTG_clken_ctrl(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32LGDC_CFTG_clken_ctrl(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16LGDC_CFTG_clken_ctrl(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16LGDC_CFTG_clken_ctrl(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32LGDC_CFTG_clken_stall(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32LGDC_CFTG_clken_stall(r32,v)                _BFSET_(r32, 3, 3,v)
    #define   GET16LGDC_CFTG_clken_stall(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16LGDC_CFTG_clken_stall(r16,v)                _BFSET_(r16, 3, 3,v)

    #define     w32LGDC_CFTG                                   {\
            UNSG32 uCFTG_start                                 :  1;\
            UNSG32 uCFTG_clear                                 :  1;\
            UNSG32 uCFTG_clken_ctrl                            :  1;\
            UNSG32 uCFTG_clken_stall                           :  1;\
            UNSG32 RSVDx24_b4                                  : 28;\
          }
    union { UNSG32 u32LGDC_CFTG;
            struct w32LGDC_CFTG;
          };
    ///////////////////////////////////////////////////////////
              SIE_DWTG                                         ie_TG;
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_DBG0_FLAG(r32)                         _BFGET_(r32, 3, 0)
    #define   SET32LGDC_DBG0_FLAG(r32,v)                       _BFSET_(r32, 3, 0,v)
    #define   GET16LGDC_DBG0_FLAG(r16)                         _BFGET_(r16, 3, 0)
    #define   SET16LGDC_DBG0_FLAG(r16,v)                       _BFSET_(r16, 3, 0,v)

    #define   GET32LGDC_DBG0_TGERR(r32)                        _BFGET_(r32, 7, 4)
    #define   SET32LGDC_DBG0_TGERR(r32,v)                      _BFSET_(r32, 7, 4,v)
    #define   GET16LGDC_DBG0_TGERR(r16)                        _BFGET_(r16, 7, 4)
    #define   SET16LGDC_DBG0_TGERR(r16,v)                      _BFSET_(r16, 7, 4,v)

    #define     w32LGDC_DBG0                                   {\
            UNSG32 uDBG0_FLAG                                  :  4;\
            UNSG32 uDBG0_TGERR                                 :  4;\
            UNSG32 RSVDx74_b8                                  : 24;\
          }
    union { UNSG32 u32LGDC_DBG0;
            struct w32LGDC_DBG0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_DBG1_FrameStrides(r32)                 _BFGET_(r32, 8, 0)
    #define   SET32LGDC_DBG1_FrameStrides(r32,v)               _BFSET_(r32, 8, 0,v)
    #define   GET16LGDC_DBG1_FrameStrides(r16)                 _BFGET_(r16, 8, 0)
    #define   SET16LGDC_DBG1_FrameStrides(r16,v)               _BFSET_(r16, 8, 0,v)

    #define   GET32LGDC_DBG1_MinCisBlks(r32)                   _BFGET_(r32,17, 9)
    #define   SET32LGDC_DBG1_MinCisBlks(r32,v)                 _BFSET_(r32,17, 9,v)

    #define   GET32LGDC_DBG1_MaxCisBlks(r32)                   _BFGET_(r32,26,18)
    #define   SET32LGDC_DBG1_MaxCisBlks(r32,v)                 _BFSET_(r32,26,18,v)
    #define   GET16LGDC_DBG1_MaxCisBlks(r16)                   _BFGET_(r16,10, 2)
    #define   SET16LGDC_DBG1_MaxCisBlks(r16,v)                 _BFSET_(r16,10, 2,v)

    #define     w32LGDC_DBG1                                   {\
            UNSG32 uDBG1_FrameStrides                          :  9;\
            UNSG32 uDBG1_MinCisBlks                            :  9;\
            UNSG32 uDBG1_MaxCisBlks                            :  9;\
            UNSG32 RSVDx78_b27                                 :  5;\
          }
    union { UNSG32 u32LGDC_DBG1;
            struct w32LGDC_DBG1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32LGDC_DBG2_FrameCisBlks(r32)                 _BFGET_(r32,15, 0)
    #define   SET32LGDC_DBG2_FrameCisBlks(r32,v)               _BFSET_(r32,15, 0,v)
    #define   GET16LGDC_DBG2_FrameCisBlks(r16)                 _BFGET_(r16,15, 0)
    #define   SET16LGDC_DBG2_FrameCisBlks(r16,v)               _BFSET_(r16,15, 0,v)

    #define     w32LGDC_DBG2                                   {\
            UNSG32 uDBG2_FrameCisBlks                          : 16;\
            UNSG32 RSVDx7C_b16                                 : 16;\
          }
    union { UNSG32 u32LGDC_DBG2;
            struct w32LGDC_DBG2;
          };
    ///////////////////////////////////////////////////////////
    } SIE_LGDC;

    typedef union  T32LGDC_CFG0
          { UNSG32 u32;
            struct w32LGDC_CFG0;
                 } T32LGDC_CFG0;
    typedef union  T32LGDC_CFG1
          { UNSG32 u32;
            struct w32LGDC_CFG1;
                 } T32LGDC_CFG1;
    typedef union  T32LGDC_CFG2
          { UNSG32 u32;
            struct w32LGDC_CFG2;
                 } T32LGDC_CFG2;
    typedef union  T32LGDC_CFG3
          { UNSG32 u32;
            struct w32LGDC_CFG3;
                 } T32LGDC_CFG3;
    typedef union  T32LGDC_CFG4
          { UNSG32 u32;
            struct w32LGDC_CFG4;
                 } T32LGDC_CFG4;
    typedef union  T32LGDC_CFG5
          { UNSG32 u32;
            struct w32LGDC_CFG5;
                 } T32LGDC_CFG5;
    typedef union  T32LGDC_CFG6
          { UNSG32 u32;
            struct w32LGDC_CFG6;
                 } T32LGDC_CFG6;
    typedef union  T32LGDC_CFG7
          { UNSG32 u32;
            struct w32LGDC_CFG7;
                 } T32LGDC_CFG7;
    typedef union  T32LGDC_CFG8
          { UNSG32 u32;
            struct w32LGDC_CFG8;
                 } T32LGDC_CFG8;
    typedef union  T32LGDC_CFTG
          { UNSG32 u32;
            struct w32LGDC_CFTG;
                 } T32LGDC_CFTG;
    typedef union  T32LGDC_DBG0
          { UNSG32 u32;
            struct w32LGDC_DBG0;
                 } T32LGDC_DBG0;
    typedef union  T32LGDC_DBG1
          { UNSG32 u32;
            struct w32LGDC_DBG1;
                 } T32LGDC_DBG1;
    typedef union  T32LGDC_DBG2
          { UNSG32 u32;
            struct w32LGDC_DBG2;
                 } T32LGDC_DBG2;
    ///////////////////////////////////////////////////////////

    typedef union  TLGDC_CFG0
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG0;
                   };
                 } TLGDC_CFG0;
    typedef union  TLGDC_CFG1
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG1;
                   };
                 } TLGDC_CFG1;
    typedef union  TLGDC_CFG2
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG2;
                   };
                 } TLGDC_CFG2;
    typedef union  TLGDC_CFG3
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG3;
                   };
                 } TLGDC_CFG3;
    typedef union  TLGDC_CFG4
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG4;
                   };
                 } TLGDC_CFG4;
    typedef union  TLGDC_CFG5
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG5;
                   };
                 } TLGDC_CFG5;
    typedef union  TLGDC_CFG6
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG6;
                   };
                 } TLGDC_CFG6;
    typedef union  TLGDC_CFG7
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG7;
                   };
                 } TLGDC_CFG7;
    typedef union  TLGDC_CFG8
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFG8;
                   };
                 } TLGDC_CFG8;
    typedef union  TLGDC_CFTG
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_CFTG;
                   };
                 } TLGDC_CFTG;
    typedef union  TLGDC_DBG0
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_DBG0;
                   };
                 } TLGDC_DBG0;
    typedef union  TLGDC_DBG1
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_DBG1;
                   };
                 } TLGDC_DBG1;
    typedef union  TLGDC_DBG2
          { UNSG32 u32[1];
            struct {
            struct w32LGDC_DBG2;
                   };
                 } TLGDC_DBG2;

    ///////////////////////////////////////////////////////////
     SIGN32 LGDC_drvrd(SIE_LGDC *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 LGDC_drvwr(SIE_LGDC *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void LGDC_reset(SIE_LGDC *p);
     SIGN32 LGDC_cmp  (SIE_LGDC *p, SIE_LGDC *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define LGDC_check(p,pie,pfx,hLOG) LGDC_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define LGDC_print(p,    pfx,hLOG) LGDC_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: LGDC
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: lgdc.h
////////////////////////////////////////////////////////////

