//////
/// don't edit! auto-generated by docc: mpu.h
////////////////////////////////////////////////////////////
#ifndef mpu_h
#define mpu_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
///
/// $INTERFACE MnM                     biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Ctrl                 (P)
///               %unsigned 16 IdMask                    0x0
///                                    ###
///                                    * Value used to mask input ID
///                                    ###
///               %unsigned 16 IdMatch                   0x0
///                                    ###
///                                    * Value used to match input ID after masking
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_MnM
#define h_MnM (){}

    #define     RA_MnM_Ctrl                                    0x0000

    #define     BA_MnM_Ctrl_IdMask                             0x0000
    #define     B16MnM_Ctrl_IdMask                             0x0000
    #define   LSb32MnM_Ctrl_IdMask                                0
    #define   LSb16MnM_Ctrl_IdMask                                0
    #define       bMnM_Ctrl_IdMask                             16
    #define   MSK32MnM_Ctrl_IdMask                                0x0000FFFF

    #define     BA_MnM_Ctrl_IdMatch                            0x0002
    #define     B16MnM_Ctrl_IdMatch                            0x0002
    #define   LSb32MnM_Ctrl_IdMatch                               16
    #define   LSb16MnM_Ctrl_IdMatch                               0
    #define       bMnM_Ctrl_IdMatch                            16
    #define   MSK32MnM_Ctrl_IdMatch                               0xFFFF0000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_MnM {
    ///////////////////////////////////////////////////////////
    #define   GET32MnM_Ctrl_IdMask(r32)                        _BFGET_(r32,15, 0)
    #define   SET32MnM_Ctrl_IdMask(r32,v)                      _BFSET_(r32,15, 0,v)
    #define   GET16MnM_Ctrl_IdMask(r16)                        _BFGET_(r16,15, 0)
    #define   SET16MnM_Ctrl_IdMask(r16,v)                      _BFSET_(r16,15, 0,v)

    #define   GET32MnM_Ctrl_IdMatch(r32)                       _BFGET_(r32,31,16)
    #define   SET32MnM_Ctrl_IdMatch(r32,v)                     _BFSET_(r32,31,16,v)
    #define   GET16MnM_Ctrl_IdMatch(r16)                       _BFGET_(r16,15, 0)
    #define   SET16MnM_Ctrl_IdMatch(r16,v)                     _BFSET_(r16,15, 0,v)

    #define     w32MnM_Ctrl                                    {\
            UNSG32 uCtrl_IdMask                                : 16;\
            UNSG32 uCtrl_IdMatch                               : 16;\
          }
    union { UNSG32 u32MnM_Ctrl;
            struct w32MnM_Ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_MnM;

    typedef union  T32MnM_Ctrl
          { UNSG32 u32;
            struct w32MnM_Ctrl;
                 } T32MnM_Ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TMnM_Ctrl
          { UNSG32 u32[1];
            struct {
            struct w32MnM_Ctrl;
                   };
                 } TMnM_Ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 MnM_drvrd(SIE_MnM *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 MnM_drvwr(SIE_MnM *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void MnM_reset(SIE_MnM *p);
     SIGN32 MnM_cmp  (SIE_MnM *p, SIE_MnM *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define MnM_check(p,pie,pfx,hLOG) MnM_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define MnM_print(p,    pfx,hLOG) MnM_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: MnM
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SRAM                                     (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (RW)
///               %unsigned 32 Data                      0x0
///                                    ###
///                                    * 32-bit data
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAM
#define h_SRAM (){}

    #define     BA_SRAM_Data                                   0x0000
    #define     B16SRAM_Data                                   0x0000
    #define   LSb32SRAM_Data                                      0
    #define   LSb16SRAM_Data                                      0
    #define       bSRAM_Data                                   32
    #define   MSK32SRAM_Data                                      0xFFFFFFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAM {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAM_Data(r32)                              _BFGET_(r32,31, 0)
    #define   SET32SRAM_Data(r32,v)                            _BFSET_(r32,31, 0,v)

            UNSG32 u_Data                                      : 32;
    ///////////////////////////////////////////////////////////
    } SIE_SRAM;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAM_drvrd(SIE_SRAM *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAM_drvwr(SIE_SRAM *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAM_reset(SIE_SRAM *p);
     SIGN32 SRAM_cmp  (SIE_SRAM *p, SIE_SRAM *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAM_check(p,pie,pfx,hLOG) SRAM_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAM_print(p,    pfx,hLOG) SRAM_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAM
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE MPUReg                  biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 Enable               (P)
///               %unsigned 1  MPU                       0x0
///                                    ###
///                                    * 1:MPU is enabled
///                                    * 0:MPU is disabled
///                                    * Enables/disables the whole MPU.
///                                    ###
///               %unsigned 1  MPT                       0x0
///                                    ###
///                                    * 1:MPT is enabled
///                                    * 0:MPT is disabled
///                                    * When MPU is enabled, the MPUâ€™s access to MPT can be disabled/enabled
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00004 NSAID                (P)
///               %unsigned 4  FixedMPU                  0x0
///                                    ###
///                                    * The output NSAID value when MPU is disabled
///                                    ###
///               %unsigned 1  FixedMPT                  0x0
///                                    ###
///                                    * The value of MPT lookup when MPT is disabled
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x00008                      (P)
///     # 0x00008 MnMCtrl
///               $MnM                 MnMCtrl           REG      [16]
///                                    ###
///                                    * 16 M&M Controls
///                                    ###
///     @ 0x00048 NS_LUT               (P)
///               %unsigned 4  NSAID_0i                  0x0
///               %unsigned 4  NSAID_1i                  0x0
///               %unsigned 4  NSAID_2i                  0x0
///               %unsigned 4  NSAID_3i                  0x0
///               %unsigned 4  NSAID_4i                  0x0
///               %unsigned 4  NSAID_5i                  0x0
///               %unsigned 4  NSAID_6i                  0x0
///               %unsigned 4  NSAID_7i                  0x0
///     # 0x0004C NS_LUT1
///               %unsigned 4  NSAID_8i                  0x0
///               %unsigned 4  NSAID_9i                  0x0
///               %unsigned 4  NSAID_10i                 0x0
///               %unsigned 4  NSAID_11i                 0x0
///               %unsigned 4  NSAID_12i                 0x0
///               %unsigned 4  NSAID_13i                 0x0
///               %unsigned 4  NSAID_14i                 0x0
///               %unsigned 4  NSAID_15i                 0x0
///     # 0x00050 NS_LUT2
///               %unsigned 4  NSAID_16i                 0x0
///               %unsigned 4  NSAID_17i                 0x0
///               %unsigned 4  NSAID_18i                 0x0
///               %unsigned 4  NSAID_19i                 0x0
///               %unsigned 4  NSAID_20i                 0x0
///               %unsigned 4  NSAID_21i                 0x0
///               %unsigned 4  NSAID_22i                 0x0
///               %unsigned 4  NSAID_23i                 0x0
///     # 0x00054 NS_LUT3
///               %unsigned 4  NSAID_24i                 0x0
///               %unsigned 4  NSAID_25i                 0x0
///               %unsigned 4  NSAID_26i                 0x0
///               %unsigned 4  NSAID_27i                 0x0
///               %unsigned 4  NSAID_28i                 0x0
///               %unsigned 4  NSAID_29i                 0x0
///               %unsigned 4  NSAID_30i                 0x0
///               %unsigned 4  NSAID_31i                 0x0
///                                    ###
///                                    * 32 NSAIDs in LUT
///                                    ###
///     @ 0x00058 S_LUT                (P)
///               %unsigned 16 AXPROT                    0xFFFF
///                                    ###
///                                    * 16 AxProt[1] possible output in LUT.
///                                    * Upper 16 bits are reserved.
///                                    * Note:
///                                    * As per AXI Specification
///                                    * AxProt[1] = 0 is secure, AxProt[1] = 1 is non-secure.
///                                    ###
///               %unsigned 16 AXPROT_RSVD               0xFFFF
///                                    ###
///                                    * Reserved
///                                    ###
///     @ 0x0005C Cache                (RW)
///               %unsigned 1  Invalidate                0x0
///                                    ###
///                                    * Invalidate the cached MPT values.
///                                    * Write one to invalidate the cache.
///                                    * Bit will be cleared by HW when cache invalidate operation completes.
///                                    ###
///               %%        31         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      96B, bits:     680b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_MPUReg
#define h_MPUReg (){}

    #define     RA_MPUReg_Enable                               0x0000

    #define     BA_MPUReg_Enable_MPU                           0x0000
    #define     B16MPUReg_Enable_MPU                           0x0000
    #define   LSb32MPUReg_Enable_MPU                              0
    #define   LSb16MPUReg_Enable_MPU                              0
    #define       bMPUReg_Enable_MPU                           1
    #define   MSK32MPUReg_Enable_MPU                              0x00000001

    #define     BA_MPUReg_Enable_MPT                           0x0000
    #define     B16MPUReg_Enable_MPT                           0x0000
    #define   LSb32MPUReg_Enable_MPT                              1
    #define   LSb16MPUReg_Enable_MPT                              1
    #define       bMPUReg_Enable_MPT                           1
    #define   MSK32MPUReg_Enable_MPT                              0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_MPUReg_NSAID                                0x0004

    #define     BA_MPUReg_NSAID_FixedMPU                       0x0004
    #define     B16MPUReg_NSAID_FixedMPU                       0x0004
    #define   LSb32MPUReg_NSAID_FixedMPU                          0
    #define   LSb16MPUReg_NSAID_FixedMPU                          0
    #define       bMPUReg_NSAID_FixedMPU                       4
    #define   MSK32MPUReg_NSAID_FixedMPU                          0x0000000F

    #define     BA_MPUReg_NSAID_FixedMPT                       0x0004
    #define     B16MPUReg_NSAID_FixedMPT                       0x0004
    #define   LSb32MPUReg_NSAID_FixedMPT                          4
    #define   LSb16MPUReg_NSAID_FixedMPT                          4
    #define       bMPUReg_NSAID_FixedMPT                       1
    #define   MSK32MPUReg_NSAID_FixedMPT                          0x00000010
    ///////////////////////////////////////////////////////////
    #define     RA_MPUReg_MnMCtrl                              0x0008
    ///////////////////////////////////////////////////////////
    #define     RA_MPUReg_NS_LUT                               0x0048

    #define     BA_MPUReg_NS_LUT_NSAID_0i                      0x0048
    #define     B16MPUReg_NS_LUT_NSAID_0i                      0x0048
    #define   LSb32MPUReg_NS_LUT_NSAID_0i                         0
    #define   LSb16MPUReg_NS_LUT_NSAID_0i                         0
    #define       bMPUReg_NS_LUT_NSAID_0i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_0i                         0x0000000F

    #define     BA_MPUReg_NS_LUT_NSAID_1i                      0x0048
    #define     B16MPUReg_NS_LUT_NSAID_1i                      0x0048
    #define   LSb32MPUReg_NS_LUT_NSAID_1i                         4
    #define   LSb16MPUReg_NS_LUT_NSAID_1i                         4
    #define       bMPUReg_NS_LUT_NSAID_1i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_1i                         0x000000F0

    #define     BA_MPUReg_NS_LUT_NSAID_2i                      0x0049
    #define     B16MPUReg_NS_LUT_NSAID_2i                      0x0048
    #define   LSb32MPUReg_NS_LUT_NSAID_2i                         8
    #define   LSb16MPUReg_NS_LUT_NSAID_2i                         8
    #define       bMPUReg_NS_LUT_NSAID_2i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_2i                         0x00000F00

    #define     BA_MPUReg_NS_LUT_NSAID_3i                      0x0049
    #define     B16MPUReg_NS_LUT_NSAID_3i                      0x0048
    #define   LSb32MPUReg_NS_LUT_NSAID_3i                         12
    #define   LSb16MPUReg_NS_LUT_NSAID_3i                         12
    #define       bMPUReg_NS_LUT_NSAID_3i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_3i                         0x0000F000

    #define     BA_MPUReg_NS_LUT_NSAID_4i                      0x004A
    #define     B16MPUReg_NS_LUT_NSAID_4i                      0x004A
    #define   LSb32MPUReg_NS_LUT_NSAID_4i                         16
    #define   LSb16MPUReg_NS_LUT_NSAID_4i                         0
    #define       bMPUReg_NS_LUT_NSAID_4i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_4i                         0x000F0000

    #define     BA_MPUReg_NS_LUT_NSAID_5i                      0x004A
    #define     B16MPUReg_NS_LUT_NSAID_5i                      0x004A
    #define   LSb32MPUReg_NS_LUT_NSAID_5i                         20
    #define   LSb16MPUReg_NS_LUT_NSAID_5i                         4
    #define       bMPUReg_NS_LUT_NSAID_5i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_5i                         0x00F00000

    #define     BA_MPUReg_NS_LUT_NSAID_6i                      0x004B
    #define     B16MPUReg_NS_LUT_NSAID_6i                      0x004A
    #define   LSb32MPUReg_NS_LUT_NSAID_6i                         24
    #define   LSb16MPUReg_NS_LUT_NSAID_6i                         8
    #define       bMPUReg_NS_LUT_NSAID_6i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_6i                         0x0F000000

    #define     BA_MPUReg_NS_LUT_NSAID_7i                      0x004B
    #define     B16MPUReg_NS_LUT_NSAID_7i                      0x004A
    #define   LSb32MPUReg_NS_LUT_NSAID_7i                         28
    #define   LSb16MPUReg_NS_LUT_NSAID_7i                         12
    #define       bMPUReg_NS_LUT_NSAID_7i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_7i                         0xF0000000

    #define     RA_MPUReg_NS_LUT1                              0x004C

    #define     BA_MPUReg_NS_LUT_NSAID_8i                      0x004C
    #define     B16MPUReg_NS_LUT_NSAID_8i                      0x004C
    #define   LSb32MPUReg_NS_LUT_NSAID_8i                         0
    #define   LSb16MPUReg_NS_LUT_NSAID_8i                         0
    #define       bMPUReg_NS_LUT_NSAID_8i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_8i                         0x0000000F

    #define     BA_MPUReg_NS_LUT_NSAID_9i                      0x004C
    #define     B16MPUReg_NS_LUT_NSAID_9i                      0x004C
    #define   LSb32MPUReg_NS_LUT_NSAID_9i                         4
    #define   LSb16MPUReg_NS_LUT_NSAID_9i                         4
    #define       bMPUReg_NS_LUT_NSAID_9i                      4
    #define   MSK32MPUReg_NS_LUT_NSAID_9i                         0x000000F0

    #define     BA_MPUReg_NS_LUT_NSAID_10i                     0x004D
    #define     B16MPUReg_NS_LUT_NSAID_10i                     0x004C
    #define   LSb32MPUReg_NS_LUT_NSAID_10i                        8
    #define   LSb16MPUReg_NS_LUT_NSAID_10i                        8
    #define       bMPUReg_NS_LUT_NSAID_10i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_10i                        0x00000F00

    #define     BA_MPUReg_NS_LUT_NSAID_11i                     0x004D
    #define     B16MPUReg_NS_LUT_NSAID_11i                     0x004C
    #define   LSb32MPUReg_NS_LUT_NSAID_11i                        12
    #define   LSb16MPUReg_NS_LUT_NSAID_11i                        12
    #define       bMPUReg_NS_LUT_NSAID_11i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_11i                        0x0000F000

    #define     BA_MPUReg_NS_LUT_NSAID_12i                     0x004E
    #define     B16MPUReg_NS_LUT_NSAID_12i                     0x004E
    #define   LSb32MPUReg_NS_LUT_NSAID_12i                        16
    #define   LSb16MPUReg_NS_LUT_NSAID_12i                        0
    #define       bMPUReg_NS_LUT_NSAID_12i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_12i                        0x000F0000

    #define     BA_MPUReg_NS_LUT_NSAID_13i                     0x004E
    #define     B16MPUReg_NS_LUT_NSAID_13i                     0x004E
    #define   LSb32MPUReg_NS_LUT_NSAID_13i                        20
    #define   LSb16MPUReg_NS_LUT_NSAID_13i                        4
    #define       bMPUReg_NS_LUT_NSAID_13i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_13i                        0x00F00000

    #define     BA_MPUReg_NS_LUT_NSAID_14i                     0x004F
    #define     B16MPUReg_NS_LUT_NSAID_14i                     0x004E
    #define   LSb32MPUReg_NS_LUT_NSAID_14i                        24
    #define   LSb16MPUReg_NS_LUT_NSAID_14i                        8
    #define       bMPUReg_NS_LUT_NSAID_14i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_14i                        0x0F000000

    #define     BA_MPUReg_NS_LUT_NSAID_15i                     0x004F
    #define     B16MPUReg_NS_LUT_NSAID_15i                     0x004E
    #define   LSb32MPUReg_NS_LUT_NSAID_15i                        28
    #define   LSb16MPUReg_NS_LUT_NSAID_15i                        12
    #define       bMPUReg_NS_LUT_NSAID_15i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_15i                        0xF0000000

    #define     RA_MPUReg_NS_LUT2                              0x0050

    #define     BA_MPUReg_NS_LUT_NSAID_16i                     0x0050
    #define     B16MPUReg_NS_LUT_NSAID_16i                     0x0050
    #define   LSb32MPUReg_NS_LUT_NSAID_16i                        0
    #define   LSb16MPUReg_NS_LUT_NSAID_16i                        0
    #define       bMPUReg_NS_LUT_NSAID_16i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_16i                        0x0000000F

    #define     BA_MPUReg_NS_LUT_NSAID_17i                     0x0050
    #define     B16MPUReg_NS_LUT_NSAID_17i                     0x0050
    #define   LSb32MPUReg_NS_LUT_NSAID_17i                        4
    #define   LSb16MPUReg_NS_LUT_NSAID_17i                        4
    #define       bMPUReg_NS_LUT_NSAID_17i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_17i                        0x000000F0

    #define     BA_MPUReg_NS_LUT_NSAID_18i                     0x0051
    #define     B16MPUReg_NS_LUT_NSAID_18i                     0x0050
    #define   LSb32MPUReg_NS_LUT_NSAID_18i                        8
    #define   LSb16MPUReg_NS_LUT_NSAID_18i                        8
    #define       bMPUReg_NS_LUT_NSAID_18i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_18i                        0x00000F00

    #define     BA_MPUReg_NS_LUT_NSAID_19i                     0x0051
    #define     B16MPUReg_NS_LUT_NSAID_19i                     0x0050
    #define   LSb32MPUReg_NS_LUT_NSAID_19i                        12
    #define   LSb16MPUReg_NS_LUT_NSAID_19i                        12
    #define       bMPUReg_NS_LUT_NSAID_19i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_19i                        0x0000F000

    #define     BA_MPUReg_NS_LUT_NSAID_20i                     0x0052
    #define     B16MPUReg_NS_LUT_NSAID_20i                     0x0052
    #define   LSb32MPUReg_NS_LUT_NSAID_20i                        16
    #define   LSb16MPUReg_NS_LUT_NSAID_20i                        0
    #define       bMPUReg_NS_LUT_NSAID_20i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_20i                        0x000F0000

    #define     BA_MPUReg_NS_LUT_NSAID_21i                     0x0052
    #define     B16MPUReg_NS_LUT_NSAID_21i                     0x0052
    #define   LSb32MPUReg_NS_LUT_NSAID_21i                        20
    #define   LSb16MPUReg_NS_LUT_NSAID_21i                        4
    #define       bMPUReg_NS_LUT_NSAID_21i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_21i                        0x00F00000

    #define     BA_MPUReg_NS_LUT_NSAID_22i                     0x0053
    #define     B16MPUReg_NS_LUT_NSAID_22i                     0x0052
    #define   LSb32MPUReg_NS_LUT_NSAID_22i                        24
    #define   LSb16MPUReg_NS_LUT_NSAID_22i                        8
    #define       bMPUReg_NS_LUT_NSAID_22i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_22i                        0x0F000000

    #define     BA_MPUReg_NS_LUT_NSAID_23i                     0x0053
    #define     B16MPUReg_NS_LUT_NSAID_23i                     0x0052
    #define   LSb32MPUReg_NS_LUT_NSAID_23i                        28
    #define   LSb16MPUReg_NS_LUT_NSAID_23i                        12
    #define       bMPUReg_NS_LUT_NSAID_23i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_23i                        0xF0000000

    #define     RA_MPUReg_NS_LUT3                              0x0054

    #define     BA_MPUReg_NS_LUT_NSAID_24i                     0x0054
    #define     B16MPUReg_NS_LUT_NSAID_24i                     0x0054
    #define   LSb32MPUReg_NS_LUT_NSAID_24i                        0
    #define   LSb16MPUReg_NS_LUT_NSAID_24i                        0
    #define       bMPUReg_NS_LUT_NSAID_24i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_24i                        0x0000000F

    #define     BA_MPUReg_NS_LUT_NSAID_25i                     0x0054
    #define     B16MPUReg_NS_LUT_NSAID_25i                     0x0054
    #define   LSb32MPUReg_NS_LUT_NSAID_25i                        4
    #define   LSb16MPUReg_NS_LUT_NSAID_25i                        4
    #define       bMPUReg_NS_LUT_NSAID_25i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_25i                        0x000000F0

    #define     BA_MPUReg_NS_LUT_NSAID_26i                     0x0055
    #define     B16MPUReg_NS_LUT_NSAID_26i                     0x0054
    #define   LSb32MPUReg_NS_LUT_NSAID_26i                        8
    #define   LSb16MPUReg_NS_LUT_NSAID_26i                        8
    #define       bMPUReg_NS_LUT_NSAID_26i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_26i                        0x00000F00

    #define     BA_MPUReg_NS_LUT_NSAID_27i                     0x0055
    #define     B16MPUReg_NS_LUT_NSAID_27i                     0x0054
    #define   LSb32MPUReg_NS_LUT_NSAID_27i                        12
    #define   LSb16MPUReg_NS_LUT_NSAID_27i                        12
    #define       bMPUReg_NS_LUT_NSAID_27i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_27i                        0x0000F000

    #define     BA_MPUReg_NS_LUT_NSAID_28i                     0x0056
    #define     B16MPUReg_NS_LUT_NSAID_28i                     0x0056
    #define   LSb32MPUReg_NS_LUT_NSAID_28i                        16
    #define   LSb16MPUReg_NS_LUT_NSAID_28i                        0
    #define       bMPUReg_NS_LUT_NSAID_28i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_28i                        0x000F0000

    #define     BA_MPUReg_NS_LUT_NSAID_29i                     0x0056
    #define     B16MPUReg_NS_LUT_NSAID_29i                     0x0056
    #define   LSb32MPUReg_NS_LUT_NSAID_29i                        20
    #define   LSb16MPUReg_NS_LUT_NSAID_29i                        4
    #define       bMPUReg_NS_LUT_NSAID_29i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_29i                        0x00F00000

    #define     BA_MPUReg_NS_LUT_NSAID_30i                     0x0057
    #define     B16MPUReg_NS_LUT_NSAID_30i                     0x0056
    #define   LSb32MPUReg_NS_LUT_NSAID_30i                        24
    #define   LSb16MPUReg_NS_LUT_NSAID_30i                        8
    #define       bMPUReg_NS_LUT_NSAID_30i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_30i                        0x0F000000

    #define     BA_MPUReg_NS_LUT_NSAID_31i                     0x0057
    #define     B16MPUReg_NS_LUT_NSAID_31i                     0x0056
    #define   LSb32MPUReg_NS_LUT_NSAID_31i                        28
    #define   LSb16MPUReg_NS_LUT_NSAID_31i                        12
    #define       bMPUReg_NS_LUT_NSAID_31i                     4
    #define   MSK32MPUReg_NS_LUT_NSAID_31i                        0xF0000000
    ///////////////////////////////////////////////////////////
    #define     RA_MPUReg_S_LUT                                0x0058

    #define     BA_MPUReg_S_LUT_AXPROT                         0x0058
    #define     B16MPUReg_S_LUT_AXPROT                         0x0058
    #define   LSb32MPUReg_S_LUT_AXPROT                            0
    #define   LSb16MPUReg_S_LUT_AXPROT                            0
    #define       bMPUReg_S_LUT_AXPROT                         16
    #define   MSK32MPUReg_S_LUT_AXPROT                            0x0000FFFF

    #define     BA_MPUReg_S_LUT_AXPROT_RSVD                    0x005A
    #define     B16MPUReg_S_LUT_AXPROT_RSVD                    0x005A
    #define   LSb32MPUReg_S_LUT_AXPROT_RSVD                       16
    #define   LSb16MPUReg_S_LUT_AXPROT_RSVD                       0
    #define       bMPUReg_S_LUT_AXPROT_RSVD                    16
    #define   MSK32MPUReg_S_LUT_AXPROT_RSVD                       0xFFFF0000
    ///////////////////////////////////////////////////////////
    #define     RA_MPUReg_Cache                                0x005C

    #define     BA_MPUReg_Cache_Invalidate                     0x005C
    #define     B16MPUReg_Cache_Invalidate                     0x005C
    #define   LSb32MPUReg_Cache_Invalidate                        0
    #define   LSb16MPUReg_Cache_Invalidate                        0
    #define       bMPUReg_Cache_Invalidate                     1
    #define   MSK32MPUReg_Cache_Invalidate                        0x00000001
    ///////////////////////////////////////////////////////////

    typedef struct SIE_MPUReg {
    ///////////////////////////////////////////////////////////
    #define   GET32MPUReg_Enable_MPU(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32MPUReg_Enable_MPU(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16MPUReg_Enable_MPU(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16MPUReg_Enable_MPU(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define   GET32MPUReg_Enable_MPT(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32MPUReg_Enable_MPT(r32,v)                    _BFSET_(r32, 1, 1,v)
    #define   GET16MPUReg_Enable_MPT(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16MPUReg_Enable_MPT(r16,v)                    _BFSET_(r16, 1, 1,v)

    #define     w32MPUReg_Enable                               {\
            UNSG32 uEnable_MPU                                 :  1;\
            UNSG32 uEnable_MPT                                 :  1;\
            UNSG32 RSVDx0_b2                                   : 30;\
          }
    union { UNSG32 u32MPUReg_Enable;
            struct w32MPUReg_Enable;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MPUReg_NSAID_FixedMPU(r32)                  _BFGET_(r32, 3, 0)
    #define   SET32MPUReg_NSAID_FixedMPU(r32,v)                _BFSET_(r32, 3, 0,v)
    #define   GET16MPUReg_NSAID_FixedMPU(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NSAID_FixedMPU(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NSAID_FixedMPT(r32)                  _BFGET_(r32, 4, 4)
    #define   SET32MPUReg_NSAID_FixedMPT(r32,v)                _BFSET_(r32, 4, 4,v)
    #define   GET16MPUReg_NSAID_FixedMPT(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16MPUReg_NSAID_FixedMPT(r16,v)                _BFSET_(r16, 4, 4,v)

    #define     w32MPUReg_NSAID                                {\
            UNSG32 uNSAID_FixedMPU                             :  4;\
            UNSG32 uNSAID_FixedMPT                             :  1;\
            UNSG32 RSVDx4_b5                                   : 27;\
          }
    union { UNSG32 u32MPUReg_NSAID;
            struct w32MPUReg_NSAID;
          };
    ///////////////////////////////////////////////////////////
              SIE_MnM                                          ie_MnMCtrl[16];
    ///////////////////////////////////////////////////////////
    #define   GET32MPUReg_NS_LUT_NSAID_0i(r32)                 _BFGET_(r32, 3, 0)
    #define   SET32MPUReg_NS_LUT_NSAID_0i(r32,v)               _BFSET_(r32, 3, 0,v)
    #define   GET16MPUReg_NS_LUT_NSAID_0i(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_0i(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_1i(r32)                 _BFGET_(r32, 7, 4)
    #define   SET32MPUReg_NS_LUT_NSAID_1i(r32,v)               _BFSET_(r32, 7, 4,v)
    #define   GET16MPUReg_NS_LUT_NSAID_1i(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_1i(r16,v)               _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_2i(r32)                 _BFGET_(r32,11, 8)
    #define   SET32MPUReg_NS_LUT_NSAID_2i(r32,v)               _BFSET_(r32,11, 8,v)
    #define   GET16MPUReg_NS_LUT_NSAID_2i(r16)                 _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_2i(r16,v)               _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_3i(r32)                 _BFGET_(r32,15,12)
    #define   SET32MPUReg_NS_LUT_NSAID_3i(r32,v)               _BFSET_(r32,15,12,v)
    #define   GET16MPUReg_NS_LUT_NSAID_3i(r16)                 _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_3i(r16,v)               _BFSET_(r16,15,12,v)

    #define   GET32MPUReg_NS_LUT_NSAID_4i(r32)                 _BFGET_(r32,19,16)
    #define   SET32MPUReg_NS_LUT_NSAID_4i(r32,v)               _BFSET_(r32,19,16,v)
    #define   GET16MPUReg_NS_LUT_NSAID_4i(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_4i(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_5i(r32)                 _BFGET_(r32,23,20)
    #define   SET32MPUReg_NS_LUT_NSAID_5i(r32,v)               _BFSET_(r32,23,20,v)
    #define   GET16MPUReg_NS_LUT_NSAID_5i(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_5i(r16,v)               _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_6i(r32)                 _BFGET_(r32,27,24)
    #define   SET32MPUReg_NS_LUT_NSAID_6i(r32,v)               _BFSET_(r32,27,24,v)
    #define   GET16MPUReg_NS_LUT_NSAID_6i(r16)                 _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_6i(r16,v)               _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_7i(r32)                 _BFGET_(r32,31,28)
    #define   SET32MPUReg_NS_LUT_NSAID_7i(r32,v)               _BFSET_(r32,31,28,v)
    #define   GET16MPUReg_NS_LUT_NSAID_7i(r16)                 _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_7i(r16,v)               _BFSET_(r16,15,12,v)

    #define     w32MPUReg_NS_LUT                               {\
            UNSG32 uNS_LUT_NSAID_0i                            :  4;\
            UNSG32 uNS_LUT_NSAID_1i                            :  4;\
            UNSG32 uNS_LUT_NSAID_2i                            :  4;\
            UNSG32 uNS_LUT_NSAID_3i                            :  4;\
            UNSG32 uNS_LUT_NSAID_4i                            :  4;\
            UNSG32 uNS_LUT_NSAID_5i                            :  4;\
            UNSG32 uNS_LUT_NSAID_6i                            :  4;\
            UNSG32 uNS_LUT_NSAID_7i                            :  4;\
          }
    union { UNSG32 u32MPUReg_NS_LUT;
            struct w32MPUReg_NS_LUT;
          };
    #define   GET32MPUReg_NS_LUT_NSAID_8i(r32)                 _BFGET_(r32, 3, 0)
    #define   SET32MPUReg_NS_LUT_NSAID_8i(r32,v)               _BFSET_(r32, 3, 0,v)
    #define   GET16MPUReg_NS_LUT_NSAID_8i(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_8i(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_9i(r32)                 _BFGET_(r32, 7, 4)
    #define   SET32MPUReg_NS_LUT_NSAID_9i(r32,v)               _BFSET_(r32, 7, 4,v)
    #define   GET16MPUReg_NS_LUT_NSAID_9i(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_9i(r16,v)               _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_10i(r32)                _BFGET_(r32,11, 8)
    #define   SET32MPUReg_NS_LUT_NSAID_10i(r32,v)              _BFSET_(r32,11, 8,v)
    #define   GET16MPUReg_NS_LUT_NSAID_10i(r16)                _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_10i(r16,v)              _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_11i(r32)                _BFGET_(r32,15,12)
    #define   SET32MPUReg_NS_LUT_NSAID_11i(r32,v)              _BFSET_(r32,15,12,v)
    #define   GET16MPUReg_NS_LUT_NSAID_11i(r16)                _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_11i(r16,v)              _BFSET_(r16,15,12,v)

    #define   GET32MPUReg_NS_LUT_NSAID_12i(r32)                _BFGET_(r32,19,16)
    #define   SET32MPUReg_NS_LUT_NSAID_12i(r32,v)              _BFSET_(r32,19,16,v)
    #define   GET16MPUReg_NS_LUT_NSAID_12i(r16)                _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_12i(r16,v)              _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_13i(r32)                _BFGET_(r32,23,20)
    #define   SET32MPUReg_NS_LUT_NSAID_13i(r32,v)              _BFSET_(r32,23,20,v)
    #define   GET16MPUReg_NS_LUT_NSAID_13i(r16)                _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_13i(r16,v)              _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_14i(r32)                _BFGET_(r32,27,24)
    #define   SET32MPUReg_NS_LUT_NSAID_14i(r32,v)              _BFSET_(r32,27,24,v)
    #define   GET16MPUReg_NS_LUT_NSAID_14i(r16)                _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_14i(r16,v)              _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_15i(r32)                _BFGET_(r32,31,28)
    #define   SET32MPUReg_NS_LUT_NSAID_15i(r32,v)              _BFSET_(r32,31,28,v)
    #define   GET16MPUReg_NS_LUT_NSAID_15i(r16)                _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_15i(r16,v)              _BFSET_(r16,15,12,v)

    #define     w32MPUReg_NS_LUT1                              {\
            UNSG32 uNS_LUT_NSAID_8i                            :  4;\
            UNSG32 uNS_LUT_NSAID_9i                            :  4;\
            UNSG32 uNS_LUT_NSAID_10i                           :  4;\
            UNSG32 uNS_LUT_NSAID_11i                           :  4;\
            UNSG32 uNS_LUT_NSAID_12i                           :  4;\
            UNSG32 uNS_LUT_NSAID_13i                           :  4;\
            UNSG32 uNS_LUT_NSAID_14i                           :  4;\
            UNSG32 uNS_LUT_NSAID_15i                           :  4;\
          }
    union { UNSG32 u32MPUReg_NS_LUT1;
            struct w32MPUReg_NS_LUT1;
          };
    #define   GET32MPUReg_NS_LUT_NSAID_16i(r32)                _BFGET_(r32, 3, 0)
    #define   SET32MPUReg_NS_LUT_NSAID_16i(r32,v)              _BFSET_(r32, 3, 0,v)
    #define   GET16MPUReg_NS_LUT_NSAID_16i(r16)                _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_16i(r16,v)              _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_17i(r32)                _BFGET_(r32, 7, 4)
    #define   SET32MPUReg_NS_LUT_NSAID_17i(r32,v)              _BFSET_(r32, 7, 4,v)
    #define   GET16MPUReg_NS_LUT_NSAID_17i(r16)                _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_17i(r16,v)              _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_18i(r32)                _BFGET_(r32,11, 8)
    #define   SET32MPUReg_NS_LUT_NSAID_18i(r32,v)              _BFSET_(r32,11, 8,v)
    #define   GET16MPUReg_NS_LUT_NSAID_18i(r16)                _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_18i(r16,v)              _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_19i(r32)                _BFGET_(r32,15,12)
    #define   SET32MPUReg_NS_LUT_NSAID_19i(r32,v)              _BFSET_(r32,15,12,v)
    #define   GET16MPUReg_NS_LUT_NSAID_19i(r16)                _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_19i(r16,v)              _BFSET_(r16,15,12,v)

    #define   GET32MPUReg_NS_LUT_NSAID_20i(r32)                _BFGET_(r32,19,16)
    #define   SET32MPUReg_NS_LUT_NSAID_20i(r32,v)              _BFSET_(r32,19,16,v)
    #define   GET16MPUReg_NS_LUT_NSAID_20i(r16)                _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_20i(r16,v)              _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_21i(r32)                _BFGET_(r32,23,20)
    #define   SET32MPUReg_NS_LUT_NSAID_21i(r32,v)              _BFSET_(r32,23,20,v)
    #define   GET16MPUReg_NS_LUT_NSAID_21i(r16)                _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_21i(r16,v)              _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_22i(r32)                _BFGET_(r32,27,24)
    #define   SET32MPUReg_NS_LUT_NSAID_22i(r32,v)              _BFSET_(r32,27,24,v)
    #define   GET16MPUReg_NS_LUT_NSAID_22i(r16)                _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_22i(r16,v)              _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_23i(r32)                _BFGET_(r32,31,28)
    #define   SET32MPUReg_NS_LUT_NSAID_23i(r32,v)              _BFSET_(r32,31,28,v)
    #define   GET16MPUReg_NS_LUT_NSAID_23i(r16)                _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_23i(r16,v)              _BFSET_(r16,15,12,v)

    #define     w32MPUReg_NS_LUT2                              {\
            UNSG32 uNS_LUT_NSAID_16i                           :  4;\
            UNSG32 uNS_LUT_NSAID_17i                           :  4;\
            UNSG32 uNS_LUT_NSAID_18i                           :  4;\
            UNSG32 uNS_LUT_NSAID_19i                           :  4;\
            UNSG32 uNS_LUT_NSAID_20i                           :  4;\
            UNSG32 uNS_LUT_NSAID_21i                           :  4;\
            UNSG32 uNS_LUT_NSAID_22i                           :  4;\
            UNSG32 uNS_LUT_NSAID_23i                           :  4;\
          }
    union { UNSG32 u32MPUReg_NS_LUT2;
            struct w32MPUReg_NS_LUT2;
          };
    #define   GET32MPUReg_NS_LUT_NSAID_24i(r32)                _BFGET_(r32, 3, 0)
    #define   SET32MPUReg_NS_LUT_NSAID_24i(r32,v)              _BFSET_(r32, 3, 0,v)
    #define   GET16MPUReg_NS_LUT_NSAID_24i(r16)                _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_24i(r16,v)              _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_25i(r32)                _BFGET_(r32, 7, 4)
    #define   SET32MPUReg_NS_LUT_NSAID_25i(r32,v)              _BFSET_(r32, 7, 4,v)
    #define   GET16MPUReg_NS_LUT_NSAID_25i(r16)                _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_25i(r16,v)              _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_26i(r32)                _BFGET_(r32,11, 8)
    #define   SET32MPUReg_NS_LUT_NSAID_26i(r32,v)              _BFSET_(r32,11, 8,v)
    #define   GET16MPUReg_NS_LUT_NSAID_26i(r16)                _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_26i(r16,v)              _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_27i(r32)                _BFGET_(r32,15,12)
    #define   SET32MPUReg_NS_LUT_NSAID_27i(r32,v)              _BFSET_(r32,15,12,v)
    #define   GET16MPUReg_NS_LUT_NSAID_27i(r16)                _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_27i(r16,v)              _BFSET_(r16,15,12,v)

    #define   GET32MPUReg_NS_LUT_NSAID_28i(r32)                _BFGET_(r32,19,16)
    #define   SET32MPUReg_NS_LUT_NSAID_28i(r32,v)              _BFSET_(r32,19,16,v)
    #define   GET16MPUReg_NS_LUT_NSAID_28i(r16)                _BFGET_(r16, 3, 0)
    #define   SET16MPUReg_NS_LUT_NSAID_28i(r16,v)              _BFSET_(r16, 3, 0,v)

    #define   GET32MPUReg_NS_LUT_NSAID_29i(r32)                _BFGET_(r32,23,20)
    #define   SET32MPUReg_NS_LUT_NSAID_29i(r32,v)              _BFSET_(r32,23,20,v)
    #define   GET16MPUReg_NS_LUT_NSAID_29i(r16)                _BFGET_(r16, 7, 4)
    #define   SET16MPUReg_NS_LUT_NSAID_29i(r16,v)              _BFSET_(r16, 7, 4,v)

    #define   GET32MPUReg_NS_LUT_NSAID_30i(r32)                _BFGET_(r32,27,24)
    #define   SET32MPUReg_NS_LUT_NSAID_30i(r32,v)              _BFSET_(r32,27,24,v)
    #define   GET16MPUReg_NS_LUT_NSAID_30i(r16)                _BFGET_(r16,11, 8)
    #define   SET16MPUReg_NS_LUT_NSAID_30i(r16,v)              _BFSET_(r16,11, 8,v)

    #define   GET32MPUReg_NS_LUT_NSAID_31i(r32)                _BFGET_(r32,31,28)
    #define   SET32MPUReg_NS_LUT_NSAID_31i(r32,v)              _BFSET_(r32,31,28,v)
    #define   GET16MPUReg_NS_LUT_NSAID_31i(r16)                _BFGET_(r16,15,12)
    #define   SET16MPUReg_NS_LUT_NSAID_31i(r16,v)              _BFSET_(r16,15,12,v)

    #define     w32MPUReg_NS_LUT3                              {\
            UNSG32 uNS_LUT_NSAID_24i                           :  4;\
            UNSG32 uNS_LUT_NSAID_25i                           :  4;\
            UNSG32 uNS_LUT_NSAID_26i                           :  4;\
            UNSG32 uNS_LUT_NSAID_27i                           :  4;\
            UNSG32 uNS_LUT_NSAID_28i                           :  4;\
            UNSG32 uNS_LUT_NSAID_29i                           :  4;\
            UNSG32 uNS_LUT_NSAID_30i                           :  4;\
            UNSG32 uNS_LUT_NSAID_31i                           :  4;\
          }
    union { UNSG32 u32MPUReg_NS_LUT3;
            struct w32MPUReg_NS_LUT3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MPUReg_S_LUT_AXPROT(r32)                    _BFGET_(r32,15, 0)
    #define   SET32MPUReg_S_LUT_AXPROT(r32,v)                  _BFSET_(r32,15, 0,v)
    #define   GET16MPUReg_S_LUT_AXPROT(r16)                    _BFGET_(r16,15, 0)
    #define   SET16MPUReg_S_LUT_AXPROT(r16,v)                  _BFSET_(r16,15, 0,v)

    #define   GET32MPUReg_S_LUT_AXPROT_RSVD(r32)               _BFGET_(r32,31,16)
    #define   SET32MPUReg_S_LUT_AXPROT_RSVD(r32,v)             _BFSET_(r32,31,16,v)
    #define   GET16MPUReg_S_LUT_AXPROT_RSVD(r16)               _BFGET_(r16,15, 0)
    #define   SET16MPUReg_S_LUT_AXPROT_RSVD(r16,v)             _BFSET_(r16,15, 0,v)

    #define     w32MPUReg_S_LUT                                {\
            UNSG32 uS_LUT_AXPROT                               : 16;\
            UNSG32 uS_LUT_AXPROT_RSVD                          : 16;\
          }
    union { UNSG32 u32MPUReg_S_LUT;
            struct w32MPUReg_S_LUT;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MPUReg_Cache_Invalidate(r32)                _BFGET_(r32, 0, 0)
    #define   SET32MPUReg_Cache_Invalidate(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16MPUReg_Cache_Invalidate(r16)                _BFGET_(r16, 0, 0)
    #define   SET16MPUReg_Cache_Invalidate(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32MPUReg_Cache                                {\
            UNSG32 uCache_Invalidate                           :  1;\
            UNSG32 RSVDx5C_b1                                  : 31;\
          }
    union { UNSG32 u32MPUReg_Cache;
            struct w32MPUReg_Cache;
          };
    ///////////////////////////////////////////////////////////
    } SIE_MPUReg;

    typedef union  T32MPUReg_Enable
          { UNSG32 u32;
            struct w32MPUReg_Enable;
                 } T32MPUReg_Enable;
    typedef union  T32MPUReg_NSAID
          { UNSG32 u32;
            struct w32MPUReg_NSAID;
                 } T32MPUReg_NSAID;
    typedef union  T32MPUReg_NS_LUT
          { UNSG32 u32;
            struct w32MPUReg_NS_LUT;
                 } T32MPUReg_NS_LUT;
    typedef union  T32MPUReg_NS_LUT1
          { UNSG32 u32;
            struct w32MPUReg_NS_LUT1;
                 } T32MPUReg_NS_LUT1;
    typedef union  T32MPUReg_NS_LUT2
          { UNSG32 u32;
            struct w32MPUReg_NS_LUT2;
                 } T32MPUReg_NS_LUT2;
    typedef union  T32MPUReg_NS_LUT3
          { UNSG32 u32;
            struct w32MPUReg_NS_LUT3;
                 } T32MPUReg_NS_LUT3;
    typedef union  T32MPUReg_S_LUT
          { UNSG32 u32;
            struct w32MPUReg_S_LUT;
                 } T32MPUReg_S_LUT;
    typedef union  T32MPUReg_Cache
          { UNSG32 u32;
            struct w32MPUReg_Cache;
                 } T32MPUReg_Cache;
    ///////////////////////////////////////////////////////////

    typedef union  TMPUReg_Enable
          { UNSG32 u32[1];
            struct {
            struct w32MPUReg_Enable;
                   };
                 } TMPUReg_Enable;
    typedef union  TMPUReg_NSAID
          { UNSG32 u32[1];
            struct {
            struct w32MPUReg_NSAID;
                   };
                 } TMPUReg_NSAID;
    typedef union  TMPUReg_NS_LUT
          { UNSG32 u32[4];
            struct {
            struct w32MPUReg_NS_LUT;
            struct w32MPUReg_NS_LUT1;
            struct w32MPUReg_NS_LUT2;
            struct w32MPUReg_NS_LUT3;
                   };
                 } TMPUReg_NS_LUT;
    typedef union  TMPUReg_S_LUT
          { UNSG32 u32[1];
            struct {
            struct w32MPUReg_S_LUT;
                   };
                 } TMPUReg_S_LUT;
    typedef union  TMPUReg_Cache
          { UNSG32 u32[1];
            struct {
            struct w32MPUReg_Cache;
                   };
                 } TMPUReg_Cache;

    ///////////////////////////////////////////////////////////
     SIGN32 MPUReg_drvrd(SIE_MPUReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 MPUReg_drvwr(SIE_MPUReg *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void MPUReg_reset(SIE_MPUReg *p);
     SIGN32 MPUReg_cmp  (SIE_MPUReg *p, SIE_MPUReg *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define MPUReg_check(p,pie,pfx,hLOG) MPUReg_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define MPUReg_print(p,    pfx,hLOG) MPUReg_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: MPUReg
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE MPU                     biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 MPU_W
///               $MPUReg              MPU_W             REG
///     @ 0x00060                      (P)
///     # 0x00060 MPU_R
///               $MPUReg              MPU_R             REG
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     192B, bits:    1360b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_MPU
#define h_MPU (){}

    #define     RA_MPU_MPU_W                                   0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_MPU_MPU_R                                   0x0060
    ///////////////////////////////////////////////////////////

    typedef struct SIE_MPU {
    ///////////////////////////////////////////////////////////
              SIE_MPUReg                                       ie_MPU_W;
    ///////////////////////////////////////////////////////////
              SIE_MPUReg                                       ie_MPU_R;
    ///////////////////////////////////////////////////////////
    } SIE_MPU;

    ///////////////////////////////////////////////////////////
     SIGN32 MPU_drvrd(SIE_MPU *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 MPU_drvwr(SIE_MPU *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void MPU_reset(SIE_MPU *p);
     SIGN32 MPU_cmp  (SIE_MPU *p, SIE_MPU *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define MPU_check(p,pie,pfx,hLOG) MPU_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define MPU_print(p,    pfx,hLOG) MPU_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: MPU
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE MPT                     biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000                      (P)
///     # 0x00000 Bank
///               $SRAM                Bank              MEM   [32768]
///                                    ###
///                                    * 128KB SRAM
///                                    ###
///     @ 0x20000 ED_CTRL              (P)
///               %unsigned 1  En                        0x0
///                                    ###
///                                    * 0: Error detection disabled
///                                    * 1: Error detection enabled
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x20004 ED_TST               (P)
///               %unsigned 32 Flip                      0x0
///                                    ###
///                                    * A â€˜1â€™ in any of the 32-bits in this field will flip the associated written bit into the SRAM.
///                                    * Use this register to test the error detection logic.
///                                    ###
///     @ 0x20008 ED_STS               (WOC-)
///               %unsigned 1  Error                     0x0
///                                    ###
///                                    * 0 : No bit errors detected
///                                    * 1: Bit error detected
///                                    * Writing a 1 to this register will clear the error.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x2000C ED_ERR_LOG           (RW)
///               %unsigned 15 Addr                      0x0
///                                    ###
///                                    * This register logs the address of the first error detected.
///                                    * When ED_STS.Error is cleared, this register will log the next error detected after the clear.
///                                    ###
///               %%        17         # Stuffing bits...
///     @ 0x20010                      (W-)
///     #         # Stuffing bytes...
///               %% 1048448
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:  262144B, bits:      81b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_MPT
#define h_MPT (){}

    #define     RA_MPT_Bank                                    0x0000
    ///////////////////////////////////////////////////////////
    #define     RA_MPT_ED_CTRL                                 0x20000

    #define     BA_MPT_ED_CTRL_En                              0x20000
    #define     B16MPT_ED_CTRL_En                              0x20000
    #define   LSb32MPT_ED_CTRL_En                                 0
    #define   LSb16MPT_ED_CTRL_En                                 0
    #define       bMPT_ED_CTRL_En                              1
    #define   MSK32MPT_ED_CTRL_En                                 0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_MPT_ED_TST                                  0x20004

    #define     BA_MPT_ED_TST_Flip                             0x20004
    #define     B16MPT_ED_TST_Flip                             0x20004
    #define   LSb32MPT_ED_TST_Flip                                0
    #define   LSb16MPT_ED_TST_Flip                                0
    #define       bMPT_ED_TST_Flip                             32
    #define   MSK32MPT_ED_TST_Flip                                0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_MPT_ED_STS                                  0x20008

    #define     BA_MPT_ED_STS_Error                            0x20008
    #define     B16MPT_ED_STS_Error                            0x20008
    #define   LSb32MPT_ED_STS_Error                               0
    #define   LSb16MPT_ED_STS_Error                               0
    #define       bMPT_ED_STS_Error                            1
    #define   MSK32MPT_ED_STS_Error                               0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_MPT_ED_ERR_LOG                              0x2000C

    #define     BA_MPT_ED_ERR_LOG_Addr                         0x2000C
    #define     B16MPT_ED_ERR_LOG_Addr                         0x2000C
    #define   LSb32MPT_ED_ERR_LOG_Addr                            0
    #define   LSb16MPT_ED_ERR_LOG_Addr                            0
    #define       bMPT_ED_ERR_LOG_Addr                         15
    #define   MSK32MPT_ED_ERR_LOG_Addr                            0x00007FFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_MPT {
    ///////////////////////////////////////////////////////////
              SIE_SRAM                                         ie_Bank[32768];
    ///////////////////////////////////////////////////////////
    #define   GET32MPT_ED_CTRL_En(r32)                         _BFGET_(r32, 0, 0)
    #define   SET32MPT_ED_CTRL_En(r32,v)                       _BFSET_(r32, 0, 0,v)
    #define   GET16MPT_ED_CTRL_En(r16)                         _BFGET_(r16, 0, 0)
    #define   SET16MPT_ED_CTRL_En(r16,v)                       _BFSET_(r16, 0, 0,v)

    #define     w32MPT_ED_CTRL                                 {\
            UNSG32 uED_CTRL_En                                 :  1;\
            UNSG32 RSVDx20000_b1                               : 31;\
          }
    union { UNSG32 u32MPT_ED_CTRL;
            struct w32MPT_ED_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MPT_ED_TST_Flip(r32)                        _BFGET_(r32,31, 0)
    #define   SET32MPT_ED_TST_Flip(r32,v)                      _BFSET_(r32,31, 0,v)

    #define     w32MPT_ED_TST                                  {\
            UNSG32 uED_TST_Flip                                : 32;\
          }
    union { UNSG32 u32MPT_ED_TST;
            struct w32MPT_ED_TST;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MPT_ED_STS_Error(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32MPT_ED_STS_Error(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16MPT_ED_STS_Error(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16MPT_ED_STS_Error(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define     w32MPT_ED_STS                                  {\
            UNSG32 uED_STS_Error                               :  1;\
            UNSG32 RSVDx20008_b1                               : 31;\
          }
    union { UNSG32 u32MPT_ED_STS;
            struct w32MPT_ED_STS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32MPT_ED_ERR_LOG_Addr(r32)                    _BFGET_(r32,14, 0)
    #define   SET32MPT_ED_ERR_LOG_Addr(r32,v)                  _BFSET_(r32,14, 0,v)
    #define   GET16MPT_ED_ERR_LOG_Addr(r16)                    _BFGET_(r16,14, 0)
    #define   SET16MPT_ED_ERR_LOG_Addr(r16,v)                  _BFSET_(r16,14, 0,v)

    #define     w32MPT_ED_ERR_LOG                              {\
            UNSG32 uED_ERR_LOG_Addr                            : 15;\
            UNSG32 RSVDx2000C_b15                              : 17;\
          }
    union { UNSG32 u32MPT_ED_ERR_LOG;
            struct w32MPT_ED_ERR_LOG;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx20010                                  [131056];
    ///////////////////////////////////////////////////////////
    } SIE_MPT;

    typedef union  T32MPT_ED_CTRL
          { UNSG32 u32;
            struct w32MPT_ED_CTRL;
                 } T32MPT_ED_CTRL;
    typedef union  T32MPT_ED_TST
          { UNSG32 u32;
            struct w32MPT_ED_TST;
                 } T32MPT_ED_TST;
    typedef union  T32MPT_ED_STS
          { UNSG32 u32;
            struct w32MPT_ED_STS;
                 } T32MPT_ED_STS;
    typedef union  T32MPT_ED_ERR_LOG
          { UNSG32 u32;
            struct w32MPT_ED_ERR_LOG;
                 } T32MPT_ED_ERR_LOG;
    ///////////////////////////////////////////////////////////

    typedef union  TMPT_ED_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32MPT_ED_CTRL;
                   };
                 } TMPT_ED_CTRL;
    typedef union  TMPT_ED_TST
          { UNSG32 u32[1];
            struct {
            struct w32MPT_ED_TST;
                   };
                 } TMPT_ED_TST;
    typedef union  TMPT_ED_STS
          { UNSG32 u32[1];
            struct {
            struct w32MPT_ED_STS;
                   };
                 } TMPT_ED_STS;
    typedef union  TMPT_ED_ERR_LOG
          { UNSG32 u32[1];
            struct {
            struct w32MPT_ED_ERR_LOG;
                   };
                 } TMPT_ED_ERR_LOG;

    ///////////////////////////////////////////////////////////
     SIGN32 MPT_drvrd(SIE_MPT *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 MPT_drvwr(SIE_MPT *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void MPT_reset(SIE_MPT *p);
     SIGN32 MPT_cmp  (SIE_MPT *p, SIE_MPT *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define MPT_check(p,pie,pfx,hLOG) MPT_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define MPT_print(p,    pfx,hLOG) MPT_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: MPT
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: mpu.h
////////////////////////////////////////////////////////////

